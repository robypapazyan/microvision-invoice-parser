
SET SQL DIALECT 3; 

/* CREATE DATABASE 'D:\base\TESTBARBERSHOP.FDB' PAGE_SIZE 4096 DEFAULT CHARACTER SET WIN1251 */


/*  External Function declarations */
DECLARE EXTERNAL FUNCTION ADDMONTH
TIMESTAMP, INTEGER
RETURNS TIMESTAMP 
ENTRY_POINT 'addMonth' MODULE_NAME 'fbudf';

DECLARE EXTERNAL FUNCTION "ASCII_CHAR"
INTEGER
RETURNS CSTRING(1) CHARACTER SET WIN1251 FREE_IT
ENTRY_POINT 'IB_UDF_ascii_char' MODULE_NAME 'ib_udf';

DECLARE EXTERNAL FUNCTION "ASCII_VAL"
CHAR(1) CHARACTER SET WIN1251
RETURNS INTEGER BY VALUE 
ENTRY_POINT 'IB_UDF_ascii_val' MODULE_NAME 'ib_udf';

DECLARE EXTERNAL FUNCTION LTRIM
CSTRING(32767) CHARACTER SET WIN1251 NULL
RETURNS CSTRING(32767) CHARACTER SET WIN1251 FREE_IT
ENTRY_POINT 'IB_UDF_ltrim' MODULE_NAME 'ib_udf';

DECLARE EXTERNAL FUNCTION RTRIM
CSTRING(32767) CHARACTER SET WIN1251 NULL
RETURNS CSTRING(32767) CHARACTER SET WIN1251 FREE_IT
ENTRY_POINT 'IB_UDF_rtrim' MODULE_NAME 'ib_udf';

DECLARE EXTERNAL FUNCTION STRLEN
CSTRING(32767) CHARACTER SET NONE
RETURNS INTEGER BY VALUE 
ENTRY_POINT 'IB_UDF_strlen' MODULE_NAME 'ib_udf';

DECLARE EXTERNAL FUNCTION SUBSTR
CSTRING(32767) CHARACTER SET WIN1251, SMALLINT, SMALLINT
RETURNS CSTRING(32767) CHARACTER SET WIN1251 FREE_IT
ENTRY_POINT 'IB_UDF_substr' MODULE_NAME 'ib_udf';


/*  Generators or sequences */
CREATE GENERATOR G_ACTIVATIONKEY;
CREATE GENERATOR G_ADDRESSTYPE;
CREATE GENERATOR G_AGREEDDELIVERYPRICE;
CREATE GENERATOR G_APPLICATIONSETTINGS;
CREATE GENERATOR G_AREAINFO;
CREATE GENERATOR G_AREATYPE;
CREATE GENERATOR G_ATTRIBUTEBARCODE;
CREATE GENERATOR G_BARCODE;
CREATE GENERATOR G_BARCODEMASK;
CREATE GENERATOR G_BARCODEREPORT;
CREATE GENERATOR G_BILLABLETIME;
CREATE GENERATOR G_BLOCKMATERIAL;
CREATE GENERATOR G_BONUSPOINTMATERIAL;
CREATE GENERATOR G_BONUSPOINTTURNOVER;
CREATE GENERATOR G_BROCHUREDETAILID;
CREATE GENERATOR G_BROCHUREID;
CREATE GENERATOR G_CANCELATION;
CREATE GENERATOR G_CANCELATIONNUM;
CREATE GENERATOR G_CANCELATIONSUBJECTID;
CREATE GENERATOR G_CASHIMPORTEXPORT;
CREATE GENERATOR G_CATEGORY;
CREATE GENERATOR G_CATEGORYNAME;
CREATE GENERATOR G_COMMERCIALDOCUMENTNUMBER;
CREATE GENERATOR G_COMPANYNAME;
CREATE GENERATOR G_CONTAIN;
CREATE GENERATOR G_CONTAINCONTENT;
CREATE GENERATOR G_COUNTRY;
CREATE GENERATOR G_COUNTRYNAME;
CREATE GENERATOR G_CURRENCYID;
CREATE GENERATOR G_CURRENCYRATE;
CREATE GENERATOR G_CUSTOMERNUM;
CREATE GENERATOR G_DAILYMENU;
CREATE GENERATOR G_DAILYMENUNUM;
CREATE GENERATOR G_DBREADPRINT;
CREATE GENERATOR G_DBVERSIONDETAIL;
CREATE GENERATOR G_DEBITBALANCE;
CREATE GENERATOR G_DEFERREDPAYMENT;
CREATE GENERATOR G_DEFERREDPAYMENTTRANSACTION;
CREATE GENERATOR G_DELIVERYBATCH;
CREATE GENERATOR G_DELIVERYPRINTNUM;
CREATE GENERATOR G_DELIVERYTYPENAME;
CREATE GENERATOR G_DISASSEMBLY;
CREATE GENERATOR G_DOCUMENTTYPE;
CREATE GENERATOR G_DOCUMENTTYPENAME;
CREATE GENERATOR G_DONGLELEGALUSECHECK;
CREATE GENERATOR G_EARNEST;
CREATE GENERATOR G_EARNESTCONTENT;
CREATE GENERATOR G_EARNESTNUM;
CREATE GENERATOR G_EARNESTVALUE;
CREATE GENERATOR G_EDI_ORDERNUM;
CREATE GENERATOR G_EXPENCE;
CREATE GENERATOR G_EXPENCEGROUP;
CREATE GENERATOR G_EXTERNALSYSTEMORDER;
CREATE GENERATOR G_FISCALBONNUM;
CREATE GENERATOR G_FISCALDATA;
CREATE GENERATOR G_FISCALDEPARTMAN;
CREATE GENERATOR G_FISCALDEVICE;
CREATE GENERATOR G_FISCALDEVICENAME;
CREATE GENERATOR G_FISCALREPORT;
CREATE GENERATOR G_FIXPRICE;
CREATE GENERATOR G_FSOPENTRANSACTION;
CREATE GENERATOR G_FSOPENTRANSACTIONSESSIONNUM;
CREATE GENERATOR G_FSREQUEST;
CREATE GENERATOR G_GETMATERIALAVAILABILITY;
CREATE GENERATOR G_HAPPYHOUR;
CREATE GENERATOR G_H_ADRESSCARDCOUNTER;
CREATE GENERATOR G_INCOMERECIEPE;
CREATE GENERATOR G_INCOMINGORDER;
CREATE GENERATOR G_INCOMINGORDERCONTENT;
CREATE GENERATOR G_INVENTORY;
CREATE GENERATOR G_INVENTORYCONTENT;
CREATE GENERATOR G_INVENTORYMOBILE;
CREATE GENERATOR G_INVENTORYNUM;
CREATE GENERATOR G_INVNUM;
CREATE GENERATOR G_INVOICE;
CREATE GENERATOR G_INVOICECONTENT;
CREATE GENERATOR G_INVOICENUM;
CREATE GENERATOR G_ITEMRESERVATIONID;
CREATE GENERATOR G_LOCATION;
CREATE GENERATOR G_LOCATIONNAME;
CREATE GENERATOR G_LOCATIONNETSETTINGS;
CREATE GENERATOR G_LOGBLOBDATA;
CREATE GENERATOR G_LOGBONUSPOINT;
CREATE GENERATOR G_LOGPERMISSIONBACKOFFICE;
CREATE GENERATOR G_LOGPERMISSIONPOS;
CREATE GENERATOR G_LOGSECURITYROLE;
CREATE GENERATOR G_LOGSENDSALESEMAIL;
CREATE GENERATOR G_LOGUSERS;
CREATE GENERATOR G_LOTTERYSALE;
CREATE GENERATOR G_LOTTERYSALESID;
CREATE GENERATOR G_LOYALTYSYSTEMSYNCHROLOG;
CREATE GENERATOR G_MASTER;
CREATE GENERATOR G_MATERIAL;
CREATE GENERATOR G_MATERIALALTERNATIVENAME;
CREATE GENERATOR G_MATERIALATTRIBUTE1;
CREATE GENERATOR G_MATERIALATTRIBUTE1NAME;
CREATE GENERATOR G_MATERIALATTRIBUTE2;
CREATE GENERATOR G_MATERIALATTRIBUTE2NAME;
CREATE GENERATOR G_MATERIALATTRIBUTE3;
CREATE GENERATOR G_MATERIALATTRIBUTE3NAME;
CREATE GENERATOR G_MATERIALATTRIBUTE4;
CREATE GENERATOR G_MATERIALATTRIBUTE4NAME;
CREATE GENERATOR G_MATERIALATTRIBUTE5;
CREATE GENERATOR G_MATERIALATTRIBUTE5NAME;
CREATE GENERATOR G_MATERIALATTRIBUTEALIAS;
CREATE GENERATOR G_MATERIALATTRIBUTECATEGORY;
CREATE GENERATOR G_MATERIALBATCH;
CREATE GENERATOR G_MATERIALCONTENT;
CREATE GENERATOR G_MATERIALLOG;
CREATE GENERATOR G_MATERIALNAME;
CREATE GENERATOR G_MATERIALNAMEPREVIOUS;
CREATE GENERATOR G_MATERIALPARTNEREXTERNALSYSTEM;
CREATE GENERATOR G_MATERIALPROPERTY;
CREATE GENERATOR G_MATERIALQTYATTRIBUTE;
CREATE GENERATOR G_MATERIALQTYLOG;
CREATE GENERATOR G_MATERIALRESERVATION;
CREATE GENERATOR G_MATERIALSALEINFO;
CREATE GENERATOR G_MATERIALSOLDSERIALNUM;
CREATE GENERATOR G_MATERIALTYPE;
CREATE GENERATOR G_MATERIALTYPENAME;
CREATE GENERATOR G_MATERIALUNIQUE;
CREATE GENERATOR G_MODIFIER;
CREATE GENERATOR G_MODIFIERCATEGORY;
CREATE GENERATOR G_MODIFIERCONTENT;
CREATE GENERATOR G_MODIFIERLOG;
CREATE GENERATOR G_MODIFIERRECIPE;
CREATE GENERATOR G_MODIFIERTYPE;
CREATE GENERATOR G_MONEYFLOW;
CREATE GENERATOR G_MONEYFLOWAUTOACCOUNTING;
CREATE GENERATOR G_MONEYFLOWUNIT;
CREATE GENERATOR G_MONEYFLOWUNITNAME;
CREATE GENERATOR G_MONEYFLOWUNITPERMISSION;
CREATE GENERATOR G_MONEYTRANSFER;
CREATE GENERATOR G_MYCOMPANY;
CREATE GENERATOR G_NOMINAL;
CREATE GENERATOR G_OLDARTIKULNAMESID;
CREATE GENERATOR G_OPERATION1NUM;
CREATE GENERATOR G_OPERATION2NUM;
CREATE GENERATOR G_OPERATION3NUM;
CREATE GENERATOR G_OPERATIONCONTENT;
CREATE GENERATOR G_OPERATIONDOCUMENT;
CREATE GENERATOR G_OPERATIONNUM;
CREATE GENERATOR G_OPERATIONS;
CREATE GENERATOR G_OPERATIONSUNIQUENUM;
CREATE GENERATOR G_ORDERCONTENT;
CREATE GENERATOR G_ORDERSTAGE;
CREATE GENERATOR G_ORDER_T;
CREATE GENERATOR G_OUTGOINGMONEYTRANSFERNUM;
CREATE GENERATOR G_PACKAGEDISCOUNT;
CREATE GENERATOR G_PARTNER;
CREATE GENERATOR G_PARTNERCONTACT;
CREATE GENERATOR G_PARTNERCONTACTNAME;
CREATE GENERATOR G_PARTNERCONTACTPERSONALID;
CREATE GENERATOR G_PARTNERLASTSALE;
CREATE GENERATOR G_PARTNERLOCATION;
CREATE GENERATOR G_PARTNERLOCATIONNAME;
CREATE GENERATOR G_PARTNERNAME;
CREATE GENERATOR G_PARTNERNOTE;
CREATE GENERATOR G_PARTNERSETTING;
CREATE GENERATOR G_PARTNERSHORTNAME;
CREATE GENERATOR G_PARTNERTAXNUM;
CREATE GENERATOR G_PARTNERTYPE;
CREATE GENERATOR G_PARTNERTYPENAME;
CREATE GENERATOR G_PAYMENTONDELIVERYID;
CREATE GENERATOR G_PERMISSIONBACKOFFICE;
CREATE GENERATOR G_PERMISSIONBACKOFFICEDETAIL;
CREATE GENERATOR G_PERMISSIONPOS;
CREATE GENERATOR G_PERMISSIONREPORT;
CREATE GENERATOR G_PHONEORDERTEMP;
CREATE GENERATOR G_PHONEORDERTEMPCONTENT;
CREATE GENERATOR G_PHONEORDERTEMPNUM;
CREATE GENERATOR G_POSSTATEPOSID;
CREATE GENERATOR G_PRICELIST;
CREATE GENERATOR G_PRICELISTNAME;
CREATE GENERATOR G_PRICELISTPERSENTAGE;
CREATE GENERATOR G_PRICELISTREPORTINGNAME;
CREATE GENERATOR G_PRICINGPOLICY;
CREATE GENERATOR G_PRINTER;
CREATE GENERATOR G_PRINTERNAME;
CREATE GENERATOR G_PRINTOUTETIKETIORDER;
CREATE GENERATOR G_PRODUCERINFO;
CREATE GENERATOR G_PRODUCERNAME;
CREATE GENERATOR G_PRODUCTIONREQUEST;
CREATE GENERATOR G_PRODUCTIONREQUESTCONTENT;
CREATE GENERATOR G_PRODUCTIONREQUESTNUM;
CREATE GENERATOR G_PROMOTIONBARCODE;
CREATE GENERATOR G_PROMOTIONSALEPRICE;
CREATE GENERATOR G_RECIPEMODIFICATIONLOCATION;
CREATE GENERATOR G_REPORT;
CREATE GENERATOR G_REQUEST;
CREATE GENERATOR G_REQUESTCONTENT;
CREATE GENERATOR G_REQUESTNUM;
CREATE GENERATOR G_RESERVATIONNOTE;
CREATE GENERATOR G_REVALUATION;
CREATE GENERATOR G_ROWNOTE;
CREATE GENERATOR G_SALE;
CREATE GENERATOR G_SALECONTENT;
CREATE GENERATOR G_SALEDAILY;
CREATE GENERATOR G_SALEEDIT;
CREATE GENERATOR G_SALEEDITCONTENT;
CREATE GENERATOR G_SALEEXPORTLOG;
CREATE GENERATOR G_SALENUM;
CREATE GENERATOR G_SALETEMP;
CREATE GENERATOR G_SALETEMPNUM;
CREATE GENERATOR G_SCALE;
CREATE GENERATOR G_SCALENAME;
CREATE GENERATOR G_SECURITYROLE;
CREATE GENERATOR G_SECURITYROLECODE;
CREATE GENERATOR G_SERIALNUM;
CREATE GENERATOR G_SERIALNUMVALUE;
CREATE GENERATOR G_SERVICECONTRACTTYPE;
CREATE GENERATOR G_SERVICEDEVICESERIAL;
CREATE GENERATOR G_SERVICEDEVICETYPE;
CREATE GENERATOR G_SERVINGPLACE;
CREATE GENERATOR G_SERVINGPLACEPERMISSION;
CREATE GENERATOR G_SETTINGALIAS;
CREATE GENERATOR G_SOLDRECIPEINGREDIENTS;
CREATE GENERATOR G_SPECIFICATIONNAME;
CREATE GENERATOR G_SPLOCKID;
CREATE GENERATOR G_STAFFCONSUMPTION;
CREATE GENERATOR G_STAFFCONSUMPTIONCONTENT;
CREATE GENERATOR G_STAFFCONSUMPTIONNUM;
CREATE GENERATOR G_STATUSLABELORDER;
CREATE GENERATOR G_STOCKRECIPENUM;
CREATE GENERATOR G_STORAGE;
CREATE GENERATOR G_STORAGEBATCHID;
CREATE GENERATOR G_STORAGECONDITION;
CREATE GENERATOR G_STORAGECONDITIONNAME;
CREATE GENERATOR G_STORAGENAME;
CREATE GENERATOR G_STORAGEPARTNER;
CREATE GENERATOR G_STORAGESNAPSHOT;
CREATE GENERATOR G_STOREDMESSAGE;
CREATE GENERATOR G_STREETINFO;
CREATE GENERATOR G_SYNCHROINFO;
CREATE GENERATOR G_SYNCHROINFOOPERATIONNUM;
CREATE GENERATOR G_SYNCHROLOG;
CREATE GENERATOR G_SYNCHRONIZATIONLOG;
CREATE GENERATOR G_SYNCHROSALEPRECODING;
CREATE GENERATOR G_SYSLOG;
CREATE GENERATOR G_TABLELASTOPEN;
CREATE GENERATOR G_TAG;
CREATE GENERATOR G_TAGVALUE;
CREATE GENERATOR G_TAXGROUP;
CREATE GENERATOR G_TAXGROUPREPORT;
CREATE GENERATOR G_TEMPAVGINCOMEEXPENCE;
CREATE GENERATOR G_TEMPCONTAINCONTENT;
CREATE GENERATOR G_TEMPCONTAINCONTENTNUM;
CREATE GENERATOR G_TEMPFAKTURINOMERID;
CREATE GENERATOR G_TEMPINVENTORY;
CREATE GENERATOR G_TEMPINVOICENUM;
CREATE GENERATOR G_TEMPLASTDELIVERYPRICE;
CREATE GENERATOR G_TEMPOPERATION;
CREATE GENERATOR G_TEMPOPERATION1NUM;
CREATE GENERATOR G_TEMPOPERATION2NUM;
CREATE GENERATOR G_TEMPOPERATION3NUM;
CREATE GENERATOR G_TEMPOPERATIONCONTENT;
CREATE GENERATOR G_TEMPOPERATIONNUM;
CREATE GENERATOR G_TEMPPARTNERCONTACTNUM;
CREATE GENERATOR G_TEMPPARTNERNUM;
CREATE GENERATOR G_TEMPREQUEST;
CREATE GENERATOR G_TEMPREQUESTCONTENT;
CREATE GENERATOR G_TEMPREQUESTNUM;
CREATE GENERATOR G_TEMPTRANSFERNUM;
CREATE GENERATOR G_TOUCHSCREENCACHEREFRESH;
CREATE GENERATOR G_TRANSFERSTOCKRECIEPENUM;
CREATE GENERATOR G_TRANSPORTTYPE;
CREATE GENERATOR G_TRANSPORTTYPENAME;
CREATE GENERATOR G_TSCACHEREFRESH;
CREATE GENERATOR G_TURNOVERDISCOUNTID;
CREATE GENERATOR G_UOM;
CREATE GENERATOR G_UOMCONVERSION;
CREATE GENERATOR G_UOMNAME;
CREATE GENERATOR G_UPCOMINGPRICE;
CREATE GENERATOR G_USERLOGINLOG;
CREATE GENERATOR G_USERNAME;
CREATE GENERATOR G_USERPOSITION;
CREATE GENERATOR G_USERPOSITIONNAME;
CREATE GENERATOR G_USERS;
CREATE GENERATOR G_USERSCODE;
CREATE GENERATOR G_VATNUM;
CREATE GENERATOR G_VOLUMEPROMOTION;
CREATE GENERATOR G_WEBORDER;
CREATE GENERATOR G_WEBORDERCONTENT;
CREATE GENERATOR G_WEIGHTSCALE;
CREATE GENERATOR G_WORKPLACE;
CREATE GENERATOR G_WORKPLACECODE;
CREATE GENERATOR G_WORKREPORT;
CREATE GENERATOR PRINTCOUNT;

/* Domain definitions */
CREATE DOMAIN CURR4 AS NUMERIC(10, 4);
CREATE DOMAIN DARTIKUL AS VARCHAR(44);
CREATE DOMAIN DCURR AS NUMERIC(10, 2);
CREATE DOMAIN DID AS NUMERIC(18, 0);
CREATE DOMAIN DKOL AS NUMERIC(10, 3);
CREATE DOMAIN DMERNAED AS VARCHAR(5);
CREATE DOMAIN DPERC AS NUMERIC(6, 2);
CREATE DOMAIN DQTY AS NUMERIC(10, 3);
CREATE DOMAIN D_ADDRESS AS VARCHAR(80);
CREATE DOMAIN D_ARTIKULNAME AS VARCHAR(60);
CREATE DOMAIN D_DELIVERYINFO AS VARCHAR(2048);
CREATE DOMAIN D_DELIVERYNOTE AS VARCHAR(2048);
CREATE DOMAIN D_FAKTURINOTE AS VARCHAR(256);
CREATE DOMAIN D_INOBEKTIID AS VARCHAR(1024);
CREATE DOMAIN D_MATERIALNAME AS VARCHAR(60);
CREATE DOMAIN D_PARTNERNOTE AS VARCHAR(50);
CREATE DOMAIN D_PARTNERSNOTE AS VARCHAR(50);
CREATE DOMAIN D_REASON AS VARCHAR(50);

/* Table: ACTIVATIONKEY, Owner: SYSDBA */
CREATE TABLE ACTIVATIONKEY (ID DID NOT NULL,
        AMODULE INTEGER,
        ACTIVATIONKEY VARCHAR(255) NOT NULL);

/* Table: ADDRESSTYPE, Owner: SYSDBA */
CREATE TABLE ADDRESSTYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        ADDRESSTYPE VARCHAR(20) NOT NULL);

/* Table: AGREEDDELIVERYPRICE, Owner: SYSDBA */
CREATE TABLE AGREEDDELIVERYPRICE (ID NUMERIC(18, 0) NOT NULL,
        LOCATIONID INTEGER,
        STORAGEID NUMERIC(18, 0),
        MATERIALCODE INTEGER,
        AGREEDDELIVERYPRICE DCURR,
        ACTIVEFROM TIMESTAMP,
        ACTIVETO TIMESTAMP,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        ADITIONALDISCOUNTPERCENTAGE NUMERIC(6, 2) default 0 NOT NULL);

/* Table: APPLICATIONSETTINGS, Owner: SYSDBA */
CREATE TABLE APPLICATIONSETTINGS (ID INTEGER NOT NULL,
        SETTINGALIASID INTEGER NOT NULL,
        SETTINGNUM INTEGER NOT NULL,
        SETTINGVALUE BLOB SUB_TYPE TEXT SEGMENT SIZE 80 NOT NULL);

/* Table: AREAINFO, Owner: SYSDBA */
CREATE TABLE AREAINFO (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        AREATYPEID INTEGER NOT NULL,
        STREET VARCHAR(50) NOT NULL,
        ADDRESSTYPE VARCHAR(20),
        STREETCAPITALS VARCHAR(50) default ' ' NOT NULL);

/* Table: AREATYPE, Owner: SYSDBA */
CREATE TABLE AREATYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        AREA VARCHAR(20) NOT NULL,
        SERVICELOCATIONID INTEGER);

/* Table: BARCODE, Owner: SYSDBA */
CREATE TABLE BARCODE (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        STORAGEMATERIALCODE INTEGER NOT NULL,
        CODE VARCHAR(40) NOT NULL,
        MATERIALATTRIBUTE01_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE02_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE03_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE04_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE05_ID INTEGER default -1 NOT NULL,
        QTY DQTY default 0 NOT NULL);

/* Table: BARCODEMASK, Owner: SYSDBA */
CREATE TABLE BARCODEMASK (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PREFIX VARCHAR(2) NOT NULL,
        CODE VARCHAR(5),
        CHSUM VARCHAR(1),
        BATCH CHAR(1),
        QTY VARCHAR(7));

/* Table: BARCODEREPORT, Owner: SYSDBA */
CREATE TABLE BARCODEREPORT (ID INTEGER NOT NULL,
        BARCODE VARCHAR(40));

/* Table: BILLABLETIME, Owner: SYSDBA */
CREATE TABLE BILLABLETIME (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        STARTDATETIME TIMESTAMP,
        ENDDATETIME TIMESTAMP,
        USERPOSITIONID INTEGER default 0 NOT NULL);

/* Table: BLOCKMATERIAL, Owner: SYSDBA */
CREATE TABLE BLOCKMATERIAL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        DELIVERYBLOCKFROM TIMESTAMP,
        DELIVERYBLOCKTO TIMESTAMP,
        SALEBLOCKFROM TIMESTAMP,
        SALEBLOCKTO TIMESTAMP);

/* Table: BONUSPOINTMATERIAL, Owner: SYSDBA */
CREATE TABLE BONUSPOINTMATERIAL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        BONUSSCHEME VARCHAR(20) NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        COLLECTBONUSPOINT INTEGER,
        SPENDBONUSPOINT INTEGER);

/* Table: BONUSPOINTTURNOVER, Owner: SYSDBA */
CREATE TABLE BONUSPOINTTURNOVER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        BONUSSCHEME VARCHAR(30),
        BONUSPOINTBYOBOR DCURR NOT NULL,
        SPENDBONUSPOINT DCURR NOT NULL,
        BONUSPOINTMATERIALPERM CHAR(1) default '0' NOT NULL);

/* Table: BROCHURE, Owner: SYSDBA */
CREATE TABLE BROCHURE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(50) NOT NULL,
        BROCHURETYPE INTEGER NOT NULL,
        "ACTIVE" CHAR(1) NOT NULL,
        FROMDATE TIMESTAMP NOT NULL,
        TODATE TIMESTAMP NOT NULL);

/* Table: BROCHUREDETAIL, Owner: SYSDBA */
CREATE TABLE BROCHUREDETAIL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        BROCHUREID INTEGER NOT NULL,
        POINTPAYMENT DCURR,
        SETSALEPOINT DCURR,
        SALEMATERIALCODE INTEGER NOT NULL);

/* Table: CANCELATION, Owner: SYSDBA */
CREATE TABLE CANCELATION (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        CANCELATIONDATE TIMESTAMP,
        USERID INTEGER default 0 NOT NULL,
        SEVINGPLACENUM INTEGER,
        CUSTOMER INTEGER,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        QTY DQTY,
        SALEPRICE DCURR,
        OPERATIONUSERID INTEGER default 0 NOT NULL,
        NUM INTEGER default 0 NOT NULL,
        POS VARCHAR(10),
        ORDERPRINTED CHAR(1),
        CHECKPRINTED CHAR(1),
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        DATEOPEN DATE,
        TIMEOPEN TIME,
        CANCELATIONSUBJECT D_REASON,
        SALENUM INTEGER,
        OPERATIONID SMALLINT,
        SPECIFICATION VARCHAR(40),
        NAPCODE VARCHAR(22),
        DEFAULTSALEPRICE DCURR);

/* Table: CANCELATIONSUBJECT, Owner: SYSDBA */
CREATE TABLE CANCELATIONSUBJECT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SUBJECT D_REASON NOT NULL);

/* Table: CASHIMPORTEXPORT, Owner: SYSDBA */
CREATE TABLE CASHIMPORTEXPORT (ID INTEGER,
        LOCATIONID INTEGER,
        DATESAVE TIMESTAMP,
        USERNAME VARCHAR(50),
        DEVICENAME VARCHAR(50),
        TYPEACTION VARCHAR(20),
        AMOUNT DCURR,
        NOTE VARCHAR(200),
        POSNAME VARCHAR(30));

/* Table: CATEGORY, Owner: SYSDBA */
CREATE TABLE CATEGORY (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NUM INTEGER NOT NULL,
        NAME VARCHAR(20) NOT NULL,
        CATEGORY VARCHAR(50) NOT NULL,
        INITIALMATERIALNUM INTEGER,
        ENDMATERIALNUM INTEGER,
        LOCKEDTURNOVERDISCOUNT CHAR(1) default '0' NOT NULL,
        BONUSPOINTSALEADD INTEGER default 0 NOT NULL,
        BONUSPOINTSALEDELIVERY INTEGER default 0 NOT NULL,
        DEBITBALANCEPLUS CHAR(1) default '0' NOT NULL,
        DEBITBALANCEMINUS CHAR(1) default '0' NOT NULL,
        PRICELISTLOCK CHAR(1) default '0' NOT NULL,
        NOTE VARCHAR(30),
        PRICELISTID NUMERIC(18, 0),
        COLOR INTEGER,
        ORDERID VARCHAR(10),
        POSACTIVE CHAR(1) default '1',
        FULLNAME VARCHAR(500),
        ALTERNATIVNAME VARCHAR(20));

/* Table: CATEGORYNAME, Owner: SYSDBA */
CREATE TABLE CATEGORYNAME (ID INTEGER NOT NULL,
        CATEGORYNAME VARCHAR(255));

/* Table: CODEMASK, Owner: SYSDBA */
CREATE TABLE CODEMASK (ID INTEGER NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(50),
        MASK VARCHAR(100),
        BSTART VARCHAR(10),
        DECIMALP INTEGER NOT NULL,
        BTEST VARCHAR(100),
        "ACTIVE" INTEGER);

/* Table: COMPANYNAME, Owner: SYSDBA */
CREATE TABLE COMPANYNAME (ID INTEGER NOT NULL,
        COMPANYNAME VARCHAR(50));

/* Table: COUNTRY, Owner: SYSDBA */
CREATE TABLE COUNTRY (ID INTEGER,
        LOCATIONID INTEGER,
        NAME VARCHAR(50));

/* Table: COUNTRYNAME, Owner: SYSDBA */
CREATE TABLE COUNTRYNAME (ID INTEGER NOT NULL,
        NAME VARCHAR(50));

/* Table: CURRENCY, Owner: SYSDBA */
CREATE TABLE CURRENCY (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(15) NOT NULL,
        DEFAULTCURRENCY CHAR(1) default '0' NOT NULL);

/* Table: CURRENCYRATE, Owner: SYSDBA */
CREATE TABLE CURRENCYRATE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SOURCECURRENCYTYPEID INTEGER NOT NULL,
        DESTINATIONCURRENCYTYPEID INTEGER NOT NULL,
        RATE FLOAT NOT NULL);

/* Table: DAILYMENU, Owner: SYSDBA */
CREATE TABLE DAILYMENU (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        DATEACTIVE DATE NOT NULL,
        MENUNAME VARCHAR(50),
        MENUTYPE SMALLINT default 0 NOT NULL,
        BLOCKED INTEGER default 0 NOT NULL,
        NUM INTEGER NOT NULL);

/* Table: DBREADPRINT, Owner: SYSDBA */
CREATE TABLE DBREADPRINT (ID INTEGER NOT NULL,
        PRINTSERVERNAME VARCHAR(30) NOT NULL,
        PRINTERNAME VARCHAR(20) NOT NULL,
        SETTINGVALUE BLOB SUB_TYPE TEXT SEGMENT SIZE 80 NOT NULL);

/* Table: DBVERSION, Owner: SYSDBA */
CREATE TABLE DBVERSION (DBVERSION INTEGER,
        NUMDIGGITQTY INTEGER,
        NUMDIGGITPRICE INTEGER,
        PRICEMASK VARCHAR(10),
        QTYMASK VARCHAR(10),
        OVERCHARGECALCULATIONMETHOD CHAR(1),
        DBTYPE CHAR(1),
        NEGATIVEQTYALLOWED CHAR(1),
        MULTISTORAGEMODE CHAR(1),
        DBSTATUS CHAR(1),
        FIXPRICESTATUS CHAR(1),
        FIFO CHAR(1),
        SOLDRECIPEINGREDIENTSSTATUS CHAR(1),
        MAJORVERSION INTEGER,
        MINORVERSION INTEGER,
        MATERIALATTRIBUTESTATUS CHAR(1) default '0',
        BUILDVERSION INTEGER,
        CHECKPRICETYPE INTEGER default 0);

/* Table: DBVERSIONDETAIL, Owner: SYSDBA */
CREATE TABLE DBVERSIONDETAIL (ID INTEGER NOT NULL,
        OBJECTTYPE VARCHAR(20) NOT NULL,
        NAME VARCHAR(100) NOT NULL,
        VERSIONNUM INTEGER NOT NULL,
        FROMDATE DATE NOT NULL);

/* Table: DEBITBALANCE, Owner: SYSDBA */
CREATE TABLE DEBITBALANCE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        OPERATIONID INTEGER NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERLOACATIONNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTNAMEID INTEGER default 0 NOT NULL,
        SUMDEBIT DCURR NOT NULL,
        SALENUM INTEGER,
        SUMDEBITBALANCE DCURR,
        POS VARCHAR(10),
        LOCATIONNAMECARDCENTERID INTEGER default 0 NOT NULL);

/* Table: DEFERREDPAYMENT, Owner: SYSDBA */
CREATE TABLE DEFERREDPAYMENT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PARTNERNUM INTEGER NOT NULL,
        PARTNERLOCATIONNUM INTEGER NOT NULL,
        PARTNERCONTACTNUM INTEGER NOT NULL,
        SALENUM INTEGER,
        SALEDATE TIMESTAMP,
        DPSUM DCURR,
        DATERETURN DATE,
        USERNAME VARCHAR(50),
        OPERATIONTYPEID SMALLINT,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTDATE DATE,
        DOCUMENTTYPE VARCHAR(20),
        DBTYPE SMALLINT default -1 NOT NULL,
        LASTDELIVERYPRICESUM DCURR default 0 NOT NULL,
        AVGDELIVERYPRICESUM DCURR default 0 NOT NULL,
        DEFERREDPAYMENTNOTE1 VARCHAR(50),
        DEFERREDPAYMENTNOTE2 VARCHAR(50));

/* Table: DEFERREDPAYMENTTRANSACTION, Owner: SYSDBA */
CREATE TABLE DEFERREDPAYMENTTRANSACTION (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        DATEPAYMENT TIMESTAMP,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTNAMEID INTEGER default 0 NOT NULL,
        USERID INTEGER default 0 NOT NULL,
        SUMPAYED DCURR,
        SUMDEFERREDPAYMENT DCURR,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTDATE DATE,
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        SALENUM INTEGER,
        SALEDATE TIMESTAMP,
        NOTE VARCHAR(30),
        PAYMENTDATE DATE,
        PAYEDDOCUMENTNUM NUMERIC(18, 0),
        PAYEDDOCUMENTSUM DCURR,
        LASTDELIVERYPRICESUM DCURR default 0 NOT NULL,
        AVGDELIVERYPRICESUM DCURR default 0 NOT NULL,
        OPERATIONTYPEID SMALLINT default 0 NOT NULL,
        DEFERREDPAYMENTNOTE1 VARCHAR(50),
        DEFERREDPAYMENTNOTE2 VARCHAR(50),
        REPORTINGDATE DATE,
        MONEYFLOWUNITID INTEGER,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL);

/* Table: DELIVERYBATCH, Owner: SYSDBA */
CREATE TABLE DELIVERYBATCH (ID DID NOT NULL,
        LOCATIONID INTEGER,
        DELIVERYDATE TIMESTAMP,
        STORAGEID DID,
        MATERIALCODE INTEGER,
        QTY DQTY,
        PRICE DCURR);

/* Table: DELIVERYTYPENAME, Owner: SYSDBA */
CREATE TABLE DELIVERYTYPENAME (ID INTEGER NOT NULL,
        DELIVERYTYPE VARCHAR(20));

/* Table: DOCUMENTTYPE, Owner: SYSDBA */
CREATE TABLE DOCUMENTTYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(20) NOT NULL);

/* Table: DOCUMENTTYPENAME, Owner: SYSDBA */
CREATE TABLE DOCUMENTTYPENAME (ID INTEGER NOT NULL,
        DOCUMENTTYPE VARCHAR(20));

/* Table: DONGLELEGALUSECHECK, Owner: SYSDBA */
CREATE TABLE DONGLELEGALUSECHECK (ID INTEGER NOT NULL,
        DONGLENUM INTEGER NOT NULL,
        APPID INTEGER,
        APPNAME VARCHAR(30) default 'MistralPos' NOT NULL);

/* Table: EARNEST, Owner: SYSDBA */
CREATE TABLE EARNEST (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        DATECLOSE TIMESTAMP,
        SALENUM INTEGER,
        SURCHARGESUM DCURR,
        FISCAL CHAR(1) NOT NULL,
        PAYEDSUM DCURR default 0 NOT NULL,
        CANCELATIONSTATUS CHAR(1) default '0' NOT NULL);

/* Table: EARNESTCONTENT, Owner: SYSDBA */
CREATE TABLE EARNESTCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER NOT NULL,
        UOMID INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        PAYED DCURR NOT NULL);

/* Table: EARNESTVALUE, Owner: SYSDBA */
CREATE TABLE EARNESTVALUE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER NOT NULL,
        DATESAVE TIMESTAMP,
        USERNAMEID INTEGER NOT NULL,
        EARNESTSUM DCURR NOT NULL,
        SALENUM INTEGER,
        DATECLOSE TIMESTAMP,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        NOTE VARCHAR(256),
        SALEMATERIALCODE INTEGER);

/* Table: EXPENCE, Owner: SYSDBA */
CREATE TABLE EXPENCE (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        EXPENCEDATE TIMESTAMP,
        EXPENCENAME VARCHAR(50),
        EXPENCESUM DCURR,
        QTY DQTY,
        UOMID INTEGER default 0 NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        NOTE VARCHAR(30),
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default - 1 NOT NULL,
        MONEYFLOWUNITID INTEGER default 0 NOT NULL,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTID INTEGER default 0 NOT NULL,
        REPORTINGDATE DATE,
        OPERATIONTYPE SMALLINT default 12 NOT NULL);

/* Table: EXPENCEGROUP, Owner: SYSDBA */
CREATE TABLE EXPENCEGROUP (ID DID NOT NULL,
        LOCATIONID INTEGER,
        EXPENCE VARCHAR(50) NOT NULL,
        UOMID INTEGER);

/* Table: EXPORTHISTORY, Owner: SYSDBA */
CREATE TABLE EXPORTHISTORY (LOCATIONID INTEGER,
        LOGID DID);

/* Table: EXTERNALSYSTEMORDER, Owner: SYSDBA */
CREATE TABLE EXTERNALSYSTEMORDER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        ORDERNUM VARCHAR(20) NOT NULL,
        ORDERDATE DATE,
        DELIVERYDATE DATE,
        PARTNERNUM INTEGER,
        PARTNERNAME VARCHAR(500),
        DELIVERYNUM INTEGER NOT NULL,
        SALENUM INTEGER,
        DATESAVE TIMESTAMP,
        DBTYPE SMALLINT NOT NULL,
        SYSTEMNAME SMALLINT default 0 NOT NULL);

/* Table: FISCALDATA, Owner: SYSDBA */
CREATE TABLE FISCALDATA (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SALENUM INTEGER NOT NULL,
        FISCALDATE TIMESTAMP,
        FISCALSERIAL VARCHAR(10),
        FISCALMEMORY VARCHAR(10),
        FISCALNUM VARCHAR(12),
        FISCALAMOUNT DCURR);

/* Table: FISCALDEPARTMANT, Owner: SYSDBA */
CREATE TABLE FISCALDEPARTMANT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(30) NOT NULL,
        FUNUM INTEGER);

/* Table: FISCALDEVICE, Owner: SYSDBA */
CREATE TABLE FISCALDEVICE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        FISCALDEVICENAME VARCHAR(20) NOT NULL,
        DEFAULTDEVICE CHAR(1),
        COMPANYOWNER VARCHAR(50));

/* Table: FISCALDEVICENAME, Owner: SYSDBA */
CREATE TABLE FISCALDEVICENAME (ID INTEGER NOT NULL,
        FISCALDEVICENAME VARCHAR(20));

/* Table: FISCALNUMERATOR, Owner: SYSDBA */
CREATE TABLE FISCALNUMERATOR (FISCALSERIAL VARCHAR(10),
        SALENUM INTEGER NOT NULL);

/* Table: FISCALREPORT, Owner: SYSDBA */
CREATE TABLE FISCALREPORT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        REPORTDATE TIMESTAMP,
        FISCALDEVICENAMEID INTEGER default 0 NOT NULL,
        POS VARCHAR(10),
        FDSERIALNUM VARCHAR(25));

/* Table: FIXPRICE, Owner: SYSDBA */
CREATE TABLE FIXPRICE (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SALEMATERIALCODE INTEGER NOT NULL,
        FIXPRICE DCURR);

/* Table: FSOPENTRANSACTION, Owner: SYSDBA */
CREATE TABLE FSOPENTRANSACTION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SESSIONNO INTEGER NOT NULL);

/* Table: FSREQUEST, Owner: SYSDBA */
CREATE TABLE FSREQUEST (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0),
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL);

/* Table: GETMATERIALAVAILABILITY, Owner: SYSDBA */
CREATE TABLE GETMATERIALAVAILABILITY (GVALUE INTEGER default 0 NOT NULL);

/* Table: HAPPYHOUR, Owner: SYSDBA */
CREATE TABLE HAPPYHOUR (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SCHEMENAME VARCHAR(30),
        INITIALHOUR TIME NOT NULL,
        ENDHOUR TIME NOT NULL,
        PRICELISTID NUMERIC(18, 0) NOT NULL);

/* Table: INCOMINGORDER, Owner: SYSDBA */
CREATE TABLE INCOMINGORDER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        DELIVERYDATE TIMESTAMP,
        PRICELISTNAME VARCHAR(20),
        DELIVERYTIMEFROM TIME,
        DELIVERYTIMETO TIME,
        DELIVERYNOTE VARCHAR(50),
        DELIVERYADDRESS VARCHAR(50),
        DELIVERYCONTACTNAME VARCHAR(50),
        DELIVERYCONTACTPHONE VARCHAR(30),
        USERNAMEID INTEGER default -1 NOT NULL);

/* Table: INCOMINGORDERCONTENT, Owner: SYSDBA */
CREATE TABLE INCOMINGORDERCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        INCOMINGORDERID INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        PRICE DCURR NOT NULL,
        QTY DQTY NOT NULL,
        PERFORMSTATUS CHAR(1) default '0' NOT NULL,
        CATEGORYNAMEID INTEGER default 0 NOT NULL,
        AVGDELIVERYPRICE DCURR,
        LASTDELIVERYPRICE DCURR,
        BATCH VARCHAR(20));

/* Table: INVENTORY, Owner: SYSDBA */
CREATE TABLE INVENTORY (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        INVENTORYNUM INTEGER default 0 NOT NULL,
        DATEINVENTORY TIMESTAMP,
        STORAGENAMEID INTEGER default 0 NOT NULL,
        USERID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        MATERIALCOUNT INTEGER,
        CHECKEDMATERIALCOUNT INTEGER,
        DATESTART TIMESTAMP,
        PARTNER VARCHAR(50),
        PARTNERID INTEGER,
        DATESAVED TIMESTAMP DEFAULT CURRENT_TIMESTAMP);

/* Table: INVENTORYCONTENT, Owner: SYSDBA */
CREATE TABLE INVENTORYCONTENT (ID DID NOT NULL,
        INVENTORYNUM INTEGER NOT NULL,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        SEARCHQTY DQTY,
        QTYFOUND DQTY,
        DIFFERENCEQTY DQTY,
        DIFFERENCEMONEY DCURR,
        AVGDELIVERYPRICE DCURR,
        SALEPRICE DCURR,
        CATEGORYID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE01NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE02NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE03NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE04NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE05NAMEID INTEGER default 0 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        BARCODEID INTEGER default 0 NOT NULL,
        ROWNOTEID INTEGER default 0 NOT NULL,
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        BATCH VARCHAR(20),
        MATERIALTYPEID INTEGER default 0 NOT NULL,
        AVGDELIVERYPRICEWOTAX DCURR,
        LASTDELIVERYPRICEWOTAX DCURR);

/* Table: INVENTORYMOBILE, Owner: SYSDBA */
CREATE TABLE INVENTORYMOBILE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        INPUTQTY DQTY NOT NULL,
        BATCH VARCHAR(20),
        MATERIALATTRIBUTE01_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE02_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE03_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE04_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE05_ID INTEGER default -1 NOT NULL);

/* Table: INVOICE, Owner: SYSDBA */
CREATE TABLE INVOICE (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER,
        NUM INTEGER NOT NULL,
        INVOICENUM NUMERIC(18, 0),
        DATESAVE TIMESTAMP,
        DATEINVOICE DATE,
        PLACE VARCHAR(20),
        DELIVERYDATE DATE,
        PAYMENTMETHOD CHAR(1),
        INVOICETYPE INTEGER,
        R_NAME VARCHAR(200),
        R_CITY VARCHAR(30),
        R_ADDRESS VARCHAR(200),
        R_TAXNUM VARCHAR(20),
        R_RESPONSIBLEPERSON VARCHAR(40),
        R_BANKACCOUNT VARCHAR(24),
        R_BANKCODE VARCHAR(20),
        R_BANKNAME VARCHAR(30),
        R_RECIEVEDFROM VARCHAR(50),
        R_IDCARD VARCHAR(20),
        R_VATNUM VARCHAR(50),
        D_NAME VARCHAR(200),
        D_CITY VARCHAR(30),
        D_ADDRESS VARCHAR(200),
        D_TAXNUM VARCHAR(20),
        D_RESPONSIBLEPERSON VARCHAR(40),
        D_BANKACCOUNT VARCHAR(24),
        D_BANKCODE VARCHAR(20),
        D_BANKNAME VARCHAR(30),
        D_DELIVEREDBY VARCHAR(50),
        D_VATNUM VARCHAR(50),
        TAXNOTE VARCHAR(30),
        TAXNOTESUBJECT VARCHAR(40),
        TAXNOTETYPE CHAR(1),
        DOWNPAYMENTTYPE CHAR(1),
        DOWNPAYMENTPERCENTAGE DPERC,
        DOWNPAYMENTNOTE VARCHAR(40),
        CANCELATION CHAR(1) default '0' NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        LOCATIONRECIEVER VARCHAR(30),
        R_SHORTNAME VARCHAR(25),
        VATSUM DCURR default 0 NOT NULL,
        PAYMENTDATE DATE,
        R_PARTNERNUM INTEGER,
        D_PARTNERNUM INTEGER,
        USERNAMEID INTEGER default 0,
        POS VARCHAR(10),
        OPERATIONID SMALLINT default 0 NOT NULL,
        R_POSTALCODE VARCHAR(10),
        D_POSTALCODE VARCHAR(10),
        INVOICEFREENOTE1 D_FAKTURINOTE,
        INVOICEFREENOTE2 D_FAKTURINOTE);

/* Table: INVOICECONTENT, Owner: SYSDBA */
CREATE TABLE INVOICECONTENT (ID DID NOT NULL,
        INVOICENUMID DID NOT NULL,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        QTY DQTY,
        SALEPRICE CURR4,
        MATERIALSUM DCURR,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        BATCH VARCHAR(20),
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        BESTBEFORE DATE,
        DELIVERYNUM INTEGER,
        SERIALNUMVALUEID INTEGER default 0 NOT NULL,
        WARRANTY DATE,
        CATEGORYNAMEID INTEGER default 0 NOT NULL,
        TAXGROUP CHAR(1),
        TAXPERCENTAGE DCURR);

/* Table: INVOICETOTAL, Owner: SYSDBA */
CREATE TABLE INVOICETOTAL (LOCATIONNAMEID INTEGER,
        NUM INTEGER NOT NULL,
        INVOICENUM NUMERIC(18, 0),
        TOTAL DCURR default 0 NOT NULL,
        VATTOTAL DCURR default 0 NOT NULL,
        TAXGROUP CHAR(1),
        TAXPERCENTAGE NUMERIC(10, 2));

/* Table: ITEMRESERVATION, Owner: SYSDBA */
CREATE TABLE ITEMRESERVATION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        QTY DQTY NOT NULL,
        STATUS SMALLINT NOT NULL,
        EXTERNALSYSTEMID VARCHAR(20) default '' NOT NULL,
        SALEMATERIALCODE INTEGER);

/* Table: KEYFS, Owner: SYSDBA */
CREATE TABLE KEYFS (DEVICEID VARCHAR(150) NOT NULL,
        KEYFS VARCHAR(255) NOT NULL);

/* Table: KEYM, Owner: SYSDBA */
CREATE TABLE KEYM (DEVICEID VARCHAR(150) NOT NULL,
        MSKEY VARCHAR(255) NOT NULL);

/* Table: LOCATION, Owner: SYSDBA */
CREATE TABLE LOCATION (ID INTEGER NOT NULL,
        NAME VARCHAR(30) NOT NULL,
        DEFAULTLOCATION CHAR(1),
        DBTYPE CHAR(1),
        SALEINITIALNUM INTEGER,
        SALEFINALNUM INTEGER,
        DBPATH VARCHAR(255),
        MATERIALQTYLOG CHAR(1) default '1' NOT NULL,
        STOPPED INTEGER default 0,
        CLOSED INTEGER default 0,
        DIRECTWORK INTEGER default 0,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTSTOPPED TIMESTAMP,
        DATELASTLOGIN TIMESTAMP,
        CODEUSERCREATED VARCHAR(10),
        ADDRES VARCHAR(255),
        STARTWORKINGTIME TIME,
        ENDWORKINGTIME TIME,
        TYEPID INTEGER default 0 NOT NULL);

/* Table: LOCATIONGROUP, Owner: SYSDBA */
CREATE TABLE LOCATIONGROUP (ID INTEGER NOT NULL,
        NAME VARCHAR(30) NOT NULL,
        GROUPNAME VARCHAR(50),
        PARTNERNUM INTEGER,
        PARTNERLOCATIONNUM INTEGER);

/* Table: LOCATIONNAME, Owner: SYSDBA */
CREATE TABLE LOCATIONNAME (ID INTEGER NOT NULL,
        LOCATION VARCHAR(30));

/* Table: LOCATIONNETSETTINGS, Owner: SYSDBA */
CREATE TABLE LOCATIONNETSETTINGS (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        IDENTLOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(30) NOT NULL,
        IP VARCHAR(512),
        PORT VARCHAR(10),
        DBPATH VARCHAR(512),
        DBUSER_NAME VARCHAR(512),
        DBPASSWORD VARCHAR(512),
        DBTYPE CHAR(1),
        SALE CHAR(1) default '1' NOT NULL,
        RESERVATION CHAR(1) default '1' NOT NULL,
        AUTHORIZATIONTYPE CHAR(1) default '1',
        BLOCKED CHAR(1) default '1' NOT NULL);

/* Table: LOCATIONTYPE, Owner: SYSDBA */
CREATE TABLE LOCATIONTYPE (ID INTEGER NOT NULL,
        NAME VARCHAR(30) NOT NULL);

/* Table: LOGBLOBDATA, Owner: SYSDBA */
CREATE TABLE LOGBLOBDATA (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        LOGCHANGEID INTEGER NOT NULL,
        BLOBDATA BLOB SUB_TYPE 0 SEGMENT SIZE 80 NOT NULL);

/* Table: LOGBONUSPOINT, Owner: SYSDBA */
CREATE TABLE LOGBONUSPOINT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        OPERATIONTYPEID SMALLINT,
        USERNAMEID INTEGER default -1 NOT NULL,
        SALENUM INTEGER,
        BONUSPOINTDELTA INTEGER,
        BONUSPOINTBEFORECHANGE INTEGER);

/* Table: LOGPERMISSIONBACKOFFICE, Owner: SYSDBA */
CREATE TABLE LOGPERMISSIONBACKOFFICE (LOGID DID NOT NULL,
        LOGUSERID INTEGER,
        LOGDATE TIMESTAMP default current_date,
        IDFROMLOG DID NOT NULL,
        LOCATIONID INTEGER,
        FUNCTIONALITY VARCHAR(100),
        USERPASS VARCHAR(50),
        SECURITYROLEID DID);

/* Table: LOGPERMISSIONPOS, Owner: SYSDBA */
CREATE TABLE LOGPERMISSIONPOS (LOGID DID NOT NULL,
        LOGUSERID INTEGER,
        LOGDATE TIMESTAMP default current_date,
        IDFROMLOG DID NOT NULL,
        LOCATIONID INTEGER,
        FUNCTIONALITY VARCHAR(100),
        USERPASS VARCHAR(50),
        SECURITYROLEID DID);

/* Table: LOGSECURITYROLE, Owner: SYSDBA */
CREATE TABLE LOGSECURITYROLE (LOGID DID NOT NULL,
        LOGUSERID INTEGER,
        LOGDATE TIMESTAMP default current_date,
        ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(50) NOT NULL,
        CODE VARCHAR(10) NOT NULL,
        BLOCKED CHAR(1) default '0' NOT NULL,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTBLOCKED DATE,
        CODEUSERCREATED VARCHAR(10));

/* Table: LOGUSERS, Owner: SYSDBA */
CREATE TABLE LOGUSERS (LOGID DID NOT NULL,
        LOGUSERID INTEGER,
        LOGDATE TIMESTAMP default current_date,
        ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(50) NOT NULL,
        PASS VARCHAR(50) NOT NULL,
        ACCOUNTTYPE SMALLINT,
        SECONDNAME VARCHAR(50),
        ACTIVEPRICELISTID NUMERIC(18, 0),
        LASTLOGIN TIMESTAMP,
        SECONDPASS VARCHAR(50),
        CODE VARCHAR(10),
        "FIRSTNAME" VARCHAR(50),
        "MIDDLENAME" VARCHAR(50),
        "LASTNAME" VARCHAR(50),
        SECURITYROLEID DID,
        BLOCKED CHAR(1) default '0' NOT NULL,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTBLOCKED TIMESTAMP,
        CODEUSERCREATED VARCHAR(10));

/* Table: LOTTERYSALE, Owner: SYSDBA */
CREATE TABLE LOTTERYSALE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALID INTEGER default 0 NOT NULL,
        SERIALNUM VARCHAR(20),
        SALENUM INTEGER NOT NULL,
        DATESENT TIMESTAMP);

/* Table: LOYALTYSYSTEMSYNCHROLOG, Owner: SYSDBA */
CREATE TABLE LOYALTYSYSTEMSYNCHROLOG (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        LOYALTYCARDID VARCHAR(20) NOT NULL,
        SALENUM INTEGER NOT NULL,
        MATERIALID INTEGER default 0 NOT NULL,
        QTY DQTY NOT NULL,
        SALEPRICE DCURR NOT NULL,
        DISCOUNTRATE NUMERIC(6, 2) NOT NULL,
        USERNAMEID INTEGER NOT NULL,
        DATESEND TIMESTAMP,
        STATUS SMALLINT NOT NULL,
        MATERIALCODE INTEGER,
        DEFAULTSALEPRICE DCURR,
        DISCOUNTTYPE SMALLINT default 0 NOT NULL,
        RECIEVEDISCOUNTOPTION CHAR(1) default 0 NOT NULL);

/* Table: MATERIAL, Owner: SYSDBA */
CREATE TABLE MATERIAL (ID DID NOT NULL,
        LOCATIONID INTEGER,
        STORAGEID DID NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIAL D_MATERIALNAME,
        QTY DQTY,
        UOMID INTEGER,
        AVGDELIVERYPRICE DCURR default 0 NOT NULL,
        LASTDELIVERYPRICE DCURR default 0 NOT NULL,
        SEARCHNAME D_MATERIALNAME,
        CANSALE CHAR(1),
        SALEMATERIALCODE INTEGER,
        MATERIALTYPENAMEID DID,
        STORAGECONDITIONID DID,
        PRODUCERID DID,
        MINQTYSALERESTRICTION DQTY,
        PRODUCERDOCUMENT VARCHAR(40),
        CHANGEDELIVERYPRICE CHAR(1) default '1' NOT NULL,
        TAXGROUPID INTEGER,
        MATERIALALTERNATIVENAME D_MATERIALNAME,
        BATCHSTATUS CHAR(1) default 0 NOT NULL,
        AVGDELIVERYPRICEBEFORECHANGE DCURR,
        DELIVERYBLOCK CHAR(1) default '0' NOT NULL,
        WASTEBLOCK CHAR(1) default '0' NOT NULL,
        TRANSFERBLOCK CHAR(1) default '0' NOT NULL,
        REQUESTBLOCK CHAR(1) default '0' NOT NULL,
        RETURNBLOCK CHAR(1) default '0' NOT NULL,
        SALEBLOCK CHAR(1) default 0 NOT NULL,
        SCALENAME VARCHAR(20),
        MISTRALMBLOCK CHAR(1) default '0' NOT NULL,
        AVGDELIVERYPRICE1 DCURR,
        LASTDELIVERYPRICE1 DCURR,
        AVGDELIVERYPRICEBEFORECHANGE1 DCURR,
        INVENTORYBLOCK CHAR(1) default '0' NOT NULL,
        STORAGECATEGORYID INTEGER,
        AVGDELIVERYPRICEWOTAX DCURR,
        LASTDELIVERYPRICEWOTAX DCURR,
        AVGDPRICEWOTAXPREVIOUS DCURR,
        ADDITIONALFIELD CHAR(1) default '0',
        "ACTIVE" CHAR(1) default '1' NOT NULL,
        MODIFIERREQUIRED CHAR(1) default 0,
        MANDATORYMODIFIERNUM INTEGER,
        PREPARATIONTIME SMALLINT,
        MODIFICATIONSTATUS CHAR(1) default '0',
        NUMPORTION DQTY default 1,
        WEIGHTSALE CHAR(1) default '0',
        PRODUCTIONSCHEMEACTIVE CHAR(1) default '1',
        PRODUCTIONDELIVERY DCURR,
        PREDICTEDDELIVERY DCURR,
        DYNAMICCONTENT CHAR(1) default '0',
        KINDTYPE NUMERIC(18, 0) default 0 NOT NULL,
        UNIQUECODE BIGINT NOT NULL,
        CATEGORY VARCHAR(50),
        LASTEDITUSERID INTEGER,
        LASTOPERATIONID SMALLINT default 0 NOT NULL,
        LASTEDITDATE TIMESTAMP,
        LASTDELIVERYDATE TIMESTAMP,
        LASTINVENTORYDATE TIMESTAMP,
        LASTWASTEDATE TIMESTAMP,
        LASTRETURNDATE TIMESTAMP,
        LASTSALEDATE TIMESTAMP,
        LASTTRANSFERDATE TIMESTAMP,
        GROSS DQTY,
        NET DQTY default 0,
        CONTAINER DQTY default 0,
        TRANSPORTPACK DQTY,
        PACKAGEQTY DQTY,
        TOLERANCE DQTY,
        MINORDERQTY DQTY,
        SPECIFICATION VARCHAR(40),
        QUALITY VARCHAR(5),
        MINQTY DQTY,
        OPTIMALQTY DQTY,
        COUNRTYORIGINID INTEGER,
        DISCOUNTPERCENTAGE NUMERIC(6, 2),
        EXPIRATIONDATE INTEGER,
        ALLERGENS VARCHAR(512),
        DESCRIPTION VARCHAR(512),
        CONTENT VARCHAR(512),
        IDUOMNETQTY INTEGER,
        ESLID VARCHAR(100),
        WAREHOUSELOCATIONID INTEGER,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        DEFAULTPARTNERNUM INTEGER default -1 NOT NULL,
        DEFAULTPARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        DEFAULTPARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        ALTERNATIVESUPPLIERNUM INTEGER default -1 NOT NULL,
        ALTERNATIVESUPPLIERLOCATIONID INTEGER default -1 NOT NULL,
        ALTERNATIVESUPPLIERCONTACTID INTEGER default -1 NOT NULL);

/* Table: MATERIALADDON, Owner: SYSDBA */
CREATE TABLE MATERIALADDON (MATERIALUNIQUECODE BIGINT NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SOURCEUNIQUECODE BIGINT NOT NULL,
        SOURCESTORAGEID DID,
        QTY DQTY NOT NULL,
        PRICE DCURR NOT NULL,
        ADDPOSITION INTEGER,
        ATTACHED INTEGER);

/* Table: MATERIALALTERNATIVENAME, Owner: SYSDBA */
CREATE TABLE MATERIALALTERNATIVENAME (ID INTEGER NOT NULL,
        MATERIALALTERNATIVENAME D_MATERIALNAME);

/* Table: MATERIALALTERNATIVVAT, Owner: SYSDBA */
CREATE TABLE MATERIALALTERNATIVVAT (LOCATIONID INTEGER,
        MATERIALUNIQUECODE BIGINT NOT NULL,
        TAXGROUPID INTEGER);

/* Table: MATERIALATTRIBUTE1, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE1 (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(25) NOT NULL);

/* Table: MATERIALATTRIBUTE1NAME, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE1NAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MATERIALATTRIBUTE2, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE2 (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(25) NOT NULL);

/* Table: MATERIALATTRIBUTE2NAME, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE2NAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MATERIALATTRIBUTE3, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE3 (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(25) NOT NULL);

/* Table: MATERIALATTRIBUTE3NAME, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE3NAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MATERIALATTRIBUTE4, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE4 (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(25) NOT NULL);

/* Table: MATERIALATTRIBUTE4NAME, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE4NAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MATERIALATTRIBUTE5, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE5 (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(25) NOT NULL);

/* Table: MATERIALATTRIBUTE5NAME, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTE5NAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MATERIALATTRIBUTEALIAS, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTEALIAS (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        TABLENAME VARCHAR(40) NOT NULL,
        TABLEALIAS VARCHAR(20) NOT NULL);

/* Table: MATERIALATTRIBUTECATEGORY, Owner: SYSDBA */
CREATE TABLE MATERIALATTRIBUTECATEGORY (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        ATTRIBUTENUM SMALLINT NOT NULL,
        MATERIALATTRIBUTEID INTEGER NOT NULL,
        CATEGORY VARCHAR(50) NOT NULL);

/* Table: MATERIALBATCH, Owner: SYSDBA */
CREATE TABLE MATERIALBATCH (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        BATCH VARCHAR(20),
        BESTBEFORE DATE,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        COUNTRYORIGIN VARCHAR(50));

/* Table: MATERIALBYDEPARTMANT, Owner: SYSDBA */
CREATE TABLE MATERIALBYDEPARTMANT (LOCATIONID INTEGER,
        STORAGEID DID NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        FISCALDEPARTMANID INTEGER NOT NULL);

/* Table: MATERIALBYPACKAGE, Owner: SYSDBA */
CREATE TABLE MATERIALBYPACKAGE (LOCATIONID INTEGER,
        MATERIALUNIQUECODE BIGINT NOT NULL,
        PACKAGEUNIQUECODE BIGINT NOT NULL);

/* Table: MATERIALCONTENT, Owner: SYSDBA */
CREATE TABLE MATERIALCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        ROWNO INTEGER,
        MATERIALUNIQUECODE BIGINT NOT NULL,
        SOURCESTORAGEID DID,
        DINAMICSTORE VARCHAR(1) default '0',
        SOURCEMATERIALUNIQUECODE BIGINT,
        DYNAMICCATEGORY VARCHAR(50),
        DYNAMICSTORAGEID DID,
        DYNAMICMATERIALUNIQUECODE BIGINT,
        QTY DQTY,
        NETQTY DQTY,
        QTYPERCENTAGE DPERC,
        PRICEPERCENTAGE DPERC);

/* Table: MATERIALKIND, Owner: SYSDBA */
CREATE TABLE MATERIALKIND (ID INTEGER NOT NULL,
        KIND VARCHAR(50) NOT NULL);

/* Table: MATERIALLOG, Owner: SYSDBA */
CREATE TABLE MATERIALLOG (ID DID NOT NULL,
        DATELOG TIMESTAMP,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        B_LOCATIONNAMEID INTEGER default 0 NOT NULL,
        B_STORAGENAMEID INTEGER default 0 NOT NULL,
        B_MATERIALNUM INTEGER,
        B_MATERIALNAMEID INTEGER default 0 NOT NULL,
        B_QTY DQTY,
        B_UOMID INTEGER default 0 NOT NULL,
        B_AVGDELIVERYPRICE DCURR,
        B_LASTDELIVERYPRICE DCURR,
        B_MINIMUMQTY DQTY,
        B_SALEOPTION CHAR(1),
        B_SALEMATERIALCODE INTEGER,
        A_LOCATIONNAMEID INTEGER default 0 NOT NULL,
        A_STORAGENAMEID INTEGER default 0 NOT NULL,
        A_MATERIALNUM INTEGER,
        A_MATERIALNAMEID INTEGER default 0 NOT NULL,
        A_QTY DQTY,
        A_UOMID INTEGER default 0 NOT NULL,
        A_AVGDELIVERYPRICE DCURR,
        A_LASTDELIVERYPRICE DCURR,
        A_MINIMUMQTY DQTY,
        A_SALEOPTION CHAR(1),
        A_SALEMATERIALNUM INTEGER,
        USERID INTEGER default 0 NOT NULL,
        OPERATIONTYPEID SMALLINT default 0 NOT NULL,
        B_CHANGEDELIVERYPRICE CHAR(1),
        A_CHANGEDELIVERYPRICE CHAR(1),
        DEFAULTSALEPRICE DCURR,
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        B_AVGDELIVERYPRICE1 DCURR,
        A_AVGDELIVERYPRICE1 DCURR,
        B_LASTDELIVERYPRICE1 DCURR,
        A_LASTDELIVERYPRICE1 DCURR,
        LOCATIONID INTEGER default -1 NOT NULL);

/* Table: MATERIALNAME, Owner: SYSDBA */
CREATE TABLE MATERIALNAME (ID INTEGER NOT NULL,
        MATERIAL D_MATERIALNAME);

/* Table: MATERIALNAMEPREVIOUS, Owner: SYSDBA */
CREATE TABLE MATERIALNAMEPREVIOUS (ID INTEGER NOT NULL,
        B_LOCATIONID INTEGER NOT NULL,
        B_STORAGEID NUMERIC(18, 0) NOT NULL,
        B_MATERIALCODE INTEGER NOT NULL,
        B_MATERIALNAME D_MATERIALNAME NOT NULL,
        A_LOCATIONID INTEGER NOT NULL,
        A_STORAGEID NUMERIC(18, 0) NOT NULL,
        A_MATERIALCODE INTEGER NOT NULL,
        A_MATERIALNAME D_MATERIALNAME NOT NULL,
        DATESAVE TIMESTAMP);

/* Table: MATERIALPARTNEREXTERNALSYSTEM, Owner: SYSDBA */
CREATE TABLE MATERIALPARTNEREXTERNALSYSTEM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PARTNERNUM INTEGER NOT NULL,
        PARTNERLOCATIONNUM INTEGER NOT NULL,
        PARTNERCONTACTNUM INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        PARTNERMATERIALCODE NUMERIC(18, 0) NOT NULL);

/* Table: MATERIALQTYATTRIBUTE, Owner: SYSDBA */
CREATE TABLE MATERIALQTYATTRIBUTE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        MATERIALATTRIBUTE01_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE02_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE03_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE04_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE05_ID INTEGER default -1 NOT NULL);

/* Table: MATERIALQTYLOG, Owner: SYSDBA */
CREATE TABLE MATERIALQTYLOG (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        OPERATIONDATE TIMESTAMP NOT NULL,
        OPERATIONTYPE SMALLINT NOT NULL,
        QTY DQTY NOT NULL,
        PRICE DCURR,
        AVGDELIVERYPRICE DCURR,
        LASTDELIVERYPRICE DCURR,
        AVGDELIVERYPRICE1 DCURR,
        LASTDELIVERYPRICE1 DCURR,
        DBTYPE SMALLINT NOT NULL,
        OPERAIONNUM INTEGER,
        DEFAULTSALEPRICE DCURR,
        BATCH VARCHAR(20));

/* Table: MATERIALRESERVATION, Owner: SYSDBA */
CREATE TABLE MATERIALRESERVATION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PARTNERNUM INTEGER NOT NULL,
        PARTNERLOCATIONNUM INTEGER NOT NULL,
        PARTNERCONTACTNUM INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        DATESAVE TIMESTAMP,
        USERNAME VARCHAR(50),
        CODE INTEGER,
        PARTNERSOURCE INTEGER,
        RESERVATIONLOCATION INTEGER,
        RESLOCUSERNAME VARCHAR(50),
        CUSTOMERNAME VARCHAR(50),
        CUSTOMERPHONE VARCHAR(50),
        PAID CHAR(1) default '0',
        EXPIRDATE TIMESTAMP,
        PICKUPLOCATION CHAR(1) default '1',
        NOTE VARCHAR(512));

/* Table: MATERIALSALEINFO, Owner: SYSDBA */
CREATE TABLE MATERIALSALEINFO (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MATERIALSALECODE INTEGER NOT NULL,
        FROMSTORAGEID DID NOT NULL,
        FROMMATERIALNUM INTEGER NOT NULL,
        SPECIFICATION VARCHAR(40),
        PRINTERID DID,
        ADDITIONALUOMID INTEGER,
        ADDITIONALUOMCONTENT DQTY,
        PRINTLABEL CHAR(1),
        PRINTLABELSTATUS CHAR(1),
        FISKALPRINTERID INTEGER,
        PRICECHANGEPERMITED CHAR(1) default '1' NOT NULL,
        PERCENTOVERCHARGE NUMERIC(6, 2),
        AGERESTRICTION CHAR(1) default 0 NOT NULL,
        SERIALNUMREQUIRED CHAR(1) default 0 NOT NULL,
        WARRENTYPERIOD NUMERIC(6, 2),
        SALEBLOCKED CHAR(1) default 0 NOT NULL,
        TURNOVERDISCOUNTBLOCKED CHAR(1) default '0' NOT NULL,
        BONUSPOINTBLOCKED CHAR(1) default '0' NOT NULL,
        MISTRALMOBILELOCKED CHAR(1) default '0' NOT NULL,
        DEBITBALANCEINPUTLOCK CHAR(1) default '0' NOT NULL,
        DEBITBALANCESPENDLOCK CHAR(1) default '0' NOT NULL,
        ACTIVEFROM TIMESTAMP,
        ACTIVETO TIMESTAMP,
        PRINTLABELORDER INTEGER,
        LOYALTYSYSTEMBLOCK CHAR(1) default '0' NOT NULL,
        ADDITIONALFIELD1 CHAR(1) default '0' NOT NULL,
        ADDITIONALFIELD2 CHAR(1) default '0' NOT NULL,
        ADDITIONALFIELD3 DCURR,
        ADDITIONALFIELD4 TIMESTAMP,
        DESCRIPTION VARCHAR(512),
        ADDITIONALFIELD5 VARCHAR(30),
        KDSCOLOUR INTEGER,
        MAXDICOUNT NUMERIC(6, 2),
        LOTTERY CHAR(1) default '0' NOT NULL,
        ELECTRONICLABEL CHAR(1) default '0' NOT NULL,
        PRINTER1ID DID,
        CONTENT VARCHAR(800),
        PRINTORDER VARCHAR(10),
        MAXQTY DQTY,
        TMPQTY DQTY);

/* Table: MATERIALSOLDSERIALNUM, Owner: SYSDBA */
CREATE TABLE MATERIALSOLDSERIALNUM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        SERIALNUMVALUEID INTEGER NOT NULL,
        MATERIALNAMEID INTEGER NOT NULL,
        UOMID INTEGER NOT NULL,
        INFO VARCHAR(1024) NOT NULL);

/* Table: MATERIALTYPE, Owner: SYSDBA */
CREATE TABLE MATERIALTYPE (ID DID NOT NULL,
        LOCATIONID INTEGER,
        MATERIALTYPE VARCHAR(40) NOT NULL);

/* Table: MATERIALTYPENAME, Owner: SYSDBA */
CREATE TABLE MATERIALTYPENAME (ID INTEGER NOT NULL,
        MATERIALTYPE VARCHAR(40));

/* Table: MODIFIER, Owner: SYSDBA */
CREATE TABLE MODIFIER (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NUM INTEGER NOT NULL,
        MODIFIER VARCHAR(25),
        MODIFIERTYPE SMALLINT default 0 NOT NULL,
        ALTERNATIVNAME VARCHAR(25));

/* Table: MODIFIERCATEGORY, Owner: SYSDBA */
CREATE TABLE MODIFIERCATEGORY (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MODIFIERNUM INTEGER NOT NULL,
        CATEGORY VARCHAR(50) NOT NULL);

/* Table: MODIFIERCONTENT, Owner: SYSDBA */
CREATE TABLE MODIFIERCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MODIFIERNUM INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL);

/* Table: MODIFIERLIST, Owner: SYSDBA */
CREATE TABLE MODIFIERLIST (MODIFIERID DID,
        LOCATIONID INTEGER NOT NULL,
        TYPEID INTEGER);

/* Table: MODIFIERLOG, Owner: SYSDBA */
CREATE TABLE MODIFIERLOG (ID INTEGER NOT NULL,
        MODIFIER VARCHAR(250));

/* Table: MODIFIERRECIPE, Owner: SYSDBA */
CREATE TABLE MODIFIERRECIPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MODIFIERNUM INTEGER NOT NULL,
        UCODE BIGINT NOT NULL);

/* Table: MODIFIERRECIPELIST, Owner: SYSDBA */
CREATE TABLE MODIFIERRECIPELIST (MODIFIERRECIPEID DID,
        LOCATIONID INTEGER NOT NULL,
        MODIFIERTYPEID DID,
        TYPEID INTEGER);

/* Table: MODIFIERTYPE, Owner: SYSDBA */
CREATE TABLE MODIFIERTYPE (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(40),
        MODIFIERFACTOR SMALLINT default 0 NOT NULL,
        ALTERNATIVNAME VARCHAR(40));

/* Table: MONEYFLOW, Owner: SYSDBA */
CREATE TABLE MONEYFLOW (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        MONEYFLOWUNITID INTEGER default 0 NOT NULL,
        OPERATIONDATE TIMESTAMP,
        OPERATIONSUM DCURR,
        OPERATIONID SMALLINT default 0 NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        NOTE VARCHAR(100),
        USERID INTEGER default 0 NOT NULL,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONID INTEGER default 0 NOT NULL,
        PARTNERCONTACTID INTEGER default 0 NOT NULL,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        SALENUM INTEGER,
        ADDITIONALFIELD CHAR(1) default '0' NOT NULL,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTSUM DCURR,
        PARTNERSHORTNAMEID INTEGER default 0 NOT NULL,
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        AVAILABILITY DCURR,
        REPORTINGDATE DATE,
        POS VARCHAR(10),
        ROWNOTEID INTEGER default 0 NOT NULL,
        MONEYOUTDOCUMENTNUM INTEGER,
        PKONO INTEGER,
        PAYSTATUS CHAR(1) default '1',
        PERMITUSERNAMEID INTEGER default 0 NOT NULL);

/* Table: MONEYFLOWAUTOACCOUNTING, Owner: SYSDBA */
CREATE TABLE MONEYFLOWAUTOACCOUNTING (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SOURCEMONEYFLOWUNITID NUMERIC(18, 0) NOT NULL,
        USERID NUMERIC(18, 0) NOT NULL,
        DESTINATIONMONEYFLOWUNITID NUMERIC(18, 0) NOT NULL);

/* Table: MONEYFLOWUNIT, Owner: SYSDBA */
CREATE TABLE MONEYFLOWUNIT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(25) NOT NULL,
        AVAILABILITY DCURR default 0 NOT NULL,
        PAYMENTMETHOD SMALLINT,
        FISCALDEVICEID INTEGER,
        ISCASH CHAR(1) default '0',
        ISFISCAL CHAR(1) default '0',
        BLOCKED CHAR(1) default '0');

/* Table: MONEYFLOWUNITNAME, Owner: SYSDBA */
CREATE TABLE MONEYFLOWUNITNAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: MONEYFLOWUNITPERMISSION, Owner: SYSDBA */
CREATE TABLE MONEYFLOWUNITPERMISSION (ID DID NOT NULL,
        LOCATIONID INTEGER,
        MONEYFLOWUNITNAME VARCHAR(25),
        USERNAME VARCHAR(50),
        DEFAULTMONEYFLOWUNIT CHAR(1));

/* Table: MONEYTRANSFER, Owner: SYSDBA */
CREATE TABLE MONEYTRANSFER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER NOT NULL,
        OPERATIONDATE TIMESTAMP,
        SOURCEMONEYFLOWUNITID INTEGER NOT NULL,
        DESTINATIONMONEYFLOWUNITID INTEGER NOT NULL,
        TRANSFERSUM DCURR,
        NOTE VARCHAR(100),
        USERNAMEID INTEGER NOT NULL);

/* Table: MYCOMPANY, Owner: SYSDBA */
CREATE TABLE MYCOMPANY (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        COMPANYNAME VARCHAR(200),
        CITY VARCHAR(30),
        ADDRESS VARCHAR(200),
        RESPONSIBLEPERSON VARCHAR(40),
        TAXNUM VARCHAR(15),
        VATREGISTRATION CHAR(1),
        BANKACCOUNT VARCHAR(24),
        BANKCODE VARCHAR(20),
        BANKNAME VARCHAR(30),
        NUMDIGGITINVOICING INTEGER,
        VATNUM VARCHAR(20),
        INVOICENUM NUMERIC(18, 0),
        GLN VARCHAR(20),
        DEPARTMENTNUM INTEGER,
        FOREIGNINVOICENUM NUMERIC(18, 0),
        DEFAULTCOMPANY CHAR(1) default '0' NOT NULL,
        POSTALCODE VARCHAR(10));

/* Table: NOMINAL, Owner: SYSDBA */
CREATE TABLE NOMINAL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        CURRENCYID INTEGER NOT NULL,
        NOMINALLABEL VARCHAR(10) NOT NULL,
        NOMINALVALUE DCURR NOT NULL);

/* Table: OPERATIONCONTENT, Owner: SYSDBA */
CREATE TABLE OPERATIONCONTENT (ID DID NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        NUM INTEGER NOT NULL,
        OPERATIONDOCTYPE INTEGER default 0 NOT NULL,
        STORAGEID INTEGER default 0,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0,
        UOMID INTEGER default 0,
        QTY DQTY,
        PRICE DCURR,
        SALEPRICE DCURR,
        BESTBEFORE DATE,
        MATERIALTYPEID INTEGER default 0,
        STORAGECONDITIONID INTEGER default 0,
        PRODUCERID INTEGER default 0,
        DELIVERYTIME TIME,
        PRODUCERDOCUMENT VARCHAR(40),
        CATEGORYID INTEGER default 0,
        BATCH VARCHAR(20),
        TRANSPORTTYPEID INTEGER default 0,
        MATERIALATTRIBUTE01NAMEID INTEGER default 0,
        MATERIALATTRIBUTE02NAMEID INTEGER default 0,
        MATERIALATTRIBUTE03NAMEID INTEGER default 0,
        MATERIALATTRIBUTE04NAMEID INTEGER default 0,
        MATERIALATTRIBUTE05NAMEID INTEGER default 0,
        DISCOUNTPERCENTAGE NUMERIC(6, 2),
        SPECIFICATIONNAMEID INTEGER default 0,
        MATERIALALTERNATIVENAMEID INTEGER default 0,
        BARCODEID INTEGER default 0,
        REQUESTQTY DQTY,
        ROWNOTEID INTEGER default 0,
        SERIALNUMVALUEID INTEGER default 0,
        SECONDDELIVERYPRICE DCURR,
        AVGDELIVERYPRICE DCURR,
        LASTDELIVERYPRICE DCURR,
        SECONDAVGDELIVERYPRICE DCURR,
        SECONDLASTDELIVERYPRICE DCURR,
        AVGDELIVERYPRICE1 DCURR,
        LASTDELIVERYPRICE1 DCURR,
        AVGDELIVERYPRICEWOTAX DCURR,
        LASTDELIVERYPRICEWOTAX DCURR,
        AGREEDPRICE DCURR,
        AGREEDPRICESTARTDATE TIMESTAMP,
        AGREEDPRICEENDDATE TIMESTAMP,
        TAXGROUP CHAR(1),
        TAXPERCENTAGE DCURR,
        PRICEWOTAX DCURR,
        REQUESTCONNECTIONNUM INTEGER,
        DELIVERYTYPEPRICE CHAR(1),
        CHECKQTY DQTY,
        COUNTRYORIGINID INTEGER default 0,
        WASTEQTY DQTY default 0);

/* Table: OPERATIONDOCUMENT, Owner: SYSDBA */
CREATE TABLE OPERATIONDOCUMENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        NUM INTEGER NOT NULL,
        OPERATIONDOCTYPE INTEGER default 0 NOT NULL,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTDATE DATE,
        DOCUMENTTYPEID INTEGER default 0,
        DATESAVED TIMESTAMP,
        DOCNOTE VARCHAR(30),
        DOCSUM DCURR,
        EQUATIONDOCNUM NUMERIC(18, 0),
        EQUATIONTYPEID INTEGER,
        EQUATIONDOCDATE DATE,
        EQUATIONDOCSUM DCURR,
        ACCOUNTINGEXPORT CHAR(1) default '0',
        TAXSUM1 VARCHAR(30),
        TAXSUM2 VARCHAR(30),
        TAXSUM3 VARCHAR(30),
        DOCUMENTOUTNUM NUMERIC(18, 0));

/* Table: OPERATIONS, Owner: SYSDBA */
CREATE TABLE OPERATIONS (ID DID NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        UNIQUENUM INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        OPERATIONDOCTYPE INTEGER default 0 NOT NULL,
        EXECUTEDATE TIMESTAMP,
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTDATE TIMESTAMP,
        DOCUMENTTYPEID INTEGER default 0,
        DOCUMENTSUM DCURR,
        USERID INTEGER default 0,
        PARTNERNAMEID INTEGER default 0,
        PARTNERCONTACTID INTEGER default 0,
        PARTNERLOCATIONID INTEGER default 0,
        PARTNERSHORTNAMEID INTEGER default 0,
        DEFERREDPAYMENT CHAR(1),
        DEFERREDPAYMENTSUM DCURR,
        DEFERREDPAYMENTBACK DATE,
        RECIEVEUSERNAMEID INTEGER default 0,
        MONEYFLOWUNITID INTEGER default 0,
        MONEYFLOWUNITSUM DCURR default 0,
        LASTEDITDATE TIMESTAMP,
        LOCATIONNAMEID INTEGER default 0,
        PARTNERNUM INTEGER default -1,
        PARTNERLOCATIONNUM INTEGER default -1,
        PARTNERCONTACTNUM INTEGER default -1,
        TRANSFERCONECTIONNUM INTEGER,
        TRANSFERCONECTIONLOCATIONNAMEID INTEGER default 0,
        TAXNUMID INTEGER default 0,
        VATNUMID INTEGER default 0,
        REPORTINGDATE DATE,
        PARTNERCONTACTPERSONALNUMID INTEGER default 0,
        PRICEWOTAX CHAR(1) default '0',
        CONFIRMATIONREQUIRED CHAR(1) default '0',
        DATESAVED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        DELIVERYTYPEID INTEGER default 0,
        PARTNERTYPEID INTEGER default 0,
        DELIVERYTYPE INTEGER default 0,
        NOTE VARCHAR(30),
        CANCELATIONOPTION CHAR(1) default '0',
        DESTINATIONLOCATION VARCHAR(30),
        USERNAMEID INTEGER default 0,
        SLAVELOCATIONDELIVERYNUM INTEGER,
        SAVEINSTORAGENAMEID INTEGER default 0,
        PARENTOF DID default 0,
        EDITNUM INTEGER,
        CHECKUSERCODE VARCHAR(10));

/* Table: OPERATIONTYPE, Owner: SYSDBA */
CREATE TABLE OPERATIONTYPE (OPERATIONID SMALLINT NOT NULL,
        OPERATIONNAME VARCHAR(30));

/* Table: ORDERCONTENT, Owner: SYSDBA */
CREATE TABLE ORDERCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        ORDERID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        QTY DQTY,
        MODIFIERID INTEGER default 0 NOT NULL,
        KDSNAME VARCHAR(20),
        KDSSTATUS SMALLINT default 0 NOT NULL,
        TARGETDATETIME TIMESTAMP,
        STANDARDPREPARATIONTIME SMALLINT,
        REALPREPARATIONTIME SMALLINT,
        SALEPRICE DCURR,
        MATERIAL1ID INTEGER default 0 NOT NULL,
        DATETIMEPREPARATIONSTART TIMESTAMP,
        DBTYPE SMALLINT default -1 NOT NULL,
        GIVE_STATUS SMALLINT default 0 NOT NULL);

/* Table: ORDERSTAGE, Owner: SYSDBA */
CREATE TABLE ORDERSTAGE (ID INTEGER,
        LOCATIONID INTEGER,
        STAGENUM INTEGER,
        STAGENAME VARCHAR(20));

/* Table: ORDER_T, Owner: SYSDBA */
CREATE TABLE ORDER_T (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        DATEORDER TIMESTAMP NOT NULL,
        PRINTERNAMEID INTEGER default 0 NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        CANCELATION CHAR(1) default 0 NOT NULL,
        SERVINGPLACENUM INTEGER,
        PARTNERNUM INTEGER,
        POS VARCHAR(10),
        SALENUM INTEGER,
        OPERATIONID SMALLINT,
        ORDERCOUNTER INTEGER,
        PRINTSTATUS CHAR(1) default '0' NOT NULL,
        ORDERDAILYSUM DCURR,
        DBTYPE SMALLINT default -1 NOT NULL,
        FORDATE TIMESTAMP,
        SELORDERNUM INTEGER);

/* Table: PACKAGEDISCOUNT, Owner: SYSDBA */
CREATE TABLE PACKAGEDISCOUNT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SALEMATERIALCODE1 INTEGER NOT NULL,
        PRICELISTID1 NUMERIC(18, 0) NOT NULL,
        SALEMATERIALCODE2 INTEGER NOT NULL,
        PRICELISTID2 NUMERIC(18, 0),
        ACTIVATIONTYPE SMALLINT default 0 NOT NULL,
        STARTTIMEACTIVATION TIME,
        ENDTIMEACTIVATION TIME,
        "ACTIVE" CHAR(1) default '1' NOT NULL);

/* Table: PARTNER, Owner: SYSDBA */
CREATE TABLE PARTNER (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NUM INTEGER NOT NULL,
        NAME VARCHAR(200),
        CITY VARCHAR(30),
        ADDRESS VARCHAR(200),
        RESPONIBLEPERSON VARCHAR(40),
        TAXNUM VARCHAR(20),
        BANKACCOUNT VARCHAR(24),
        BANKCODE VARCHAR(20),
        BANKNAME VARCHAR(30),
        SHORTNAME VARCHAR(25),
        PARTNERTYPEID INTEGER,
        VATNUM VARCHAR(50),
        GLN VARCHAR(20),
        SUPPLIERNUM VARCHAR(20),
        DATESAVE TIMESTAMP,
        PARTNERNOTE D_PARTNERNOTE,
        POSTALCODE VARCHAR(10),
        REGION VARCHAR(100),
        REGIONSN VARCHAR(100),
        REGISTRATION VARCHAR(100));

/* Table: PARTNERCONTACT, Owner: SYSDBA */
CREATE TABLE PARTNERCONTACT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        NUM INTEGER NOT NULL,
        NAME VARCHAR(50),
        PERSONALID VARCHAR(20),
        IDCARD VARCHAR(20),
        DEPARTMENT VARCHAR(30),
        CONTACTPOSITION VARCHAR(30),
        PHONE VARCHAR(30),
        MOBILE VARCHAR(30),
        FAX VARCHAR(30),
        EMAIL VARCHAR(30),
        PARTNERTYPEID INTEGER,
        ADDRESS VARCHAR(50),
        AREA VARCHAR(20),
        ADDRESSTYPE VARCHAR(20),
        STREETNO VARCHAR(10),
        BUILDINGNUM VARCHAR(10),
        ENTRANCE VARCHAR(10),
        FLOORNUM VARCHAR(10),
        APPARTMENT VARCHAR(10),
        NOTE VARCHAR(50),
        SPECIFICFEATURE VARCHAR(100));

/* Table: PARTNERCONTACTNAME, Owner: SYSDBA */
CREATE TABLE PARTNERCONTACTNAME (ID INTEGER NOT NULL,
        PARTNERCONTACT VARCHAR(50));

/* Table: PARTNERCONTACTPERSONALID, Owner: SYSDBA */
CREATE TABLE PARTNERCONTACTPERSONALID (ID INTEGER NOT NULL,
        PERSONALID VARCHAR(20));

/* Table: PARTNERLASTSALE, Owner: SYSDBA */
CREATE TABLE PARTNERLASTSALE (ID NUMERIC(18, 0) NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        SALEPRICE DCURR NOT NULL,
        DEFAULTSALEPRICE DCURR NOT NULL,
        QTY DQTY NOT NULL);

/* Table: PARTNERLOCATION, Owner: SYSDBA */
CREATE TABLE PARTNERLOCATION (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PARTNERNUM INTEGER default -1 NOT NULL,
        NUM INTEGER NOT NULL,
        LOCATIONNAME VARCHAR(40),
        CITY VARCHAR(20),
        PHONE VARCHAR(30),
        ADDRESS VARCHAR(40),
        PARTNERTYPEID INTEGER,
        GLN VARCHAR(20),
        PARTNERLOCATIONNOTE D_PARTNERNOTE);

/* Table: PARTNERLOCATIONNAME, Owner: SYSDBA */
CREATE TABLE PARTNERLOCATIONNAME (ID INTEGER NOT NULL,
        PARTNERLOCATION VARCHAR(40));

/* Table: PARTNERNAME, Owner: SYSDBA */
CREATE TABLE PARTNERNAME (ID INTEGER NOT NULL,
        PARTNERNAME VARCHAR(200));

/* Table: PARTNERNOTE, Owner: SYSDBA */
CREATE TABLE PARTNERNOTE (ID INTEGER NOT NULL,
        PARTNERNOTE D_PARTNERNOTE);

/* Table: PARTNERSERVICEUSER, Owner: SYSDBA */
CREATE TABLE PARTNERSERVICEUSER (LOCATIONID INTEGER NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        USERCODE VARCHAR(10),
        SERVICETYPE INTEGER NOT NULL);

/* Table: PARTNERSETTING, Owner: SYSDBA */
CREATE TABLE PARTNERSETTING (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        PRICELISTID DID,
        DEFERREDPAYMENT CHAR(1),
        DEFERREDPAYMENTMAXSUM DCURR,
        CARD VARCHAR(60),
        DEBITBALANCE DCURR,
        DEBITBALANCEDAILY CHAR(1),
        DABITBALANCESAVE TIMESTAMP,
        DEBITBALANCESALELIMIT CHAR(1),
        AUTOMATICDEBITBALANCESUM DCURR,
        CARDVALIDITY TIMESTAMP,
        CARDVALIDITYTIME TIME,
        BONUSPOINT INTEGER,
        CARDVALIDITYSTARTTIME TIME,
        CARDVALIDITYENDTIME TIME,
        SALESUM DCURR default 0 NOT NULL,
        DELIVERYSUM DCURR default 0 NOT NULL,
        TURNOVERDISCOUNTNAME VARCHAR(30),
        TIMEINTERVALDISCOUNTNAME VARCHAR(30),
        SALEBLOCKED CHAR(1) default '0' NOT NULL,
        CARD1 VARCHAR(60),
        CARD2 VARCHAR(60),
        CARD3 VARCHAR(60),
        CARD4 VARCHAR(60),
        DEFERREDPAYMENTPERIOD INTEGER,
        VOLUMEPROMOTIONNAME VARCHAR(30),
        BONUSPOINTMATERIALNAME VARCHAR(20),
        DEBITBALANCEDEFAULT CHAR(1) default '0' NOT NULL,
        CARDAUTOMATICSAVE CHAR(1) default '0' NOT NULL,
        DEBITBALANCENEGATIVE CHAR(1) default '0' NOT NULL,
        SALEMONTHLYDELETED CHAR(1) default '0' NOT NULL,
        SALEMONTHLYDELETEDDATE DATE default 'now' NOT NULL,
        BONUSPOINTTURNOVERNAME VARCHAR(30),
        CARDVALIDITYAFTERACTIVATION SMALLINT,
        DEFERREDPAYMENTBANKOPTION CHAR(1) default '0' NOT NULL,
        VATREGISTRATION CHAR(1) default '0' NOT NULL,
        MAXDISCOUNTSUM DCURR,
        EMAILREQUEST VARCHAR(30),
        PRICINGPOLICYNAME VARCHAR(20),
        DEBITBALANCESPENDALL CHAR(1));

/* Table: PARTNERSHORTNAME, Owner: SYSDBA */
CREATE TABLE PARTNERSHORTNAME (ID INTEGER NOT NULL,
        NAME VARCHAR(25));

/* Table: PARTNERTAXNUM, Owner: SYSDBA */
CREATE TABLE PARTNERTAXNUM (ID INTEGER NOT NULL,
        TAXNUM VARCHAR(20));

/* Table: PARTNERTYPE, Owner: SYSDBA */
CREATE TABLE PARTNERTYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PARTNERTYPE VARCHAR(30) NOT NULL,
        PRICELISTID NUMERIC(18, 0),
        BONUSPOINTTURNOVERNAME VARCHAR(30),
        BONUSPOINTMATERIALNAME VARCHAR(30),
        DISCOUNTBYSALENAME VARCHAR(30),
        HOURDISCOUNTNAME VARCHAR(30),
        QTYPROMOTIONNAME VARCHAR(30));

/* Table: PARTNERTYPENAME, Owner: SYSDBA */
CREATE TABLE PARTNERTYPENAME (ID INTEGER NOT NULL,
        PARTNERTYPE VARCHAR(30));

/* Table: PAYMENTONDELIVERY, Owner: SYSDBA */
CREATE TABLE PAYMENTONDELIVERY (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        SALETRANSACTIONNUM INTEGER NOT NULL,
        DEFERREDPAYMENTSUM DCURR NOT NULL,
        PAYMENTDATE TIMESTAMP);

/* Table: PERMISSIONBACKOFFICE, Owner: SYSDBA */
CREATE TABLE PERMISSIONBACKOFFICE (ID DID NOT NULL,
        LOCATIONID INTEGER,
        FUNCTIONALITY VARCHAR(100),
        USERPASS VARCHAR(50),
        SECURITYROLEID DID default -1 NOT NULL,
        P1NEW CHAR(1) default '1',
        P2EDIT CHAR(1) default '1',
        P3DEL CHAR(1) default '1',
        P4BLOCK CHAR(1) default '0',
        P5EXEC CHAR(1) default '0',
        P6REPORT CHAR(1) default '0',
        P7PRINT CHAR(1) default '0',
        P8EXPORT CHAR(1) default '0',
        P9 CHAR(1) default '0',
        P10 CHAR(1) default '0');

/* Table: PERMISSIONBACKOFFICEDETAIL, Owner: SYSDBA */
CREATE TABLE PERMISSIONBACKOFFICEDETAIL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        FUNCTIONALITYID INTEGER NOT NULL,
        FUNCTIONALITYDETAILID INTEGER NOT NULL,
        PASS VARCHAR(50) NOT NULL,
        REPORTTITLE VARCHAR(100));

/* Table: PERMISSIONPOS, Owner: SYSDBA */
CREATE TABLE PERMISSIONPOS (ID DID NOT NULL,
        LOCATIONID INTEGER,
        FUNCTIONALITY VARCHAR(100),
        USERPASS VARCHAR(50),
        SECURITYROLEID DID default -1 NOT NULL,
        P1NEW CHAR(1) default '1',
        P2EDIT CHAR(1) default '1',
        P3DEL CHAR(1) default '1',
        P4BLOCK CHAR(1) default '0',
        P5EXEC CHAR(1) default '0',
        P6REPORT CHAR(1) default '0',
        P7PRINT CHAR(1) default '0',
        P8EXPORT CHAR(1) default '0',
        P9 CHAR(1) default '0',
        P10 CHAR(1) default '0');

/* Table: PERMISSIONREPORT, Owner: SYSDBA */
CREATE TABLE PERMISSIONREPORT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        APPTYPE SMALLINT NOT NULL,
        VERSION SMALLINT NOT NULL,
        REPORTTITLE VARCHAR(100) NOT NULL,
        REPORTCATEGORY VARCHAR(30) NOT NULL,
        USERNAME VARCHAR(50) NOT NULL);

/* Table: PHONEORDERTEMP, Owner: SYSDBA */
CREATE TABLE PHONEORDERTEMP (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        PARTNERNUM INTEGER NOT NULL,
        PARTNERLOCATIONNUM INTEGER NOT NULL,
        PARTNERCONTACTNUM INTEGER NOT NULL,
        STATUS VARCHAR(25),
        DATESAVE TIMESTAMP,
        DATEPRINTORDER TIMESTAMP,
        DATEORDERREADY TIMESTAMP,
        RECIEVEUSER VARCHAR(50),
        DELIVERYUSER VARCHAR(50));

/* Table: PHONEORDERTEMPCONTENT, Owner: SYSDBA */
CREATE TABLE PHONEORDERTEMPCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PHONEORDERTEMPNUM INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        SALEPRICE DCURR NOT NULL,
        ORDERSTATUS CHAR(1) default '0' NOT NULL,
        SAVED CHAR(1) default '0' NOT NULL,
        MODIFIER VARCHAR(250));

/* Table: PRICELIST, Owner: SYSDBA */
CREATE TABLE PRICELIST (ID DID NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PRICELISTID DID NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        PRICE DCURR NOT NULL,
        LASTUPDATEUSERID INTEGER);

/* Table: PRICELISTNAME, Owner: SYSDBA */
CREATE TABLE PRICELISTNAME (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(20) NOT NULL,
        PRICELISTTYPE CHAR(1),
        PERCENTAGE DPERC,
        PARENTPRICELISTID DID,
        STORAGEID DID,
        DELIVERYPRICETYPE CHAR(1),
        DATETIMEACTIVEFROM TIMESTAMP,
        DATETIMEACTIVETO TIMESTAMP,
        TIMEACTIVEFROM TIME,
        TIMEACTIVETO TIME,
        POSCHANGEAVAILABLE CHAR(1) default '0' NOT NULL,
        MONDAYACTIVE CHAR(1) default '0' NOT NULL,
        TUESDAYACTIVE CHAR(1) default '0' NOT NULL,
        WEDNESDAYACTIVE CHAR(1) default '0' NOT NULL,
        THURSDAYACTIVE CHAR(1) default '0' NOT NULL,
        FRIDAYACTIVE CHAR(1) default '0' NOT NULL,
        SATURDAYACTIVE CHAR(1) default '0' NOT NULL,
        SUNDAYACTIVE CHAR(1) default '0' NOT NULL,
        NULLVALUEPRICELISTID NUMERIC(18, 0),
        PARTNERREQUIRED CHAR(1) default '0' NOT NULL,
        ROUNDING INTEGER);

/* Table: PRICELISTPERSENTAGE, Owner: SYSDBA */
CREATE TABLE PRICELISTPERSENTAGE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PRICELISTID NUMERIC(18, 0) NOT NULL,
        PRICELISTNAMEID NUMERIC(18, 0),
        MATERIALCODE INTEGER NOT NULL,
        PERCENTAGE NUMERIC(6, 2),
        USERID INTEGER,
        SALEPRICE DCURR,
        CUSTOMERCOUNT INTEGER default -1 NOT NULL);

/* Table: PRICELISTREPORTINGNAME, Owner: SYSDBA */
CREATE TABLE PRICELISTREPORTINGNAME (ID INTEGER NOT NULL,
        PRICELISTNAME VARCHAR(20));

/* Table: PRICINGPOLICY, Owner: SYSDBA */
CREATE TABLE PRICINGPOLICY (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PRICINGPOLICYNAME VARCHAR(20),
        PRICELISTID NUMERIC(18, 0) NOT NULL,
        TIMEACTIVEFROM TIME NOT NULL,
        TIMEACTIVETO TIME NOT NULL,
        ACTIVEEVERYMONDAY CHAR(1) NOT NULL,
        ACTIVEEVERYTUESDAY CHAR(1) NOT NULL,
        ACTIVEEVERYWEDNESDAY CHAR(1) NOT NULL,
        ACTIVEEVERYTHURSDAY CHAR(1) NOT NULL,
        ACTIVEEVERYFRIDAY CHAR(1) NOT NULL,
        ACTIVEEVERYSATURDAY CHAR(1) NOT NULL,
        ACTIVEEVERYSUNDAY CHAR(1) NOT NULL);

/* Table: PRINTER, Owner: SYSDBA */
CREATE TABLE PRINTER (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PRINTERNAME VARCHAR(20) NOT NULL,
        ORDERDATE DATE,
        ORDERCOUNT INTEGER,
        ORDERSUM DCURR);

/* Table: PRINTERNAME, Owner: SYSDBA */
CREATE TABLE PRINTERNAME (ID INTEGER NOT NULL,
        PRINTERNAME VARCHAR(20));

/* Table: PRODUCERINFO, Owner: SYSDBA */
CREATE TABLE PRODUCERINFO (ID DID NOT NULL,
        LOCATIONID INTEGER,
        PRODUCERNUM INTEGER NOT NULL,
        PRODUCERNAME VARCHAR(40),
        HACCPNUM VARCHAR(20));

/* Table: PRODUCERNAME, Owner: SYSDBA */
CREATE TABLE PRODUCERNAME (ID INTEGER NOT NULL,
        PRODUCER VARCHAR(40));

/* Table: PRODUCTIONREQUEST, Owner: SYSDBA */
CREATE TABLE PRODUCTIONREQUEST (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        NUM INTEGER NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        STATUS SMALLINT default 0 NOT NULL,
        REQUESTDATE TIMESTAMP,
        DELIVERYNUM INTEGER,
        TRANSFERNUM INTEGER);

/* Table: PRODUCTIONREQUESTCONTENT, Owner: SYSDBA */
CREATE TABLE PRODUCTIONREQUESTCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        NUM INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY,
        PRODUCEDQTY DQTY,
        BATCH VARCHAR(20),
        PRICEINGREDIENT DCURR,
        PRODUCTIONDELIVERY DCURR,
        PRODUCTIONPRICE DCURR);

/* Table: PROMOTIONBARCODE, Owner: SYSDBA */
CREATE TABLE PROMOTIONBARCODE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PROMOTIONBARCODE VARCHAR(15) NOT NULL);

/* Table: PROMOTIONSALEPRICE, Owner: SYSDBA */
CREATE TABLE PROMOTIONSALEPRICE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        STARTDATE TIMESTAMP,
        ENDDATE TIMESTAMP,
        SALEPRICE DCURR,
        STARTHOUR TIME,
        ENDHOUR TIME,
        PERCENTAGEDISCOUNT NUMERIC(6, 2),
        DAILYACTIVITY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYMONDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYTUESDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYWEDNESDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYTHURSDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYFRIDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYSATURDAY CHAR(1) default '0' NOT NULL,
        ACTIVEEVERYSUNDAY CHAR(1) default '0' NOT NULL,
        TURNOVERDISCOUNTACTIVITY CHAR(1) default '0' NOT NULL,
        BONUSPOINTACTIVITY CHAR(1) default '0' NOT NULL,
        DEBITBALANCEACTIVITY CHAR(1) default '0' NOT NULL,
        NEGATIVEDEBITBALANCEACTIVITY CHAR(1) default '0' NOT NULL,
        NOTE VARCHAR(30),
        DATETIMEPROMOTIONCHECK TIMESTAMP,
        TYPEPROMOTION SMALLINT DEFAULT 0);

/* Table: RECIPEMODIFICATIONLOCATION, Owner: SYSDBA */
CREATE TABLE RECIPEMODIFICATIONLOCATION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        RECIPENUM INTEGER NOT NULL);

/* Table: REPORT, Owner: SYSDBA */
CREATE TABLE REPORT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        APPTYPE SMALLINT NOT NULL,
        VERSION SMALLINT NOT NULL,
        REPORTTITLE VARCHAR(100) NOT NULL,
        REPORTCATEGORY VARCHAR(30) NOT NULL,
        REPORTDATA BLOB SUB_TYPE 0 SEGMENT SIZE 80 NOT NULL,
        REPORTSETTINGS BLOB SUB_TYPE 0 SEGMENT SIZE 80 NOT NULL);

/* Table: REQUEST, Owner: SYSDBA */
CREATE TABLE REQUEST (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        REQUESTNUM INTEGER NOT NULL,
        REQUESTDATE TIMESTAMP,
        DELIVERYDATE TIMESTAMP,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        NOTE VARCHAR(30),
        USERID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        SUPPLYSTATUS CHAR(1) default '0' NOT NULL,
        PARTNERLOCATIONID INTEGER default 0 NOT NULL,
        PARTNERCONTACTID INTEGER default 0 NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL);

/* Table: REQUESTCONTENT, Owner: SYSDBA */
CREATE TABLE REQUESTCONTENT (ID DID NOT NULL,
        REQUESTNUM INTEGER NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        QTY DQTY,
        PRICE DCURR,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE INTEGER default -1 NOT NULL,
        BARCODEID INTEGER default 0 NOT NULL,
        AVAILABLEQTY DQTY,
        ROWNOTEID INTEGER default 0 NOT NULL,
        DATESALEFROM TIMESTAMP,
        DATESALETO TIMESTAMP,
        SALESUM DCURR);

/* Table: RESERVATIONNOTE, Owner: SYSDBA */
CREATE TABLE RESERVATIONNOTE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAME VARCHAR(30),
        QTY DQTY NOT NULL,
        FROMLOCATIONNAME VARCHAR(50),
        AUTHORIZE CHAR(1) default '0');

/* Table: REVALUATION, Owner: SYSDBA */
CREATE TABLE REVALUATION (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        DATESAVE TIMESTAMP,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        B_SALEPRICE DCURR,
        A_SALEPRICE DCURR,
        PRICECHANGEQTY DCURR,
        PRICELISTNAMEID INTEGER default 0 NOT NULL,
        USERID INTEGER default 0 NOT NULL,
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        AVGDELIVERYPRICE DCURR,
        LASTDELIVERYPRICE DCURR,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL);

/* Table: ROWNOTE, Owner: SYSDBA */
CREATE TABLE ROWNOTE (ID INTEGER NOT NULL,
        NOTE VARCHAR(30));

/* Table: SALE, Owner: SYSDBA */
CREATE TABLE SALE (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        NUM INTEGER NOT NULL,
        SALEDATE TIMESTAMP,
        USERID INTEGER default 0 NOT NULL,
        ADDITIONALFIELD CHAR(1),
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTID INTEGER default 0 NOT NULL,
        POS VARCHAR(10),
        DOCUMENTNUM NUMERIC(18, 0),
        SERVINGPLACE INTEGER,
        CUSTOMERRESTAURANT INTEGER,
        TIMEOPEN TIME,
        NUMCUSTOMER INTEGER,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONID INTEGER default 0 NOT NULL,
        PARTNERSHORTNAMEID INTEGER default 0 NOT NULL,
        DEFERREDPAYMENT CHAR(1),
        DEFERREDPAYMENTSUM DCURR,
        DEFERREDPAYMENTRETURN DATE,
        PARTNERCONTACTPERSONALNUMID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        LASTEDITDATE TIMESTAMP,
        FISCALUSERID INTEGER default 0 NOT NULL,
        BONUSPOINT DCURR default 0 NOT NULL,
        DEBITBALANCE DCURR default 0 NOT NULL,
        MIXEDPAYMENT CHAR(1) default '0' NOT NULL,
        PARTNERTYPENAMEID INTEGER default 0 NOT NULL,
        REPORTINGDATE DATE,
        PRICELISTNAMEID INTEGER default 0 NOT NULL,
        SAVEUSERID INTEGER default 0 NOT NULL,
        SLAVELOCATIONDELIVERYNUM INTEGER,
        SLAVELOCATIONNAMEID INTEGER default 0 NOT NULL,
        DOCUMENTDATE DATE,
        PARTNERNOTEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONNOTEID INTEGER default 0 NOT NULL,
        TAKEAWAY CHAR(1),
        FOREIGNCITIZEN CHAR(1),
        DATEOPEN DATE,
        FISCALRECIEPENUM NUMERIC(18, 0),
        PAYMENTMETHOD VARCHAR(20),
        NAPCODE VARCHAR(22),
        WEBORDERID INTEGER,
        DATESAVED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        DVRUSERID INTEGER default 0,
        SERVUSERID INTEGER default 0);

/* Table: SALECONTENT, Owner: SYSDBA */
CREATE TABLE SALECONTENT (ID DID NOT NULL,
        NUM INTEGER,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        QTY DQTY,
        UOMID INTEGER default 0 NOT NULL,
        AVGDELIVERYPRICE DCURR,
        SALEPRICE DCURR,
        DEFAULTSALEPRICE DCURR,
        CATEGORYID INTEGER default 0 NOT NULL,
        LASTDELIVERYPRICE DCURR,
        PRICELISTNAMEID INTEGER default 0 NOT NULL,
        FISCALDEVICENAMEID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE01NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE02NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE03NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE04NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE05NAMEID INTEGER default 0 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        STORAGENAMEID INTEGER default 0 NOT NULL,
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        MATERIALALTERNATIVENAMEID INTEGER default 0 NOT NULL,
        PRODUCERID INTEGER default 0 NOT NULL,
        BARCODEID INTEGER default 0 NOT NULL,
        MODIFIERID INTEGER default 0 NOT NULL,
        SERIALNUMVALUEID INTEGER default 0 NOT NULL,
        WARRANTY DATE,
        BATCH VARCHAR(20),
        PLACENUM SMALLINT,
        ADDITIONALUOMQTY DQTY,
        PRODUCTIONDELIVERY DCURR default 0 NOT NULL,
        AVGDELIVERYPRICE1 DCURR,
        LASTDELIVERYPRICE1 DCURR,
        MATERIALTYPEID INTEGER default 0 NOT NULL,
        LASTPARTNERNAMEID INTEGER default 0 NOT NULL,
        LASTPARTNERLOCATIONNAMEID INTEGER default 0 NOT NULL,
        LASTPARTNERCONTACTNAMEID INTEGER default 0 NOT NULL,
        AVGDELIVERYPRICEWOTAX DCURR,
        LASTDELIVERYPRICEWOTAX DCURR,
        PROMOTIONPRICE CHAR(1) default '0' NOT NULL,
        TAXGROUP CHAR(1),
        TAXPERCENTAGE DCURR,
        ROWINSERTUSERID INTEGER default 0 NOT NULL,
        MATERIALWEIGHT DQTY,
        DYNAMICPACKAGEMATERIAL SMALLINT,
        STORAGEID DID,
        SUPPLYSTATUS CHAR(1) default '0',
        BESTBEFORE TIMESTAMP);

/* Table: SALEDAILY, Owner: SYSDBA */
CREATE TABLE SALEDAILY (ID INTEGER NOT NULL,
        TIMEDATE DATE NOT NULL,
        LOCATIONNAMEID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER NOT NULL,
        UOMID INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        DELIVERYPRICE DCURR NOT NULL,
        SALEPRICE DCURR NOT NULL,
        CATEGORYID INTEGER NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL);

/* Table: SALEEDIT, Owner: SYSDBA */
CREATE TABLE SALEEDIT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        EDITDATE TIMESTAMP NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SALENUM INTEGER NOT NULL,
        SALEDATE TIMESTAMP NOT NULL,
        USERID INTEGER default 0 NOT NULL,
        ADDITIONALFIELD CHAR(1),
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONID INTEGER default 0 NOT NULL,
        PARTNERSHORTNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTPERSONALNUMID INTEGER NOT NULL,
        PARTNERNUM INTEGER,
        PARTNERLOCATIONNUM INTEGER,
        PARTNERCONTACTNUM INTEGER,
        POS VARCHAR(10),
        DOCUMENTNUM NUMERIC(18, 0),
        SERVINGPLACENUM INTEGER,
        CUSTOMER INTEGER,
        TIMEOPEN TIME,
        GUESTNUM INTEGER,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        DEFERREDPAYMENT CHAR(1),
        DEFERREDPAYMENTSUM DCURR,
        DATEDEFERREDPAYMENTBACK DATE,
        USERFISCALID INTEGER default 0 NOT NULL,
        EDITUSERID INTEGER default 0 NOT NULL,
        CANCELATION CHAR(1) default 0 NOT NULL);

/* Table: SALEEDITCONTENT, Owner: SYSDBA */
CREATE TABLE SALEEDITCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        SALEEDITID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER default -1 NOT NULL,
        QTY DQTY,
        UOMID INTEGER default 0 NOT NULL,
        DELIVERYPRICE DCURR,
        SALEPRICE DCURR,
        DEFAULTSALEPRICE DCURR,
        CATEGORYID INTEGER default 0 NOT NULL,
        LASTDELIVERYPRICE DCURR,
        PRICELISTNAMEID INTEGER default 0 NOT NULL,
        FISCALDEVICENAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE01NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE02NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE03NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE04NAMEID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE05NAMEID INTEGER default 0 NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SPECIFICATIONNAMEID INTEGER default 0 NOT NULL,
        MATERIALALTERNATIVENAMEID INTEGER default 0 NOT NULL,
        BATCH VARCHAR(20));

/* Table: SALEEXPORTLOG, Owner: SYSDBA */
CREATE TABLE SALEEXPORTLOG (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT,
        SALENUM INTEGER NOT NULL,
        SALEDATE TIMESTAMP NOT NULL,
        SENDDATE TIMESTAMP);

/* Table: SALETEMP, Owner: SYSDBA */
CREATE TABLE SALETEMP (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SALENUM INTEGER,
        USERNAME VARCHAR(50),
        SERVINGPLACE INTEGER,
        CUSTOMERNUM INTEGER,
        PARTNERNUM INTEGER,
        PARTNERCONTACTID DID,
        TIMEOPEN TIME,
        CUSTOMERCOUNT INTEGER,
        PRICELISTID DID,
        PARTNERLOCATIONNUM INTEGER,
        DATEOPEN DATE,
        LASTEDITDATE DOUBLE PRECISION,
        DISCOUNTMANAGER NUMERIC(6, 2),
        DOCUMENTNUM NUMERIC(18, 0),
        INVOICETYPE INTEGER,
        INVOICEPAYMENT INTEGER,
        DOCUMENTDATE DATE,
        PRINTDOCUMENT CHAR(1) default '0' NOT NULL,
        LOYALTYSYSTEMCARDID VARCHAR(20),
        LOYALTYSYSTEMDISCOUNTRATE NUMERIC(6, 2),
        LOYALTYSYSTEMPARTNERNAME VARCHAR(200),
        LOYALTYSYSTEMDISCOUNTAPPLY CHAR(1) default '1' NOT NULL,
        WEBORDERID INTEGER,
        LOYALTYSYSTEMDISCOUNTTYPE SMALLINT default 0 NOT NULL,
        LOYALTYSYSTEMDISCOUNTPAYONSITE CHAR(1) default '0' NOT NULL,
        EXTERNALSYSTEMORDERNUM INTEGER,
        ORDERHOUR TIME,
        ORDERID INTEGER,
        ORDERLOCATIONID INTEGER,
        ORDERLOCATIONNAME VARCHAR(30),
        NAPCODE VARCHAR(22),
        SUPPLYSTATUS CHAR(1) default '0');

/* Table: SALETEMPBATCH, Owner: SYSDBA */
CREATE TABLE SALETEMPBATCH (BATCHID DID NOT NULL,
        SALETEMPCONTENTID DID NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0),
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY NOT NULL);

/* Table: SALETEMPCONTENT, Owner: SYSDBA */
CREATE TABLE SALETEMPCONTENT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SALENUM INTEGER,
        SALEMATERIALCODE INTEGER,
        QTY DQTY,
        PRINTORDER CHAR(1),
        PRINTERNAME VARCHAR(20),
        PRINTCHECK CHAR(1),
        NOTE VARCHAR(250),
        SALEPRICE DCURR,
        MRROWNO INTEGER,
        ORDERSTAGE VARCHAR(20),
        DISCOUNTPERCENTAGE NUMERIC(6, 4),
        DISCOUNTTYPE SMALLINT,
        POS VARCHAR(10),
        BARCODE VARCHAR(40),
        DYNAMICCONTENT CHAR(1),
        BATCH VARCHAR(20),
        WARRANTY NUMERIC(6, 2),
        SERIALNUM VARCHAR(40),
        PACKAGEDISCOUNTNUM INTEGER,
        PRINTCHECKDATE TIMESTAMP,
        ORDERNUM INTEGER,
        CHECKNUM INTEGER,
        PLACENUM SMALLINT,
        QTYPROMOTION CHAR(1),
        SENDTOGEOVISION CHAR(1),
        PRINTLABEL CHAR(1) default '0' NOT NULL,
        BESTBEFORE DATE,
        B_DISCOUNTPRICE DCURR,
        PROMOTIONPRICE CHAR(1) default '0' NOT NULL,
        PROMOTIONBARCODE VARCHAR(15),
        COUNTRYORIGIN VARCHAR(50),
        MATERIALATTRUBUTE1NAME VARCHAR(25),
        MATERIALATTRUBUTE2NAME VARCHAR(25),
        MATERIALATTRUBUTE3NAME VARCHAR(25),
        MATERIALATTRUBUTE4NAME VARCHAR(25),
        MATERIALATTRUBUTE5NAME VARCHAR(25),
        INSERTUSER VARCHAR(50),
        WEIGHTMATERIAL CHAR(1),
        WEIGHT DQTY,
        PRINTORDER1 CHAR(1),
        PRINTER1NAME VARCHAR(20),
        EARNESTVALUEID INTEGER,
        EARNESTVALUESUM DCURR,
        PRICELISTBEFOREQTYPROMOTION DCURR,
        DELIVERY CHAR(1),
        STORAGEID DID,
        SUPPLYSTATUS CHAR(1) default '0',
        RESERVATIONNOTE VARCHAR(50),
        ORDERHOUR TIME);

/* Table: SALE_ATTACHED_DOC, Owner: SYSDBA */
CREATE TABLE SALE_ATTACHED_DOC (LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SALENUM INTEGER NOT NULL,
        SALELOCATIONID INTEGER default -1 NOT NULL,
        SALEDBTYPE SMALLINT default -1 NOT NULL,
        DOCNUM NUMERIC(18, 0),
        DOCLOCATIONID INTEGER default -1 NOT NULL,
        DOCDBTYPE SMALLINT default -1 NOT NULL,
        DOCUMENTTYPEID INTEGER default 0 NOT NULL,
        OPERATIONTYPE SMALLINT default 0 NOT NULL,
        USERID INTEGER default 0 NOT NULL);

/* Table: SCALE, Owner: SYSDBA */
CREATE TABLE SCALE (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SCALENUM DID NOT NULL,
        SALEMATERIALCODE INTEGER,
        BARCODE VARCHAR(40),
        SAVETOSCALE CHAR(1),
        STATUS CHAR(1),
        PLU INTEGER NOT NULL,
        DATESTATUSUPDATE TIMESTAMP,
        BARCODENUM INTEGER,
        LABELNUM INTEGER,
        EXPIRATIONDATETYPE SMALLINT);

/* Table: SCALENAME, Owner: SYSDBA */
CREATE TABLE SCALENAME (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(20) NOT NULL,
        SCALENUM SMALLINT,
        MAXPLU INTEGER,
        ATTACHTOSCALE VARCHAR(20),
        SCALETYPE INTEGER,
        EXTENDEDINFO CHAR(1) default 0 NOT NULL,
        AUTOMATICTRANSFER CHAR(1) default '0' NOT NULL,
        CODEPAGE VARCHAR(20));

/* Table: SECURITYROLE, Owner: SYSDBA */
CREATE TABLE SECURITYROLE (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(50) NOT NULL,
        CODE VARCHAR(10) NOT NULL,
        BLOCKED CHAR(1) default '0' NOT NULL,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTBLOCKED DATE,
        CODEUSERCREATED VARCHAR(10));

/* Table: SERIALNUM, Owner: SYSDBA */
CREATE TABLE SERIALNUM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        SERIALNUM VARCHAR(40) NOT NULL);

/* Table: SERIALNUMVALUE, Owner: SYSDBA */
CREATE TABLE SERIALNUMVALUE (ID INTEGER NOT NULL,
        SERIALNUM VARCHAR(40));

/* Table: SERVICECONTRACTTYPE, Owner: SYSDBA */
CREATE TABLE SERVICECONTRACTTYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        CONTRACTNAME VARCHAR(30) NOT NULL,
        DEFAULTPRICE DCURR,
        DEFAULTPERIOD SMALLINT);

/* Table: SERVICEDEVICESERIAL, Owner: SYSDBA */
CREATE TABLE SERVICEDEVICESERIAL (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DEVICETYPEID INTEGER NOT NULL,
        SERIALNUM VARCHAR(30) NOT NULL);

/* Table: SERVICEDEVICETYPE, Owner: SYSDBA */
CREATE TABLE SERVICEDEVICETYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PRODUCERID NUMERIC(18, 0),
        MODEL VARCHAR(40) NOT NULL);

/* Table: SERVINGPLACE, Owner: SYSDBA */
CREATE TABLE SERVINGPLACE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        CAPACITY INTEGER,
        PRICELISTID NUMERIC(18, 0),
        DESCRIPTION VARCHAR(25),
        PTYPE SMALLINT,
        PARENTNUM INTEGER,
        STATUS SMALLINT,
        RESAVAILABLE CHAR(1),
        RESBLOCKED CHAR(1),
        RESTYPICALTIME INTEGER,
        PICTUREID INTEGER,
        SIZEPERCENTAGE FLOAT,
        COORDINATEX FLOAT,
        COORDINATEY FLOAT,
        HEIGHT INTEGER,
        WIDTH INTEGER,
        FONTNAME VARCHAR(50),
        FONTSIZE INTEGER,
        FONTCOLOR INTEGER,
        MARKERPOSITION VARCHAR(2),
        LABELPOSITION VARCHAR(2));

/* Table: SERVINGPLACEPERMISSION, Owner: SYSDBA */
CREATE TABLE SERVINGPLACEPERMISSION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        USERID INTEGER NOT NULL,
        SERVINGPLACEID INTEGER NOT NULL);

/* Table: SETTINGALIAS, Owner: SYSDBA */
CREATE TABLE SETTINGALIAS (ID INTEGER NOT NULL,
        APPTYPE SMALLINT NOT NULL,
        ALIASNAME VARCHAR(20) NOT NULL);

/* Table: SETTINGS, Owner: SYSDBA */
CREATE TABLE SETTINGS (STORAGESNAPSHOT CHAR(1),
        STORAGESNAPSHOTSTARTDATE TIMESTAMP,
        STORAGESNAPSHOTENDDATE TIMESTAMP,
        ACTIVEPRICELIST DID,
        PRINTCHECKCOUNTER INTEGER,
        CHECKSTARTCOUNTERDAILY TIMESTAMP,
        MATERIALLOG CHAR(1),
        GROUPSALEONLINE CHAR(1) default 0 NOT NULL,
        COMPANYNAMEDONGLE VARCHAR(50),
        COMPANYTAXNUM VARCHAR(14),
        UPDATEMATERIALNAME CHAR(1) default '0' NOT NULL,
        DEFAULTSCALE VARCHAR(20),
        DBPASS VARCHAR(31),
        SAVEORDER CHAR(1) default '1' NOT NULL,
        SPLOCK INTEGER,
        SAVEREPORTDATA CHAR(1) default '1' NOT NULL,
        SYNCHRODATASAVE CHAR(1) default '1' NOT NULL,
        MONEYFLOWUNITCALCULATION CHAR(1) default '1' NOT NULL);

/* Table: SOLDRECIPEINGREDIENTS, Owner: SYSDBA */
CREATE TABLE SOLDRECIPEINGREDIENTS (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SALENUM INTEGER,
        SALEDATE TIMESTAMP,
        STORAGEID INTEGER default 0 NOT NULL,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        QTY DQTY NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        ADDITIONALFIELD CHAR(1),
        AVGDELIVERYPRICE DCURR,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        OPERATIONID SMALLINT default 0 NOT NULL,
        DEFAULTQTY DQTY default 0 NOT NULL,
        PARENTMATERIALCODE INTEGER,
        PARENTMATERIALNAMEID INTEGER default 0 NOT NULL,
        RECIPEQTY DQTY,
        BATCH VARCHAR(20),
        FROMSTORAGEID INTEGER default 0 NOT NULL,
        LASTDELIVERYPRICE DCURR,
        MATERIALTYPENAMEID INTEGER default 0 NOT NULL,
        FROMBATCH VARCHAR(20),
        CATEGORYID INTEGER default 0 NOT NULL,
        PARTNERNAMEID INTEGER default 0 NOT NULL,
        PARTNERLOCATIONNAMEID INTEGER default 0 NOT NULL,
        PARTNERCONTACTNAMEID INTEGER default 0 NOT NULL,
        CATEGORYID1 INTEGER default 0 NOT NULL,
        USERNAMEID INTEGER default 0 NOT NULL,
        BESTBEFORE DATE,
        FROMBESTBEFORE DATE);

/* Table: SPECIFICATIONNAME, Owner: SYSDBA */
CREATE TABLE SPECIFICATIONNAME (ID INTEGER NOT NULL,
        SPECIFICATION VARCHAR(40));

/* Table: STAFFCONSUMPTION, Owner: SYSDBA */
CREATE TABLE STAFFCONSUMPTION (ID DID NOT NULL,
        LOCATIONNAMEID INTEGER default 0 NOT NULL,
        SCNUM INTEGER NOT NULL,
        SCDATE DATE,
        PAYEDSUM DCURR,
        CONSUMPTIONUSERID INTEGER default 0 NOT NULL,
        INPUTUSERID INTEGER default 0 NOT NULL,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        SCTIME TIME,
        EXECDATE TIMESTAMP);

/* Table: STAFFCONSUMPTIONCONTENT, Owner: SYSDBA */
CREATE TABLE STAFFCONSUMPTIONCONTENT (ID DID NOT NULL,
        SCNUM INTEGER NOT NULL,
        STORAGEID INTEGER default 0 NOT NULL,
        MATERIALCODE INTEGER,
        MATERIALNAMEID INTEGER default 0 NOT NULL,
        UOMID INTEGER default 0 NOT NULL,
        QTY DQTY,
        PRICE DCURR,
        LOCATIONID INTEGER default -1 NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        AVGDELIVERYPRICE DCURR,
        LASTDELIVERYPRICE DCURR,
        AVGDELIVERYPRICE1 DCURR,
        LASTDELIVERYPRICE1 DCURR,
        AVGDELIVERYPRICEWOTAX DCURR,
        LASTDELIVERYPRICEWOTAX DCURR);

/* Table: STORAGE, Owner: SYSDBA */
CREATE TABLE STORAGE (ID INTEGER NOT NULL,
        STORAGENAME VARCHAR(20));

/* Table: STORAGEBATCH, Owner: SYSDBA */
CREATE TABLE STORAGEBATCH (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0),
        MATERIALCODE INTEGER NOT NULL,
        BATCH VARCHAR(20) NOT NULL,
        QTY DQTY NOT NULL,
        PRICE DCURR NOT NULL,
        DBTYPE SMALLINT,
        DELIVERYNUM INTEGER,
        BESTBEFORE DATE,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        COUNRTYORIGIN VARCHAR(50));

/* Table: STORAGECONDITION, Owner: SYSDBA */
CREATE TABLE STORAGECONDITION (ID DID NOT NULL,
        LOCATIONID INTEGER,
        STORAGECONDITION VARCHAR(40) NOT NULL);

/* Table: STORAGECONDITIONNAME, Owner: SYSDBA */
CREATE TABLE STORAGECONDITIONNAME (ID INTEGER NOT NULL,
        STORAGECONDITION VARCHAR(40));

/* Table: STORAGENAME, Owner: SYSDBA */
CREATE TABLE STORAGENAME (ID DID NOT NULL,
        LOCATIONID INTEGER,
        STORAGENAME VARCHAR(20) NOT NULL,
        STORAGETYPE VARCHAR(10),
        STORAGEATTACHMENTID NUMERIC(18, 0));

/* Table: STORAGEPARTNER, Owner: SYSDBA */
CREATE TABLE STORAGEPARTNER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0),
        MATERIALCODE INTEGER NOT NULL,
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        DELIVERYDATE TIMESTAMP NOT NULL,
        LASTDELIVERYPRICE DCURR default 0 NOT NULL,
        SUMDELIVERYQTY DQTY default 0 NOT NULL,
        LASTDELIVERYQTY DQTY default 0 NOT NULL);

/* Table: STORAGESNAPSHOT, Owner: SYSDBA */
CREATE TABLE STORAGESNAPSHOT (ID DID NOT NULL,
        LOCATIONID INTEGER,
        STORAGEID DID,
        DATESNAPSHOT TIMESTAMP,
        POSITIVEAVGDELIVERYPRICESUM DCURR,
        NEGATIVEAVGDELIVERYPRICESUM DCURR,
        POSITIVELASTDELIVERYPRICESUM DCURR,
        NEGATIVELASTDELIVERYPRICESUM DCURR,
        POSITIVESALEPRICESUM DCURR,
        NEGATIVESALEPRICESUM DCURR);

/* Table: STOREDMESSAGE, Owner: SYSDBA */
CREATE TABLE STOREDMESSAGE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        MESSAGE VARCHAR(100) NOT NULL);

/* Table: STREETINFO, Owner: SYSDBA */
CREATE TABLE STREETINFO (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        AREAINFOID INTEGER NOT NULL,
        FILTERTYPE SMALLINT NOT NULL,
        NUM VARCHAR(10));

/* Table: SYNCHROINFO, Owner: SYSDBA */
CREATE TABLE SYNCHROINFO (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        LASTACTIONNUM INTEGER NOT NULL);

/* Table: SYNCHROLOG, Owner: SYSDBA */
CREATE TABLE SYNCHROLOG (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        LOGNUM INTEGER NOT NULL,
        DATESTART TIMESTAMP NOT NULL,
        DATESTOP TIMESTAMP,
        STATUS VARCHAR(256));

/* Table: SYNCHRONIZATIONLOG, Owner: SYSDBA */
CREATE TABLE SYNCHRONIZATIONLOG (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SYNCHROLOG BLOB SUB_TYPE TEXT SEGMENT SIZE 80,
        DATESAVE TIMESTAMP);

/* Table: SYNCHRONIZATIONLOG_IN, Owner: SYSDBA */
CREATE TABLE SYNCHRONIZATIONLOG_IN (ID DID NOT NULL,
        LOCATIONID INTEGER,
        SYNCHROLOG BLOB SUB_TYPE TEXT SEGMENT SIZE 80,
        DATESAVE TIMESTAMP,
        DATEUSES TIMESTAMP);

/* Table: SYNCHRONIZATIONPROCEDURE, Owner: SYSDBA */
CREATE TABLE SYNCHRONIZATIONPROCEDURE (ID INTEGER NOT NULL,
        NAME VARCHAR(35),
        DATATYPE INTEGER NOT NULL,
        DATANAME VARCHAR(35),
        MODYLETYPE INTEGER NOT NULL,
        MODULENAME VARCHAR(35));

/* Table: SYNCHROSALEPRECODING, Owner: SYSDBA */
CREATE TABLE SYNCHROSALEPRECODING (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        B_SALENUM INTEGER NOT NULL,
        A_SALENUM INTEGER NOT NULL);

/* Table: SYSLOG, Owner: SYSDBA */
CREATE TABLE SYSLOG (ID DID NOT NULL,
        DTLOG TIMESTAMP,
        USERID VARCHAR(50),
        LOGTYPE SMALLINT,
        "LOG" VARCHAR(255),
        MAJVER SMALLINT,
        MINVER SMALLINT,
        DBVER SMALLINT);

/* Table: TABLELASTOPEN, Owner: SYSDBA */
CREATE TABLE TABLELASTOPEN (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        TEMPSALETABLE INTEGER NOT NULL,
        LASTOPEN TIMESTAMP NOT NULL);

/* Table: TAG, Owner: SYSDBA */
CREATE TABLE TAG (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(100) NOT NULL,
        ALTERNATIVENAME VARCHAR(100) NOT NULL,
        TITLE VARCHAR(200) NOT NULL,
        TAGTYPE INTEGER NOT NULL,
        SELECTIONTYPE INTEGER NOT NULL);

/* Table: TAGMATERIAL, Owner: SYSDBA */
CREATE TABLE TAGMATERIAL (UNIQUECODE BIGINT NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        TAGVALUEID INTEGER NOT NULL,
        TAGID INTEGER NOT NULL);

/* Table: TAGVALUE, Owner: SYSDBA */
CREATE TABLE TAGVALUE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        TAGID INTEGER NOT NULL,
        TAGVALUE VARCHAR(100) NOT NULL,
        ISDEFAULT CHAR(1) default '0' NOT NULL,
        ALTERNATIVEVALUE VARCHAR(100) NOT NULL,
        COLOR INTEGER);

/* Table: TAXGROUP, Owner: SYSDBA */
CREATE TABLE TAXGROUP (ID INTEGER NOT NULL,
        LOCATIONID INTEGER,
        TAXGROUP CHAR(1) NOT NULL,
        TAXPERCENTAGE DCURR Default 0 NOT NULL,
        DEFAULTGROUP CHAR(1) NOT NULL);

/* Table: TAXGROUPREPORT, Owner: SYSDBA */
CREATE TABLE TAXGROUPREPORT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DATEREPORT TIMESTAMP NOT NULL);

/* Table: TDNUM, Owner: SYSDBA */
CREATE TABLE TDNUM (LOCATIONID INTEGER,
        NUM INTEGER);

/* Table: TEMPAVGINCOMEEXPENCE, Owner: SYSDBA */
CREATE TABLE TEMPAVGINCOMEEXPENCE (ID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER NOT NULL);

/* Table: TEMPCONTAINCONTENT, Owner: SYSDBA */
CREATE TABLE TEMPCONTAINCONTENT (ID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        CONTAINCONTENTID INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        TEMPCONTAINNUM INTEGER NOT NULL,
        BATCH VARCHAR(20));

/* Table: TEMPEUR, Owner: SYSDBA */
CREATE TABLE TEMPEUR (VAL INTEGER);

/* Table: TEMPINVENTORY, Owner: SYSDBA */
CREATE TABLE TEMPINVENTORY (ID DID NOT NULL,
        LOCATIONID INTEGER,
        STORAGEID DID,
        MATERIALCODE INTEGER,
        AVAILABLEQTY DKOL,
        MATERIALATTRIBUTE01_ID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE02_ID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE03_ID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE04_ID INTEGER default 0 NOT NULL,
        MATERIALATTRIBUTE05_ID INTEGER default 0 NOT NULL,
        NOTESNOTE VARCHAR(30),
        BATCH VARCHAR(20) default '' NOT NULL,
        PRICETYPE SMALLINT default 1 NOT NULL,
        PRICELISTID NUMERIC(18, 0),
        CATEGORYSELECTED CHAR(1) default '0' NOT NULL,
        USERNAME VARCHAR(50),
        CATEGORY VARCHAR(50),
        SEARCHQTY DQTY,
        DATESTART TIMESTAMP,
        PARTNER VARCHAR(50),
        PARTNERID INTEGER);

/* Table: TEMPINVOICENUM, Owner: SYSDBA */
CREATE TABLE TEMPINVOICENUM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        INVOICENUM INTEGER NOT NULL);

/* Table: TEMPLASTDELIVERYPRICE, Owner: SYSDBA */
CREATE TABLE TEMPLASTDELIVERYPRICE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        LASTDELIVERYPRICE DCURR NOT NULL);

/* Table: TEMPOPERATION, Owner: SYSDBA */
CREATE TABLE TEMPOPERATION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT default -1 NOT NULL,
        NUM INTEGER NOT NULL,
        OPERATIONDOCTYPE INTEGER default 0 NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        USERID INTEGER,
        DEFERREDPAYMENT CHAR(1),
        DOCUMENTNUM NUMERIC(18, 0),
        DOCUMENTDATE DATE,
        DOCUMENTTYPEID INTEGER,
        DOCUMENTSUM DCURR,
        PARTNERNUM INTEGER,
        PARTNERLOCATIONNUM INTEGER,
        PARTNERCONTACTNUM INTEGER,
        RECIEVEUSERID INTEGER,
        MONEYFLOWUNITID INTEGER,
        NOTE VARCHAR(30),
        PRODUCTIONREQUESTNUM INTEGER,
        REPORTINGDATE DATE,
        DATEDELIVERY TIMESTAMP,
        DELIVERYCONFIRMATION CHAR(1) default '0',
        FROMLOCATIONNAME VARCHAR(30),
        FROMTRANSFERNUM INTEGER,
        ZERONTASKENTRYID NUMERIC(18, 0),
        TARGETLOCATION CHAR(1),
        TARGETLOCATIONID INTEGER,
        DATETRANSFER TIMESTAMP,
        TAXSUM1 VARCHAR(30),
        TAXSUM2 VARCHAR(30),
        TAXSUM3 VARCHAR(30),
        DOCNOOUT NUMERIC(18, 0));

/* Table: TEMPOPERATIONCONTENT, Owner: SYSDBA */
CREATE TABLE TEMPOPERATIONCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        OPERATIONDOCTYPE INTEGER default 0 NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        QTY DQTY,
        PRICE DCURR,
        BESTBEFORE DATE,
        DELIVERYTIME TIME,
        BATCH VARCHAR(20),
        TRANSPORTTYPEID INTEGER,
        DOCUMENTPRODUCER VARCHAR(40),
        SALEPRICE DCURR,
        EDITSTATUS CHAR(1),
        PRICEWOVAT DCURR,
        DOCSUM DCURR,
        VATSUM DCURR,
        PERCENTAGEDISCOUNT NUMERIC(6, 2),
        BARCODE VARCHAR(40),
        SALEPRICESUM DCURR,
        SALEPRICEWOVAT DCURR,
        SALEPRICESUMWOVAT DCURR,
        TEMPCONTAINNUM INTEGER,
        PERCENTAGEOVERCHARGE NUMERIC(6, 2),
        REQUESTQTY DQTY,
        ROWNOTE VARCHAR(30),
        MATERIALATTRIBUTE01_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE02_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE03_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE04_ID INTEGER default -1 NOT NULL,
        MATERIALATTRIBUTE05_ID INTEGER default -1 NOT NULL,
        PRODUCTIONREQUESTCONTENTID INTEGER,
        SERIALNUM VARCHAR(40),
        PRICE1 DCURR,
        FROMREQUESTNUM INTEGER,
        AGREEDPRICE CHAR(1),
        CHECKQTY DQTY,
        COUNTRYORIGIN INTEGER,
        STORAGECONDITIONID NUMERIC(18, 0),
        WASTEQTY DQTY);

/* Table: TEMPPARTNERCONTACTNUM, Owner: SYSDBA */
CREATE TABLE TEMPPARTNERCONTACTNUM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        B_PARTNERCONTACTNUM INTEGER NOT NULL,
        A_PARTNERCONTACTNUM INTEGER NOT NULL);

/* Table: TEMPPARTNERNUM, Owner: SYSDBA */
CREATE TABLE TEMPPARTNERNUM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        B_PARTNERNUM INTEGER NOT NULL,
        A_PARTNERNUM INTEGER NOT NULL);

/* Table: TEMPREQUEST, Owner: SYSDBA */
CREATE TABLE TEMPREQUEST (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        DATESAVE TIMESTAMP NOT NULL,
        EXECUTEDATE TIMESTAMP,
        USERID INTEGER NOT NULL,
        EDITREQUESTNUMBER INTEGER,
        PARTNERNUM INTEGER,
        PARTNERLOCATIONNUM INTEGER,
        PARTNERCONTACTNUM INTEGER);

/* Table: TEMPREQUESTCONTENT, Owner: SYSDBA */
CREATE TABLE TEMPREQUESTCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NUM INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        REQUESTQTY DQTY,
        BARCODE VARCHAR(40),
        ROWNOTE VARCHAR(30),
        PARTNERNUM INTEGER default -1 NOT NULL,
        PARTNERLOCATIONNUM INTEGER default -1 NOT NULL,
        PARTNERCONTACTNUM INTEGER default -1 NOT NULL,
        PRICE DCURR,
        DATESALEFROM TIMESTAMP,
        DATESALETO TIMESTAMP,
        SALESUM DCURR);

/* Table: TRANSPORTTYPE, Owner: SYSDBA */
CREATE TABLE TRANSPORTTYPE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(30) NOT NULL);

/* Table: TRANSPORTTYPENAME, Owner: SYSDBA */
CREATE TABLE TRANSPORTTYPENAME (ID INTEGER,
        TRANSPORTTYPE VARCHAR(30));

/* Table: TURNOVERDISCOUNT, Owner: SYSDBA */
CREATE TABLE TURNOVERDISCOUNT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SCHEMANAME VARCHAR(30) NOT NULL,
        TURNOVERSUM DCURR NOT NULL,
        PRICELISTNAMEID NUMERIC(18, 0) NOT NULL,
        TURNOVERDISCOUNTTYPE CHAR(1) default '0' NOT NULL,
        DEBITBALANCESAVE CHAR(1) default '0' NOT NULL,
        DISCOUNTTYPE SMALLINT default 0 NOT NULL,
        DISCOUNTPERCENTAGE NUMERIC(6, 2),
        DISCOUNTMAXSUM DCURR);

/* Table: UOM, Owner: SYSDBA */
CREATE TABLE UOM (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        NAME VARCHAR(10) NOT NULL,
        DEFAULTQTY DQTY default 0 NOT NULL,
        COUNTABLE CHAR(1) default '0' NOT NULL,
        ALTERNATIVNAME VARCHAR(10));

/* Table: UOMCONVERSION, Owner: SYSDBA */
CREATE TABLE UOMCONVERSION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        STORAGEID NUMERIC(18, 0) NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        SOURCEUOMID INTEGER NOT NULL,
        DESTINATIONUOMID INTEGER NOT NULL,
        QTY DQTY NOT NULL);

/* Table: UOMNAME, Owner: SYSDBA */
CREATE TABLE UOMNAME (ID INTEGER NOT NULL,
        NAME VARCHAR(10));

/* Table: UPCOMINGPRICE, Owner: SYSDBA */
CREATE TABLE UPCOMINGPRICE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        PRICELISTID DID NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        STARTDATE TIMESTAMP NOT NULL,
        PRICE DCURR NOT NULL);

/* Table: USERLOGINLOG, Owner: SYSDBA */
CREATE TABLE USERLOGINLOG (ID DID NOT NULL,
        LOCATIONID INTEGER,
        USERNAME VARCHAR(50),
        FUNCTIONALITY VARCHAR(100),
        DTLOG TIMESTAMP);

/* Table: USERNAME, Owner: SYSDBA */
CREATE TABLE USERNAME (ID INTEGER NOT NULL,
        NAME VARCHAR(50));

/* Table: USERPOSITION, Owner: SYSDBA */
CREATE TABLE USERPOSITION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        POSITIONNAME VARCHAR(30) NOT NULL);

/* Table: USERPOSITIONNAME, Owner: SYSDBA */
CREATE TABLE USERPOSITIONNAME (ID INTEGER NOT NULL,
        POSITIONNAME VARCHAR(30));

/* Table: USERS, Owner: SYSDBA */
CREATE TABLE USERS (ID DID NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(50) NOT NULL,
        PASS VARCHAR(50) NOT NULL,
        ACCOUNTTYPE SMALLINT,
        SECONDNAME VARCHAR(50),
        ACTIVEPRICELISTID NUMERIC(18, 0),
        LASTLOGIN TIMESTAMP,
        SECONDPASS VARCHAR(50),
        CODE VARCHAR(10),
        "FIRSTNAME" VARCHAR(50),
        "MIDDLENAME" VARCHAR(50),
        "LASTNAME" VARCHAR(50),
        SECURITYROLEID DID,
        BLOCKED CHAR(1) default '0' NOT NULL,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTBLOCKED TIMESTAMP,
        CODEUSERCREATED VARCHAR(10));

/* Table: VATNUM, Owner: SYSDBA */
CREATE TABLE VATNUM (ID INTEGER NOT NULL,
        VATNUM VARCHAR(50));

/* Table: VOLUMEPROMOTION, Owner: SYSDBA */
CREATE TABLE VOLUMEPROMOTION (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SALEMATERIALCODE INTEGER NOT NULL,
        MINDEVIDEQTY DQTY NOT NULL,
        PRICELISTID NUMERIC(18, 0) NOT NULL,
        PROMOTIONQTY DQTY default 1 NOT NULL,
        ADDQTY CHAR(1) default '1' NOT NULL,
        PARTNERREQUIRED CHAR(1) default '0' NOT NULL,
        SCHEMANAME VARCHAR(30));

/* Table: WAREHOUSELOCATION, Owner: SYSDBA */
CREATE TABLE WAREHOUSELOCATION (ID INTEGER NOT NULL,
        NAME VARCHAR(200) NOT NULL);

/* Table: WEBORDER, Owner: SYSDBA */
CREATE TABLE WEBORDER (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        ORDERNUMBER INTEGER,
        CLIENTNAME VARCHAR(256),
        DELIVERYINFO D_DELIVERYINFO,
        DELIVERYNOTE D_DELIVERYNOTE,
        DTSAVE TIMESTAMP NOT NULL,
        STATUS SMALLINT NOT NULL,
        EXTERNALSYSTEMORDERNAME VARCHAR(25),
        ORDERPAYMENT INTEGER,
        ORDERPAYMENTSTR VARCHAR(250));

/* Table: WEBORDERCONTENT, Owner: SYSDBA */
CREATE TABLE WEBORDERCONTENT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        DBTYPE SMALLINT NOT NULL,
        WEBORDERID INTEGER NOT NULL,
        MATERIALCODE INTEGER NOT NULL,
        MATERIALNAMEID INTEGER NOT NULL,
        QTY DQTY NOT NULL,
        SALEPRICE DCURR NOT NULL,
        PRODUCT_TYPE INTEGER,
        PRODUCT_DISCOUNT NUMERIC(10, 2),
        SMERKAROW INTEGER,
        PERENT_ROW INTEGER,
        POSITION_NOTE VARCHAR(200));

/* Table: WEIGHTSCALE, Owner: SYSDBA */
CREATE TABLE WEIGHTSCALE (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        SCALENAME VARCHAR(20) NOT NULL,
        SCALETYPE SMALLINT,
        PORTNUM SMALLINT);

/* Table: WORKPERIOD, Owner: SYSDBA */
CREATE TABLE WORKPERIOD (ID INTEGER NOT NULL,
        LOCATIONID INTEGER,
        NAME VARCHAR(30),
        STARTTIME TIME,
        STARTDATE DATE,
        ENDTIME TIME,
        ENDDATE DATE,
        EXECTIME TIME,
        EXECDATE DATE,
        USERCODE VARCHAR(10),
        PERIODICITY INTEGER NOT NULL,
        PERIODICITYCOUNT INTEGER,
        PERIODTYPE INTEGER NOT NULL);

/* Table: WORKPLACE, Owner: SYSDBA */
CREATE TABLE WORKPLACE (ID INTEGER NOT NULL,
        NAME VARCHAR(10) NOT NULL,
        CODE VARCHAR(10),
        DESCRIPT VARCHAR(255) NOT NULL,
        LOCATIONID INTEGER,
        WORKTYPE INTEGER,
        PCNAME VARCHAR(255),
        FUNUM VARCHAR(25),
        BLOCKED CHAR(1) default '0' NOT NULL,
        DATECREATED TIMESTAMP default current_date,
        DATELASTCHANGE TIMESTAMP default current_date,
        DATELASTBLOCKED TIMESTAMP,
        DATELASTLOGIN TIMESTAMP,
        CODEUSERCREATED VARCHAR(10),
        VERSION INTEGER default 0 NOT NULL);

/* Table: WORKREPORT, Owner: SYSDBA */
CREATE TABLE WORKREPORT (ID INTEGER NOT NULL,
        LOCATIONID INTEGER NOT NULL,
        USERID INTEGER default 0 NOT NULL,
        APPTYPE SMALLINT NOT NULL,
        DATESAVED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        POS VARCHAR(10),
        REPORTTITLE VARCHAR(100) NOT NULL,
        REPORTDATA BLOB SUB_TYPE 0 SEGMENT SIZE 80 NOT NULL);

/*  Index definitions for all user tables */
CREATE UNIQUE INDEX INDEXACTIVATIONKEYUNIQUE ON ACTIVATIONKEY (ID);
CREATE UNIQUE INDEX INDEXACTIVATIONKEYUNIQUE1 ON ACTIVATIONKEY (ACTIVATIONKEY);
CREATE UNIQUE INDEX INDEXADDRESSTYPE1 ON ADDRESSTYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXADDRESSTYPE2 ON ADDRESSTYPE (LOCATIONID, ADDRESSTYPE);
CREATE INDEX INDEXAGREEDDELIVERYPRICEMATCODE ON AGREEDDELIVERYPRICE (MATERIALCODE);
CREATE UNIQUE INDEX INDEXAGREEDDELIVERYPRICEUNIQUE ON AGREEDDELIVERYPRICE (LOCATIONID, ID);
CREATE INDEX INDEXAGREEDDPRICESTORAGEID ON AGREEDDELIVERYPRICE (STORAGEID);
CREATE UNIQUE INDEX INDEXPROGRAMSETTINGS1 ON APPLICATIONSETTINGS (ID);
CREATE UNIQUE INDEX INDEXPROGRAMSETTINGS2 ON APPLICATIONSETTINGS (SETTINGALIASID, SETTINGNUM);
CREATE UNIQUE INDEX INDEXAREAINFO1 ON AREAINFO (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXAREAINFO2 ON AREAINFO (LOCATIONID, AREATYPEID, STREET, ADDRESSTYPE);
CREATE UNIQUE INDEX INDEXAREATYPE1 ON AREATYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXAREATYPE2 ON AREATYPE (LOCATIONID, AREA);
CREATE UNIQUE INDEX INDEXBARCODEUNIQUE ON BARCODE (LOCATIONID, STORAGEID, STORAGEMATERIALCODE, CODE, MATERIALATTRIBUTE01_ID, MATERIALATTRIBUTE02_ID, MATERIALATTRIBUTE03_ID, MATERIALATTRIBUTE04_ID, MATERIALATTRIBUTE05_ID);
CREATE UNIQUE INDEX INDEXBARCODEUNIQUE1 ON BARCODE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXBARCODEMASKUNIQUE ON BARCODEMASK (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXBARCODECODES1 ON BARCODEREPORT (ID);
CREATE UNIQUE INDEX INDEXBARCODECODES2 ON BARCODEREPORT (BARCODE);
CREATE UNIQUE INDEX INDEXBILLABLETIME ON BILLABLETIME (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXBLOCKMATERIAL1 ON BLOCKMATERIAL (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXBLOCKMATERIAL2 ON BLOCKMATERIAL (LOCATIONID, STORAGEID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXBONUSPOINTMATERIAL ON BONUSPOINTMATERIAL (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXBONUSPOINTMATERIAL1 ON BONUSPOINTMATERIAL (LOCATIONID, BONUSSCHEME, SALEMATERIALCODE);
CREATE UNIQUE INDEX INDEXBONUSPOINTTURNOVER ON BONUSPOINTTURNOVER (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXBONUSPOINTTURNOVER1 ON BONUSPOINTTURNOVER (LOCATIONID, BONUSSCHEME);
CREATE INDEX INDEXCANCELATION1 ON CANCELATION (LOCATIONID, DBTYPE, SALENUM, OPERATIONID);
CREATE INDEX INDEXCANCELATIONDATECLEAR ON CANCELATION (CANCELATIONDATE);
CREATE UNIQUE INDEX INDEXCANCELATIONUNIQUE ON CANCELATION (ID);
CREATE UNIQUE INDEX INDEXCANCELATIONSUBJECT1 ON CANCELATIONSUBJECT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXCANCELATIONSUBJECT2 ON CANCELATIONSUBJECT (LOCATIONID, SUBJECT);
CREATE UNIQUE INDEX INDEXCATEGORY3 ON CATEGORY (LOCATIONID, CATEGORY);
CREATE INDEX INDEXCATEGORYFULLNAME ON CATEGORY (LOCATIONID, FULLNAME);
CREATE UNIQUE INDEX INDEXCATEGORYUNIQUE ON CATEGORY (LOCATIONID, NUM, NAME, CATEGORY);
CREATE UNIQUE INDEX INDEXCATEGORYUNIQUE1 ON CATEGORY (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXCATEGORYNAME1 ON CATEGORYNAME (CATEGORYNAME);
CREATE UNIQUE INDEX INDEXCATEGORYNAMEUNIQUE ON CATEGORYNAME (ID);
CREATE UNIQUE INDEX INDEXCOMPANYNAME1 ON COMPANYNAME (ID);
CREATE UNIQUE INDEX INDEXCOMPANYNAME2 ON COMPANYNAME (COMPANYNAME);
CREATE UNIQUE INDEX INDEXCOUNTRYUNIQUE ON COUNTRY (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXCOUNTRYUNIQUE1 ON COUNTRY (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXCOUNTRYNAMEUNIQUE ON COUNTRYNAME (ID);
CREATE UNIQUE INDEX INDEXCOUNTRYNAMEUNIQUE1 ON COUNTRYNAME (NAME);
CREATE UNIQUE INDEX INDEXCURRENCYUNIQUE ON CURRENCY (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXCURRENCYUNIQUE1 ON CURRENCY (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXCURRENCYRATEUNIQUE ON CURRENCYRATE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXCURRENCYRATEUNIQUE1 ON CURRENCYRATE (LOCATIONID, SOURCECURRENCYTYPEID, DESTINATIONCURRENCYTYPEID);
CREATE UNIQUE INDEX INDEXDAILYMENU1 ON DAILYMENU (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXDAILYMENU2 ON DAILYMENU (LOCATIONID, SALEMATERIALCODE, DATEACTIVE);
CREATE UNIQUE INDEX INDEXM_TEXTTERMINALSETTINGS1 ON DBREADPRINT (ID);
CREATE UNIQUE INDEX INDEXM_TEXTTERMINALSETTINGS2 ON DBREADPRINT (PRINTSERVERNAME, PRINTERNAME);
CREATE UNIQUE INDEX INDEXDBVERSIONDETAIL ON DBVERSIONDETAIL (ID);
CREATE UNIQUE INDEX INDEXDBVERSIONDETAIL1 ON DBVERSIONDETAIL (OBJECTTYPE, NAME);
CREATE UNIQUE INDEX INDEXDEBITBALANCE1 ON DEBITBALANCE (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXDEFERREDPAYMENT1 ON DEFERREDPAYMENT (LOCATIONID, SALENUM, OPERATIONTYPEID, DBTYPE);
CREATE INDEX INDEXDEFERREDPAYMENTOPERATIONID ON DEFERREDPAYMENT (OPERATIONTYPEID);
CREATE INDEX INDEXDEFERREDPAYMENTPCONTACTNUM ON DEFERREDPAYMENT (PARTNERCONTACTNUM);
CREATE INDEX INDEXDEFERREDPAYMENTPLOCANUM ON DEFERREDPAYMENT (PARTNERLOCATIONNUM);
CREATE INDEX INDEXDEFERREDPAYMENTPNOMER ON DEFERREDPAYMENT (PARTNERNUM);
CREATE INDEX INDEXDEFERREDPAYMENTUSERNAME ON DEFERREDPAYMENT (USERNAME);
CREATE UNIQUE INDEX INDEXDEFERREDPAYUNIQUE ON DEFERREDPAYMENT (LOCATIONID, ID);
CREATE INDEX INDEXDEFERREDPAYMENTTDTPAY ON DEFERREDPAYMENTTRANSACTION (DATEPAYMENT);
CREATE INDEX INDEXDEFERREDPAYMENTTOPERID ON DEFERREDPAYMENTTRANSACTION (USERID);
CREATE UNIQUE INDEX INDEXDEFERREDPAYMENTTUNIQUE ON DEFERREDPAYMENTTRANSACTION (ID);
CREATE UNIQUE INDEX INDEXDELIVERYBATCHUNIQUE ON DELIVERYBATCH (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXDELIVERYTYPENAMEUNIQUE ON DELIVERYTYPENAME (ID);
CREATE UNIQUE INDEX INDEXDELIVERYTYPENAMEUNIQUE1 ON DELIVERYTYPENAME (DELIVERYTYPE);
CREATE UNIQUE INDEX INDEXDOCUMENTTYPE ON DOCUMENTTYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXDOCUMENTTYPE1 ON DOCUMENTTYPE (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXDOCUMENTTYPENAMEUNIQUE ON DOCUMENTTYPENAME (ID);
CREATE UNIQUE INDEX INDEXDOCUMENTTYPENAMEUNIQUE1 ON DOCUMENTTYPENAME (DOCUMENTTYPE);
CREATE UNIQUE INDEX DONGLELEGALUSECHECK1 ON DONGLELEGALUSECHECK (ID);
CREATE UNIQUE INDEX DONGLELEGALUSECHECK2 ON DONGLELEGALUSECHECK (APPID, APPNAME);
CREATE UNIQUE INDEX INDEXEARNEST1 ON EARNEST (ID);
CREATE UNIQUE INDEX INDEXEARNEST2 ON EARNEST (LOCATIONID, DBTYPE, NUM);
CREATE UNIQUE INDEX INDEXEARNESTCONTENT1 ON EARNESTCONTENT (ID);
CREATE INDEX INDEXEARNESTCONTENT2 ON EARNESTCONTENT (LOCATIONID, DBTYPE, NUM);
CREATE INDEX INDEXEARNESTCONTENT3 ON EARNESTCONTENT (MATERIALCODE);
CREATE INDEX INDEXEXPENCEEXPENCEDATE ON EXPENCE (EXPENCEDATE);
CREATE INDEX INDEXEXPENCEUNIQUE ON EXPENCE (ID, LOCATIONID, DBTYPE, OPERATIONTYPE);
CREATE UNIQUE INDEX INDEXEXPENCEGROUPUNIQUE ON EXPENCEGROUP (LOCATIONID, EXPENCE);
CREATE UNIQUE INDEX INDEXEXPENCEGROUPUNIQUE1 ON EXPENCEGROUP (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXEXPORTHISTROY ON EXPORTHISTORY (LOCATIONID, LOGID);
CREATE UNIQUE INDEX INDEXEXTERNALSYSTEMORDER1 ON EXTERNALSYSTEMORDER (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXEXTERNALSYSTEMORDER2 ON EXTERNALSYSTEMORDER (ORDERNUM);
CREATE UNIQUE INDEX INDEXEXTERNALSYSTEMORDER3 ON EXTERNALSYSTEMORDER (LOCATIONID, DELIVERYNUM, DBTYPE);
CREATE INDEX INDEXEXTERNALSYSTEMORDER4 ON EXTERNALSYSTEMORDER (LOCATIONID, SALENUM, DBTYPE);
CREATE UNIQUE INDEX INDEXFISCALDEVICE1 ON FISCALDEVICE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXFISCALDEVICE2 ON FISCALDEVICE (LOCATIONID, FISCALDEVICENAME);
CREATE UNIQUE INDEX INDEXFISCALDEVICENAME1 ON FISCALDEVICENAME (ID);
CREATE UNIQUE INDEX INDEXFISCALDEVICENAME2 ON FISCALDEVICENAME (FISCALDEVICENAME);
CREATE INDEX INDEXFISCALREPORT1 ON FISCALREPORT (FDSERIALNUM);
CREATE INDEX INDEXFISCALREPORTDTOTCHET ON FISCALREPORT (REPORTDATE);
CREATE UNIQUE INDEX INDEXFISCALREPORTUNIQUE ON FISCALREPORT (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXFIXPRICEUNIQUE ON FIXPRICE (LOCATIONID, SALEMATERIALCODE);
CREATE UNIQUE INDEX INDEXFIXPRICEUNIQUE1 ON FIXPRICE (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXFSOPENTRANSACTION1 ON FSOPENTRANSACTION (ID);
CREATE UNIQUE INDEX INDEXFSOPENTRANSACTION2 ON FSOPENTRANSACTION (LOCATIONID, SESSIONNO);
CREATE UNIQUE INDEX INDEXFSOPENTRANSACTION3 ON FSOPENTRANSACTION (LOCATIONID);
CREATE UNIQUE INDEX INDEXFSREQUEST1 ON FSREQUEST (ID);
CREATE UNIQUE INDEX INDEXFSREQUEST2 ON FSREQUEST (LOCATIONID, STORAGEID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXHAPPYHOUR1 ON HAPPYHOUR (ID, LOCATIONID);
CREATE INDEX INDEXINCOMINGORDERCONTENT1 ON INCOMINGORDERCONTENT (PERFORMSTATUS);
CREATE INDEX INDEXINCOMINGORDERCONTENT2 ON INCOMINGORDERCONTENT (LOCATIONID, INCOMINGORDERID);
CREATE UNIQUE INDEX INDEXINCOMINGORDERCONTENTUNIQUE ON INCOMINGORDERCONTENT (ID, LOCATIONID);
CREATE INDEX INDEXINVENTORYDATE ON INVENTORY (DATEINVENTORY);
CREATE UNIQUE INDEX INDEXINVENTORYNUM ON INVENTORY (INVENTORYNUM, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXINVENTORYUNIQUE ON INVENTORY (ID);
CREATE INDEX INDEXINVENTORYCONTENT1 ON INVENTORYCONTENT (MATERIALCODE, MATERIALNAMEID);
CREATE INDEX INDEXINVENTORYCONTENT2 ON INVENTORYCONTENT (LOCATIONID, DBTYPE, INVENTORYNUM, MATERIALCODE, MATERIALNAMEID);
CREATE INDEX INDEXINVENTORYCONTENTNUM ON INVENTORYCONTENT (LOCATIONID, DBTYPE, INVENTORYNUM);
CREATE UNIQUE INDEX INDEXINVENTORYCONTENTUNIQUE ON INVENTORYCONTENT (ID);
CREATE UNIQUE INDEX INDEXINVENTORYMOBILE1 ON INVENTORYMOBILE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMISTRALMREVIZA2 ON INVENTORYMOBILE (LOCATIONID, STORAGEID, MATERIALCODE, MATERIALATTRIBUTE01_ID, MATERIALATTRIBUTE02_ID, MATERIALATTRIBUTE03_ID, MATERIALATTRIBUTE04_ID, MATERIALATTRIBUTE05_ID, BATCH);
CREATE INDEX INDEXINVOICE1 ON INVOICE (INVOICENUM);
CREATE INDEX INDEXINVOICEDATEFAK ON INVOICE (DATEINVOICE);
CREATE UNIQUE INDEX INDEXINVOICENOMER ON INVOICE (NUM, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXINVOICEUNIQUE ON INVOICE (ID);
CREATE INDEX INDEXINVOICECONTENTFAKTURAID ON INVOICECONTENT (LOCATIONID, DBTYPE, INVOICENUMID);
CREATE UNIQUE INDEX INDEXINVOICECONTENTUNIQUE ON INVOICECONTENT (ID);
CREATE UNIQUE INDEX INDEXKEYFS1 ON KEYFS (DEVICEID);
CREATE UNIQUE INDEX INDEXMSKEYS1 ON KEYM (DEVICEID);
CREATE UNIQUE INDEX INDEXLOCATIONUNIQUE ON LOCATION (ID);
CREATE UNIQUE INDEX INDEXLOCATIONUNIQUE1 ON LOCATION (NAME);
CREATE UNIQUE INDEX INDEXLOCATIONNAMEUNIQUE ON LOCATIONNAME (ID);
CREATE UNIQUE INDEX INDEXLOCATIONNAMEUNIQUE1 ON LOCATIONNAME (LOCATION);
CREATE UNIQUE INDEX INDEXLOCATIONNETSETTINGSUNIQUE ON LOCATIONNETSETTINGS (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXLOGBONUSPOINT ON LOGBONUSPOINT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXLOTTERYSALE1 ON LOTTERYSALE (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXLOTTERYSALE2 ON LOTTERYSALE (LOCATIONID, SERIALNUM);
CREATE INDEX INDEXLOTTERYSALE3 ON LOTTERYSALE (LOCATIONID, DBTYPE, DATESENT);
CREATE INDEX INDEXCKLADSALEMATERIALCODE ON MATERIAL (SALEMATERIALCODE);
CREATE INDEX INDEXMATERIALCODE ON MATERIAL (MATERIALCODE, STORAGEID, KINDTYPE);
CREATE INDEX INDEXMATERIALSEARCHNAME ON MATERIAL (LOCATIONID, SEARCHNAME);
CREATE UNIQUE INDEX INDEXMATERIALUNIQUE ON MATERIAL (LOCATIONID, STORAGEID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXMATERIALUNIQUE1 ON MATERIAL (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMATERIALADDON ON MATERIALADDON (MATERIALUNIQUECODE, LOCATIONID, SOURCEUNIQUECODE);
CREATE UNIQUE INDEX INDEXMATERIALALTERNATIVENAME1 ON MATERIALALTERNATIVENAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALALTERNATIVENAME2 ON MATERIALALTERNATIVENAME (MATERIALALTERNATIVENAME);
CREATE UNIQUE INDEX INDEXMATALTERNATIVVATUNIQUE ON MATERIALALTERNATIVVAT (LOCATIONID, MATERIALUNIQUECODE);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE1_1 ON MATERIALATTRIBUTE1 (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE1_2 ON MATERIALATTRIBUTE1 (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE1NAME1 ON MATERIALATTRIBUTE1NAME (ID);
CREATE INDEX INDEXMATERIALATTRIBUTE1NAME2 ON MATERIALATTRIBUTE1NAME (NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE2_1 ON MATERIALATTRIBUTE2 (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE2_2 ON MATERIALATTRIBUTE2 (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE2NAME1 ON MATERIALATTRIBUTE2NAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE2NAME2 ON MATERIALATTRIBUTE2NAME (NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE3_1 ON MATERIALATTRIBUTE3 (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE3_2 ON MATERIALATTRIBUTE3 (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE3NAME1 ON MATERIALATTRIBUTE3NAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE3NAME2 ON MATERIALATTRIBUTE3NAME (NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE4_1 ON MATERIALATTRIBUTE4 (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE4_2 ON MATERIALATTRIBUTE4 (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE4NAME1 ON MATERIALATTRIBUTE4NAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE4NAME2 ON MATERIALATTRIBUTE4NAME (NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE5_1 ON MATERIALATTRIBUTE5 (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE5_2 ON MATERIALATTRIBUTE5 (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE5NAME1 ON MATERIALATTRIBUTE5NAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTE5NAME2 ON MATERIALATTRIBUTE5NAME (NAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTEALIAS1 ON MATERIALATTRIBUTEALIAS (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTEALIAS2 ON MATERIALATTRIBUTEALIAS (LOCATIONID, TABLENAME);
CREATE UNIQUE INDEX INDEXMATERIALATTRIBUTEALIAS3 ON MATERIALATTRIBUTEALIAS (LOCATIONID, TABLEALIAS);
CREATE UNIQUE INDEX INDEXSTOCKATTRIBUTEGROUP1 ON MATERIALATTRIBUTECATEGORY (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTOCKATTRIBUTEGROUP2 ON MATERIALATTRIBUTECATEGORY (LOCATIONID, ATTRIBUTENUM, MATERIALATTRIBUTEID, CATEGORY);
CREATE UNIQUE INDEX INDEXAMATERIALBATCH1 ON MATERIALBATCH (ID, LOCATIONID);
CREATE INDEX INDEXMATERIALBATCH2 ON MATERIALBATCH (LOCATIONID, STORAGEID, MATERIALCODE);
CREATE INDEX INDEXMATERIALCONTENT ON MATERIALCONTENT (LOCATIONID, MATERIALUNIQUECODE);
CREATE INDEX INDEXDATELOG ON MATERIALLOG (DATELOG);
CREATE INDEX INDEXMATERIALLOG1 ON MATERIALLOG (A_LOCATIONNAMEID, A_STORAGENAMEID, A_MATERIALNUM, A_MATERIALNAMEID, DATELOG, LOCATIONID);
CREATE INDEX INDEXMATERIALLOG2 ON MATERIALLOG (A_STORAGENAMEID, A_MATERIALNUM, DATELOG, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALLOGUNIQUE ON MATERIALLOG (ID);
CREATE UNIQUE INDEX INDEXMATERIALNAMEUNIQUE ON MATERIALNAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALNAMEPREVIOUS1 ON MATERIALNAMEPREVIOUS (ID);
CREATE INDEX INDEXMATERIALNAMEPREVIOUS2 ON MATERIALNAMEPREVIOUS (A_LOCATIONID, A_STORAGEID, A_MATERIALCODE, A_MATERIALNAME);
CREATE INDEX INDEXMATERIALNAMEPREVIOUS3 ON MATERIALNAMEPREVIOUS (B_LOCATIONID, B_STORAGEID, B_MATERIALCODE, B_MATERIALNAME);
CREATE UNIQUE INDEX INDEXMATERIALPEXTSYSTEMUNIQUE ON MATERIALPARTNEREXTERNALSYSTEM (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALPEXTSYSTEMUNIQUE1 ON MATERIALPARTNEREXTERNALSYSTEM (LOCATIONID, PARTNERNUM, PARTNERLOCATIONNUM, PARTNERCONTACTNUM, STORAGEID, MATERIALCODE, PARTNERMATERIALCODE);
CREATE UNIQUE INDEX INDEXMATERIALQTYATTRIBUTE1 ON MATERIALQTYATTRIBUTE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMATERIALQTYATTRIBUTE2 ON MATERIALQTYATTRIBUTE (LOCATIONID, STORAGEID, MATERIALCODE, MATERIALATTRIBUTE01_ID, MATERIALATTRIBUTE02_ID, MATERIALATTRIBUTE03_ID, MATERIALATTRIBUTE04_ID, MATERIALATTRIBUTE05_ID);
CREATE UNIQUE INDEX INDEXMATERIALQTYLOG1 ON MATERIALQTYLOG (ID);
CREATE INDEX INDEXMATERIALQTYLOG2 ON MATERIALQTYLOG (ID, LOCATIONID, STORAGEID, MATERIALCODE, OPERATIONDATE);
CREATE INDEX INDEXMATERIALQTYLOG3 ON MATERIALQTYLOG (LOCATIONID, STORAGEID, MATERIALCODE, OPERATIONDATE);
CREATE UNIQUE INDEX INDEXMATERIALRESERVATION1 ON MATERIALRESERVATION (ID, LOCATIONID);
CREATE INDEX INDEXMATERIALSALEINFO3 ON MATERIALSALEINFO (LOCATIONID, PRINTLABEL, PRINTLABELSTATUS, ELECTRONICLABEL);
CREATE UNIQUE INDEX INDEXMATERIALSALEINFOUNIQUE ON MATERIALSALEINFO (LOCATIONID, MATERIALSALECODE);
CREATE UNIQUE INDEX INDEXMATERIALSALEINFOUNIQUE1 ON MATERIALSALEINFO (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMATERIALSALEINFOUNIQUE2 ON MATERIALSALEINFO (LOCATIONID, FROMSTORAGEID, FROMMATERIALNUM);
CREATE UNIQUE INDEX INDEXMATERIALSOLDSERIALNUM1 ON MATERIALSOLDSERIALNUM (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXMATERIALTYPEUNIQUE ON MATERIALTYPE (LOCATIONID, MATERIALTYPE);
CREATE UNIQUE INDEX INDEXMATERIALTYPEUNIQUE1 ON MATERIALTYPE (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMATERIALTYPENAMEUNIQUE ON MATERIALTYPENAME (ID);
CREATE UNIQUE INDEX INDEXMATERIALTYPENAMEUNIQUE1 ON MATERIALTYPENAME (MATERIALTYPE);
CREATE UNIQUE INDEX INDEXMODIFIERUNIQUE ON MODIFIER (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXMODIFIERUNIQUE1 ON MODIFIER (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMODIFIERUNIQUE2 ON MODIFIER (LOCATIONID, MODIFIER);
CREATE UNIQUE INDEX INDEXMODIFIERCATEGORY1 ON MODIFIERCATEGORY (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMODIFIERCATEGORY2 ON MODIFIERCATEGORY (LOCATIONID, MODIFIERNUM, CATEGORY);
CREATE UNIQUE INDEX INDEXMODIFIERCONTENT ON MODIFIERCONTENT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMODIFIERLIST ON MODIFIERLIST (MODIFIERID, LOCATIONID, TYPEID);
CREATE UNIQUE INDEX INDEXMODIFIERLOG1 ON MODIFIERLOG (ID);
CREATE UNIQUE INDEX INDEXMODIFIERLOG2 ON MODIFIERLOG (MODIFIER);
CREATE UNIQUE INDEX INDEXMODIFIERRECIPE1 ON MODIFIERRECIPE (ID, LOCATIONID);
CREATE INDEX INDEXMODIFIERRECIPE2 ON MODIFIERRECIPE (LOCATIONID, UCODE, MODIFIERNUM);
CREATE UNIQUE INDEX INDEXMODIFIERRECIPELIST ON MODIFIERRECIPELIST (MODIFIERRECIPEID, LOCATIONID, MODIFIERTYPEID, TYPEID);
CREATE UNIQUE INDEX INDEXMODIFIERTYPE ON MODIFIERTYPE (ID, LOCATIONID, NAME);
CREATE INDEX INDEXMODIFIERTYPEID ON MODIFIERTYPE (ID, LOCATIONID);
CREATE INDEX INDEXMONEYFLOW1 ON MONEYFLOW (SALENUM, LOCATIONID, DBTYPE, OPERATIONTYPE);
CREATE INDEX INDEXMONEYFLOW2 ON MONEYFLOW (LOCATIONID, DBTYPE, USERNAMEID, OPERATIONDATE);
CREATE INDEX INDEXMONEYFLOWACTIONID ON MONEYFLOW (OPERATIONID);
CREATE INDEX INDEXMONEYFLOWDTDATE ON MONEYFLOW (OPERATIONDATE);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNIQUE ON MONEYFLOW (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXMONEYFLOWAUTOACCOUNTING1 ON MONEYFLOWAUTOACCOUNTING (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMONEYFLOWAUTOACCOUNTING2 ON MONEYFLOWAUTOACCOUNTING (LOCATIONID, SOURCEMONEYFLOWUNITID);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITUNIQUE ON MONEYFLOWUNIT (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITUNIQUE1 ON MONEYFLOWUNIT (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITNAMEUNIQUE ON MONEYFLOWUNITNAME (ID);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITNAMEUNIQUE1 ON MONEYFLOWUNITNAME (NAME);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITPERMISSION1 ON MONEYFLOWUNITPERMISSION (LOCATIONID, MONEYFLOWUNITNAME, USERNAME);
CREATE UNIQUE INDEX INDEXMONEYFLOWUNITPERMISUNIQ ON MONEYFLOWUNITPERMISSION (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXMONEYTRANSFER1 ON MONEYTRANSFER (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXMYCOMPANYUNIQUE ON MYCOMPANY (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXMYCOMPANYUNIQUE1 ON MYCOMPANY (LOCATIONID, COMPANYNAME);
CREATE UNIQUE INDEX INDEXNOMINAL1 ON NOMINAL (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXNOMINAL2 ON NOMINAL (LOCATIONID, CURRENCYID, NOMINALLABEL, NOMINALVALUE);
CREATE UNIQUE INDEX INDEXNOMINAL3 ON NOMINAL (LOCATIONID, CURRENCYID, NOMINALLABEL);
CREATE UNIQUE INDEX INDEXNOMINAL4 ON NOMINAL (LOCATIONID, CURRENCYID, NOMINALVALUE);
CREATE INDEX INDEXOPERATIONCONTENT1 ON OPERATIONCONTENT (STORAGEID, MATERIALCODE, MATERIALNAMEID);
CREATE INDEX INDEXOPERATIONCONTENT2 ON OPERATIONCONTENT (LOCATIONID, DBTYPE, NUM, MATERIALCODE, MATERIALNAMEID);
CREATE INDEX INDEXOPERATIONCONTENTDOCTNOMER ON OPERATIONCONTENT (LOCATIONID, DBTYPE, NUM);
CREATE UNIQUE INDEX INDEXOPERATIONCONTENTUNIQUE ON OPERATIONCONTENT (ID);
CREATE INDEX INDEXOPERATIONDOCUMENT ON OPERATIONDOCUMENT (LOCATIONID, DBTYPE, NUM);
CREATE INDEX INDEXOPERATIONDOCUMENT1 ON OPERATIONDOCUMENT (LOCATIONID, DBTYPE, NUM, DOCUMENTTYPEID, DOCUMENTNUM, DOCUMENTDATE, OPERATIONDOCTYPE);
CREATE UNIQUE INDEX INDEXOPERATIONDOCUMENT2 ON OPERATIONDOCUMENT (ID);
CREATE INDEX INDEXOPERATIONDOCUMENT3 ON OPERATIONDOCUMENT (LOCATIONID, DBTYPE, DOCUMENTTYPEID, DOCUMENTNUM, OPERATIONDOCTYPE);
CREATE INDEX INDEXOPERATIONDOCUMENTNUMTYPE ON OPERATIONDOCUMENT (NUM, OPERATIONDOCTYPE);
CREATE INDEX INDEXOPERATION1 ON OPERATIONS (LOCATIONID, PARTNERNUM);
CREATE INDEX INDEXOPERATIONDATE ON OPERATIONS (DOCUMENTDATE);
CREATE INDEX INDEXOPERATIONEDITNUM ON OPERATIONS (EDITNUM);
CREATE UNIQUE INDEX INDEXOPERATIONNUM ON OPERATIONS (UNIQUENUM, LOCATIONID, DBTYPE, OPERATIONDOCTYPE, EDITNUM);
CREATE INDEX INDEXOPERATIONNUMTYPE ON OPERATIONS (NUM, OPERATIONDOCTYPE);
CREATE INDEX INDEXOPERATIONS ON OPERATIONS (ID, LOCATIONID, DBTYPE, OPERATIONDOCTYPE);
CREATE UNIQUE INDEX INDEXOPERATIONUNIQUE ON OPERATIONS (ID);
CREATE UNIQUE INDEX INDEXOPERATIONTYPEUNIQUE ON OPERATIONTYPE (OPERATIONID);
CREATE UNIQUE INDEX INDEXORDERCONTENT1 ON ORDERCONTENT (ID, LOCATIONID);
CREATE INDEX INDEXORDERCONTENT2 ON ORDERCONTENT (ORDERID, LOCATIONID);
CREATE UNIQUE INDEX INDEXORDERSTAGE1 ON ORDERSTAGE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXORDERSTAGE2 ON ORDERSTAGE (LOCATIONID, STAGENUM);
CREATE INDEX INDEXORDERS2 ON ORDER_T (DATEORDER);
CREATE INDEX INDEXORDERS3 ON ORDER_T (LOCATIONID, SALENUM, OPERATIONID);
CREATE INDEX INDEXORDERS4 ON ORDER_T (PRINTSTATUS);
CREATE UNIQUE INDEX INDEXORDERSUNIQUE ON ORDER_T (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPOR1 ON ORDER_T (ID, LOCATIONID, DBTYPE);
CREATE INDEX INDEXPACKAGEDISCOUNT1 ON PACKAGEDISCOUNT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPARTNERUNIQUE ON PARTNER (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXPARTNERUNIQUE1 ON PARTNER (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPARTNERCONTACTUNIQUE ON PARTNERCONTACT (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXPARTNERCONTACTUNIQUE1 ON PARTNERCONTACT (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPARTNERCONTACTNAMEUNIQUE ON PARTNERCONTACTNAME (ID);
CREATE UNIQUE INDEX INDEXPARTNEREMPLOYEEN_SUNIQUE1 ON PARTNERCONTACTNAME (PARTNERCONTACT);
CREATE UNIQUE INDEX INDEXPARTNERCONTACTPERSONALID1 ON PARTNERCONTACTPERSONALID (ID);
CREATE UNIQUE INDEX INDEXPARTNERCONTACTPERSONALID2 ON PARTNERCONTACTPERSONALID (PERSONALID);
CREATE UNIQUE INDEX INDEXPARTNERLASTSALE1 ON PARTNERLASTSALE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPARTNERLASTSALE2 ON PARTNERLASTSALE (LOCATIONID, PARTNERNUM, PARTNERLOCATIONNUM, PARTNERCONTACTNUM, SALEMATERIALCODE);
CREATE UNIQUE INDEX INDEXPARTNERLOCATIONUNIQUE ON PARTNERLOCATION (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXPARTNERLOCATIONUNIQUE1 ON PARTNERLOCATION (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPARTNERLOCATIONNAMEUNIQ ON PARTNERLOCATIONNAME (ID);
CREATE UNIQUE INDEX INDEXPARTNERLOCATIONNAMEUNIQ1 ON PARTNERLOCATIONNAME (PARTNERLOCATION);
CREATE UNIQUE INDEX INDEXPARTNERNAMEUNIQUE ON PARTNERNAME (ID);
CREATE UNIQUE INDEX INDEXPARTNERNAMEUNIQUE1 ON PARTNERNAME (PARTNERNAME);
CREATE UNIQUE INDEX INDEXPARNTERSNOTE2 ON PARTNERNOTE (PARTNERNOTE);
CREATE UNIQUE INDEX INDEXPARTNERNOTE1 ON PARTNERNOTE (ID);
CREATE INDEX INDEXPARTNERSERVICEUSER ON PARTNERSERVICEUSER (PARTNERNUM, LOCATIONID);
CREATE INDEX INDEXPARTNERSERVICEUSER1 ON PARTNERSERVICEUSER (PARTNERLOCATIONNUM, LOCATIONID);
CREATE UNIQUE INDEX INDEXPARTNERSERVICEUSERUNIQUE ON PARTNERSERVICEUSER (LOCATIONID, PARTNERNUM, PARTNERLOCATIONNUM, PARTNERCONTACTNUM, SERVICETYPE);
CREATE UNIQUE INDEX INDEXPARTNERSETTINGUNIQUE ON PARTNERSETTING (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPARTNERSETTINGUNIQUE1 ON PARTNERSETTING (LOCATIONID, PARTNERNUM, PARTNERLOCATIONNUM, PARTNERCONTACTNUM);
CREATE INDEX INDEXPARTNERSSETTINGS1 ON PARTNERSETTING (LOCATIONID, PARTNERCONTACTNUM);
CREATE UNIQUE INDEX INDEXPARTNERSHORTNAME1 ON PARTNERSHORTNAME (NAME);
CREATE UNIQUE INDEX INDEXPARTNERSHORTNAMEUNIQUE ON PARTNERSHORTNAME (ID);
CREATE UNIQUE INDEX INDEXPARTNERTAXNUM1 ON PARTNERTAXNUM (ID);
CREATE UNIQUE INDEX INDEXPARTNERTAXNUM2 ON PARTNERTAXNUM (TAXNUM);
CREATE UNIQUE INDEX INDEXPARTNERTYPEUNIQUE ON PARTNERTYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPARTNERTYPEUNIQUE1 ON PARTNERTYPE (LOCATIONID, PARTNERTYPE);
CREATE UNIQUE INDEX INDEXPARTNERTYPENAME1 ON PARTNERTYPENAME (ID);
CREATE UNIQUE INDEX INDEXPARTNERTYPENAME2 ON PARTNERTYPENAME (PARTNERTYPE);
CREATE UNIQUE INDEX INDEXPAYMENTONDELIVERY1 ON PAYMENTONDELIVERY (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXPERMISBACKOFFICEUNIQUE ON PERMISSIONBACKOFFICE (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPERMISBACKOFFICEDETAIL1 ON PERMISSIONBACKOFFICEDETAIL (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPERMPOSUNIQUE ON PERMISSIONPOS (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPERMISSIONREPORT1 ON PERMISSIONREPORT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPERMISSIONREPORT2 ON PERMISSIONREPORT (LOCATIONID, APPTYPE, VERSION, REPORTTITLE, REPORTCATEGORY, USERNAME);
CREATE UNIQUE INDEX INDEXPHONEORDERTEMP1 ON PHONEORDERTEMP (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPHONEORDERTEMP2 ON PHONEORDERTEMP (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXPHONEORDERTEMPCONTENT1 ON PHONEORDERTEMPCONTENT (ID, LOCATIONID);
CREATE INDEX INDEXPRICELISTMATERIALCODE ON PRICELIST (MATERIALCODE);
CREATE UNIQUE INDEX INDEXPRICELISTUNIQUE ON PRICELIST (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPRICELISTUNIQUE1 ON PRICELIST (LOCATIONID, PRICELISTID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXPRICELISTNAMEUNIQUE ON PRICELISTNAME (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXPRICELISTNAMEUNIQUE1 ON PRICELISTNAME (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPRICELISTPERSENTAGE1 ON PRICELISTPERSENTAGE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPRICELISTPERSENTAGE2 ON PRICELISTPERSENTAGE (LOCATIONID, PRICELISTID, MATERIALCODE, CUSTOMERCOUNT);
CREATE UNIQUE INDEX INDEXPRLISTREPNAMEUNIQUE ON PRICELISTREPORTINGNAME (ID);
CREATE UNIQUE INDEX INDEXPRLISTREPNAMEUNIQUE1 ON PRICELISTREPORTINGNAME (PRICELISTNAME);
CREATE UNIQUE INDEX INDEXPRICINGPOLICY1 ON PRICINGPOLICY (ID, LOCATIONID);
CREATE INDEX INDEXPRICINGPOLICY2 ON PRICINGPOLICY (LOCATIONID, PRICINGPOLICYNAME, TIMEACTIVEFROM, TIMEACTIVETO, ACTIVEEVERYMONDAY, ACTIVEEVERYTUESDAY, ACTIVEEVERYWEDNESDAY, ACTIVEEVERYTHURSDAY, ACTIVEEVERYFRIDAY, ACTIVEEVERYSATURDAY, ACTIVEEVERYSUNDAY);
CREATE UNIQUE INDEX INDEXPRINTERSUNIQUE ON PRINTER (LOCATIONID, PRINTERNAME);
CREATE UNIQUE INDEX INDEXPRINTERSUNIQUE1 ON PRINTER (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPRINTERNAMES1 ON PRINTERNAME (ID);
CREATE UNIQUE INDEX INDEXPRINTERNAMES2 ON PRINTERNAME (PRINTERNAME);
CREATE UNIQUE INDEX INDEXPRODUCERINFOUNIQUE ON PRODUCERINFO (LOCATIONID, PRODUCERNUM);
CREATE UNIQUE INDEX INDEXPRODUCERINFOUNIQUE1 ON PRODUCERINFO (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXPRODUCERINFOUNIQUE2 ON PRODUCERINFO (LOCATIONID, PRODUCERNAME, PRODUCERNUM);
CREATE UNIQUE INDEX INDEXPRODUCERNAMESUNIQUE ON PRODUCERNAME (ID);
CREATE UNIQUE INDEX INDEXPRODUCERNAMESUNIQUE1 ON PRODUCERNAME (PRODUCER);
CREATE UNIQUE INDEX INDEXPRODUCTIONREQUEST1 ON PRODUCTIONREQUEST (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPRODUCTIONREQUEST2 ON PRODUCTIONREQUEST (LOCATIONID, DBTYPE, NUM);
CREATE UNIQUE INDEX INDEXPRODUCTIONREQUESTCONTENT ON PRODUCTIONREQUESTCONTENT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPROMBARCODES1 ON PROMOTIONBARCODE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXPROMBARCODES2 ON PROMOTIONBARCODE (LOCATIONID, PROMOTIONBARCODE);
CREATE UNIQUE INDEX INDEXPROMOTIONSALESPRICE1 ON PROMOTIONSALEPRICE (ID, LOCATIONID);
CREATE INDEX INDEXPROMOTIONSALESPRICE2 ON PROMOTIONSALEPRICE (LOCATIONID, SALEMATERIALCODE);
CREATE UNIQUE INDEX INDEXRECIPEMODIFLOCATION1 ON RECIPEMODIFICATIONLOCATION (RECIPENUM);
CREATE UNIQUE INDEX INDEXRECIPEMODIFLOCATION2 ON RECIPEMODIFICATIONLOCATION (ID);
CREATE UNIQUE INDEX INDEXREPORT1 ON REPORT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXREPORT2 ON REPORT (LOCATIONID, APPTYPE, VERSION, REPORTTITLE, REPORTCATEGORY);
CREATE UNIQUE INDEX INDEXREQUESTNUM ON REQUEST (REQUESTNUM, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXREQUESTUNIQUE ON REQUEST (ID);
CREATE INDEX REQUESTREQUESTDATE ON REQUEST (REQUESTDATE);
CREATE INDEX INDEXREQUESTCONTENT1 ON REQUESTCONTENT (MATERIALCODE);
CREATE INDEX INDEXREQUESTCONTENT2 ON REQUESTCONTENT (LOCATIONID, DBTYPE, REQUESTNUM, MATERIALCODE, MATERIALNAMEID);
CREATE UNIQUE INDEX INDEXREQUESTCONTENTUNIQUE ON REQUESTCONTENT (ID);
CREATE INDEX INDEXREQUESTCONTENTZAIAVKANOMER ON REQUESTCONTENT (REQUESTNUM);
CREATE UNIQUE INDEX INDEXRESERVATIONNOTE ON RESERVATIONNOTE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXRAVALUATIONUNIQUE ON REVALUATION (ID);
CREATE INDEX INDEXREVALUATIONTSDATETIME ON REVALUATION (DATESAVE);
CREATE UNIQUE INDEX INDEXROWNOTE1 ON ROWNOTE (ID);
CREATE UNIQUE INDEX INDEXROWNOTE2 ON ROWNOTE (NOTE);
CREATE INDEX INDEXSALE1 ON SALE (LOCATIONID, PARTNERNUM);
CREATE INDEX INDEXSALE2 ON SALE (LOCATIONID, DBTYPE);
CREATE INDEX INDEXSALEOPERID ON SALE (USERID);
CREATE INDEX INDEXSALEPRDATE ON SALE (SALEDATE);
CREATE UNIQUE INDEX INDEXSALEUNIQUE ON SALE (ID);
CREATE UNIQUE INDEX INDEXSALEUNIQUE1 ON SALE (NUM, LOCATIONID, DBTYPE);
CREATE INDEX INDEXSALECONTENT1 ON SALECONTENT (LOCATIONID, DBTYPE, NUM, MATERIALCODE, MATERIALNAMEID);
CREATE INDEX INDEXSALECONTENTCODE ON SALECONTENT (MATERIALCODE);
CREATE INDEX INDEXSALECONTENTNOMER ON SALECONTENT (LOCATIONID, DBTYPE, NUM);
CREATE UNIQUE INDEX INDEXSALECONTENTUNIQUE ON SALECONTENT (ID);
CREATE UNIQUE INDEX INDEXSALEDAILY ON SALEDAILY (ID);
CREATE UNIQUE INDEX INDEXSALEDAILY1 ON SALEDAILY (ID, TIMEDATE, LOCATIONNAMEID, MATERIALCODE, MATERIALNAMEID, UOMID, DELIVERYPRICE, SALEPRICE, CATEGORYID);
CREATE INDEX INDEXSALEDAILY2 ON SALEDAILY (TIMEDATE);
CREATE UNIQUE INDEX INDEXSALEEDITUNIQUE1 ON SALEEDIT (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXSALEEDITCONTENTUNIQUE1 ON SALEEDITCONTENT (ID, LOCATIONID, DBTYPE);
CREATE UNIQUE INDEX INDEXSALEEXPORTLOG1 ON SALEEXPORTLOG (ID);
CREATE UNIQUE INDEX INDEXSALEEXPORTLOG2 ON SALEEXPORTLOG (LOCATIONID, DBTYPE, SALENUM);
CREATE INDEX INDEXSALEEXPORTLOG3 ON SALEEXPORTLOG (SENDDATE);
CREATE INDEX INDEXSALENUM ON SALETEMP (SALENUM);
CREATE INDEX INDEXSALETEMP1 ON SALETEMP (LOCATIONID, SERVINGPLACE);
CREATE UNIQUE INDEX INDEXSALETEMPUNIQUE ON SALETEMP (LOCATIONID, ID);
CREATE INDEX INDEXSALETEMPUSER ON SALETEMP (LOCATIONID, USERNAME);
CREATE INDEX INDEXSALETEMPCONTENT1 ON SALETEMPCONTENT (LOCATIONID, PLACENUM);
CREATE INDEX INDEXSALETEMPCONTENTNUM ON SALETEMPCONTENT (SALENUM);
CREATE UNIQUE INDEX INDEXSALETEMPCONTENTUNIQUE ON SALETEMPCONTENT (LOCATIONID, ID);
CREATE INDEX INDEXSCALESALEMATERIALCODE ON SCALE (LOCATIONID, SCALENUM, SALEMATERIALCODE);
CREATE UNIQUE INDEX INDEXSCALEUNIQUE ON SCALE (LOCATIONID, SCALENUM, PLU);
CREATE UNIQUE INDEX INDEXSCALEUNIQUE1 ON SCALE (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXSCALENAMEUNIQUE ON SCALENAME (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXSCALENAMEUNIQUE1 ON SCALENAME (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXSERIALNUM1 ON SERIALNUM (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERIALNUM2 ON SERIALNUM (LOCATIONID, SALEMATERIALCODE, SERIALNUM);
CREATE INDEX SERIALNUM3 ON SERIALNUM (LOCATIONID, SERIALNUM);
CREATE UNIQUE INDEX INDEXSERIALNUMVALUES1 ON SERIALNUMVALUE (ID);
CREATE UNIQUE INDEX INDEXSERIALNUMVALUES2 ON SERIALNUMVALUE (SERIALNUM);
CREATE UNIQUE INDEX INDEXSERVICECONTRACTTYPE1 ON SERVICECONTRACTTYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERVICECONTRACTTYPE2 ON SERVICECONTRACTTYPE (CONTRACTNAME);
CREATE UNIQUE INDEX INDEXSERVICEDEVICESERIAL1 ON SERVICEDEVICESERIAL (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERVICEDEVICESERIAL2 ON SERVICEDEVICESERIAL (SERIALNUM);
CREATE UNIQUE INDEX INDEXSERVICEDEVICETYPE1 ON SERVICEDEVICETYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERVICEDEVICETYPE2 ON SERVICEDEVICETYPE (MODEL);
CREATE UNIQUE INDEX INDEXSERVINGPLACE1 ON SERVINGPLACE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERVINGPLACE2 ON SERVINGPLACE (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXSERVINGPLACEPERMISSION1 ON SERVINGPLACEPERMISSION (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSERVINGPLACEPERMISSION2 ON SERVINGPLACEPERMISSION (LOCATIONID, USERID, SERVINGPLACEID);
CREATE UNIQUE INDEX INDEXSETTINGALIAS1 ON SETTINGALIAS (ID);
CREATE UNIQUE INDEX INDEXSETTINGALIAS2 ON SETTINGALIAS (APPTYPE, ALIASNAME);
CREATE INDEX INDEXSOLDRECIPEINGREDIENTS1 ON SOLDRECIPEINGREDIENTS (LOCATIONID, DBTYPE, SALENUM, OPERATIONID);
CREATE INDEX INDEXSOLDRECIPEINGREDPRDATE ON SOLDRECIPEINGREDIENTS (SALEDATE);
CREATE UNIQUE INDEX INDEXSOLDRECIPEINGREDUNIQUE ON SOLDRECIPEINGREDIENTS (ID);
CREATE UNIQUE INDEX INDEXSPECIFICATIONNAME1 ON SPECIFICATIONNAME (ID);
CREATE UNIQUE INDEX INDEXSPECIFICATIONNAME2 ON SPECIFICATIONNAME (SPECIFICATION);
CREATE INDEX INDEXSTAFFCONSUMPTIONPFDATE ON STAFFCONSUMPTION (SCDATE);
CREATE UNIQUE INDEX INDEXSTAFFCONSUMPTIONPFNOMER ON STAFFCONSUMPTION (SCNUM, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTAFFCONSUMPTIONUNIQUE ON STAFFCONSUMPTION (ID);
CREATE INDEX INDEXSTAFFCONSUMCONTENTPFNOM ON STAFFCONSUMPTIONCONTENT (LOCATIONID, DBTYPE, SCNUM);
CREATE UNIQUE INDEX INDEXSTAFFCONSUMCONTENTUNIQ ON STAFFCONSUMPTIONCONTENT (ID);
CREATE UNIQUE INDEX INDEXSTORAGEUNIQUE ON STORAGE (ID);
CREATE UNIQUE INDEX INDEXSTORAGEUNIQUE1 ON STORAGE (STORAGENAME);
CREATE UNIQUE INDEX INDEXSTORAGEBATCH1 ON STORAGEBATCH (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTORAGEBATCH2 ON STORAGEBATCH (LOCATIONID, STORAGEID, MATERIALCODE, BATCH);
CREATE UNIQUE INDEX INDEXSTORAGECONDITIONUNIQUE ON STORAGECONDITION (LOCATIONID, STORAGECONDITION);
CREATE UNIQUE INDEX INDEXSTORAGECONDITIONUNIQUE1 ON STORAGECONDITION (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXSTORAGECONDITIONNAMEUNIQ1 ON STORAGECONDITIONNAME (STORAGECONDITION);
CREATE UNIQUE INDEX INDEXSTORAGECONDITIONNAMEUNIQUE ON STORAGECONDITIONNAME (ID);
CREATE UNIQUE INDEX INDEXSTORAGENAMEUNIQUE ON STORAGENAME (LOCATIONID, STORAGENAME);
CREATE UNIQUE INDEX INDEXSTORAGENAMEUNIQUE1 ON STORAGENAME (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXSTORAGEPARTNER1 ON STORAGEPARTNER (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTORAGEPARTNER2 ON STORAGEPARTNER (LOCATIONID, STORAGEID, MATERIALCODE, PARTNERNUM, PARTNERLOCATIONNUM, PARTNERCONTACTNUM);
CREATE INDEX INDEXSTORAGESNAPSHOTDATESALDO ON STORAGESNAPSHOT (DATESNAPSHOT);
CREATE UNIQUE INDEX INDEXSTORAGESNAPSHOTUNIQUE ON STORAGESNAPSHOT (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXSTOREDMESSAGE1 ON STOREDMESSAGE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTOREDMESSAGE2 ON STOREDMESSAGE (LOCATIONID, MESSAGE);
CREATE UNIQUE INDEX INDEXSTREETINFO1 ON STREETINFO (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXSTREETINFO2 ON STREETINFO (LOCATIONID, AREAINFOID, FILTERTYPE, NUM);
CREATE UNIQUE INDEX INDEXSYNCHROINFO1 ON SYNCHROINFO (ID);
CREATE UNIQUE INDEX INDEXSYNCHROINFO2 ON SYNCHROINFO (LOCATIONID);
CREATE UNIQUE INDEX INDEXSYNCHROLOG1 ON SYNCHROLOG (ID);
CREATE UNIQUE INDEX INDEXSYNCHROLOG2 ON SYNCHROLOG (LOCATIONID, LOGNUM);
CREATE UNIQUE INDEX INDEXSYNCHRONIZATIONLOGUNIQUE ON SYNCHRONIZATIONLOG (ID);
CREATE INDEX INDEXSYNCHRONIZATIONLOG_IN ON SYNCHRONIZATIONLOG_IN (LOCATIONID, DATESAVE);
CREATE INDEX INDEXSYNCHRONIZATIONLOG_IN1 ON SYNCHRONIZATIONLOG_IN (DATESAVE);
CREATE INDEX INDSYNCHRONIZATIONPROCEDURE1 ON SYNCHRONIZATIONPROCEDURE (DATATYPE);
CREATE UNIQUE INDEX INDSYNCHRONIZATIONPROCEDUREU ON SYNCHRONIZATIONPROCEDURE (ID);
CREATE UNIQUE INDEX INDSYNCHRONIZATIONPROCEDUREU1 ON SYNCHRONIZATIONPROCEDURE (NAME);
CREATE UNIQUE INDEX INDEXSYNCHROSALEPRECODING1 ON SYNCHROSALEPRECODING (ID);
CREATE UNIQUE INDEX INDEXSYNCHROSALEPRECODING2 ON SYNCHROSALEPRECODING (LOCATIONID, DBTYPE, B_SALENUM);
CREATE UNIQUE INDEX INDEXSYNCHROSALEPRECODING3 ON SYNCHROSALEPRECODING (LOCATIONID, DBTYPE, A_SALENUM);
CREATE UNIQUE INDEX INDEXTABLELASTOPEN1 ON TABLELASTOPEN (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTABLELASTOPEN2 ON TABLELASTOPEN (LOCATIONID, TEMPSALETABLE);
CREATE INDEX INDEXTAG ON TAG (ID, LOCATIONID);
CREATE INDEX INDEXTAGMATERIALUNIQUE ON TAGMATERIAL (UNIQUECODE, LOCATIONID, TAGVALUEID);
CREATE INDEX INDEXTAGVALUE ON TAGVALUE (ID, LOCATIONID, TAGID);
CREATE UNIQUE INDEX INDEXTAXGROUP1 ON TAXGROUP (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTAXGROUP2 ON TAXGROUP (TAXGROUP, LOCATIONID);
CREATE INDEX INDEXTAXGROUP3 ON TAXGROUP (LOCATIONID, DEFAULTGROUP);
CREATE UNIQUE INDEX INDEXTAXGROUPREPORT ON TAXGROUPREPORT (ID);
CREATE UNIQUE INDEX INDEXTAXGROUPREPORT2 ON TAXGROUPREPORT (LOCATIONID, DATEREPORT);
CREATE UNIQUE INDEX INDEXTEMPAVGINCOMEEXPENCE1 ON TEMPAVGINCOMEEXPENCE (ID);
CREATE UNIQUE INDEX INDEXTEMPAVGINCOMEEXPENCE2 ON TEMPAVGINCOMEEXPENCE (MATERIALCODE);
CREATE UNIQUE INDEX INDEXTEMPAVGINCOMEEXPENCE3 ON TEMPAVGINCOMEEXPENCE (MATERIALNAMEID);
CREATE UNIQUE INDEX INDEXTEMPCONTAINCONTENT1 ON TEMPCONTAINCONTENT (ID, DBTYPE, LOCATIONID);
CREATE UNIQUE INDEX INDEXTEMPCONTAINCONTENT2 ON TEMPCONTAINCONTENT (ID, DBTYPE, LOCATIONID, CONTAINCONTENTID);
CREATE UNIQUE INDEX INDEXTEMPCONTAINCONTENT3 ON TEMPCONTAINCONTENT (DBTYPE, LOCATIONID, CONTAINCONTENTID, TEMPCONTAINNUM, BATCH);
CREATE UNIQUE INDEX INDEXTEMPINVENTORY1 ON TEMPINVENTORY (LOCATIONID, STORAGEID, MATERIALCODE, MATERIALATTRIBUTE01_ID, MATERIALATTRIBUTE02_ID, MATERIALATTRIBUTE03_ID, MATERIALATTRIBUTE04_ID, MATERIALATTRIBUTE05_ID, BATCH);
CREATE INDEX INDEXTEMPINVENTORY2 ON TEMPINVENTORY (LOCATIONID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXTEMPINVENTORYUNIQUE ON TEMPINVENTORY (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXTEMPINVOICENUM1 ON TEMPINVOICENUM (ID);
CREATE UNIQUE INDEX INDEXTEMPINVOICENUM2 ON TEMPINVOICENUM (LOCATIONID);
CREATE UNIQUE INDEX INDEXTEMPLASTDELIVERYPRICE1 ON TEMPLASTDELIVERYPRICE (ID);
CREATE UNIQUE INDEX INDEXTEMPLASTDELIVERYPRICE2 ON TEMPLASTDELIVERYPRICE (LOCATIONID, STORAGEID, MATERIALCODE);
CREATE UNIQUE INDEX INDEXTEMPOPERATION1 ON TEMPOPERATION (ID);
CREATE INDEX INDEXTEMPOPERATION2 ON TEMPOPERATION (LOCATIONID, NUM, DBTYPE, OPERATIONDOCTYPE);
CREATE UNIQUE INDEX INDEXTEMPOPERATIONCONTENT1 ON TEMPOPERATIONCONTENT (ID);
CREATE UNIQUE INDEX INDEXTEMPPARTNERCONTACTNUM1 ON TEMPPARTNERCONTACTNUM (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTEMPPARTNERCONTACTNUM3 ON TEMPPARTNERCONTACTNUM (LOCATIONID, B_PARTNERCONTACTNUM);
CREATE UNIQUE INDEX INDEXTMPPARNTERSEMPLOYEENOMER2 ON TEMPPARTNERCONTACTNUM (LOCATIONID, B_PARTNERCONTACTNUM, A_PARTNERCONTACTNUM);
CREATE UNIQUE INDEX INDEXTEMPPARTNERNUM1 ON TEMPPARTNERNUM (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTEMPPARTNERNUM2 ON TEMPPARTNERNUM (LOCATIONID, B_PARTNERNUM, A_PARTNERNUM);
CREATE UNIQUE INDEX INDEXTEMPPARTNERNUM3 ON TEMPPARTNERNUM (LOCATIONID, B_PARTNERNUM);
CREATE UNIQUE INDEX INDEXTEMPREQUEST1 ON TEMPREQUEST (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTEMPREQUEST2 ON TEMPREQUEST (LOCATIONID, NUM);
CREATE UNIQUE INDEX INDEXTEMPREQUESTCONTENT1 ON TEMPREQUESTCONTENT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTRANSPORTTYPEUNIQUE ON TRANSPORTTYPE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXTRANSPORTTYPEUNIQUE1 ON TRANSPORTTYPE (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXTRANSPORTTYPENAMEUNIQUE ON TRANSPORTTYPENAME (ID);
CREATE UNIQUE INDEX INDEXTRANSPORTTYPENAMEUNIQUE1 ON TRANSPORTTYPENAME (TRANSPORTTYPE);
CREATE UNIQUE INDEX INDEXTURNOVERDISCOUNT1 ON TURNOVERDISCOUNT (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUOM1 ON UOM (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUOM2 ON UOM (LOCATIONID, NAME);
CREATE UNIQUE INDEX INDEXUOMCONVERSION1 ON UOMCONVERSION (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUOMCONVERSION2 ON UOMCONVERSION (LOCATIONID, STORAGEID, MATERIALCODE, SOURCEUOMID, DESTINATIONUOMID);
CREATE UNIQUE INDEX INDEXUOMNAME1 ON UOMNAME (ID);
CREATE UNIQUE INDEX INDEXUOMNAME2 ON UOMNAME (NAME);
CREATE UNIQUE INDEX INDEXUPCOMINGPRICE1 ON UPCOMINGPRICE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUPCOMINGPRICE2 ON UPCOMINGPRICE (LOCATIONID, PRICELISTID, MATERIALCODE, STARTDATE);
CREATE INDEX INDEXUPCOMINGPRICE3 ON UPCOMINGPRICE (LOCATIONID, MATERIALCODE, STARTDATE);
CREATE UNIQUE INDEX INDEXUSERLOGINLOG1 ON USERLOGINLOG (LOCATIONID, FUNCTIONALITY, USERNAME);
CREATE UNIQUE INDEX INDEXUSERLOGINLOGUNIQUE ON USERLOGINLOG (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUSERNAMEUNIQUE ON USERNAME (ID);
CREATE UNIQUE INDEX INDEXUSERNAMEUNIQUE1 ON USERNAME (NAME);
CREATE UNIQUE INDEX INDEXUSERPOSITION1 ON USERPOSITION (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXUSERPOSITION2 ON USERPOSITION (LOCATIONID, POSITIONNAME);
CREATE UNIQUE INDEX INDEXUSERPOSITIONNAME1 ON USERPOSITIONNAME (ID);
CREATE UNIQUE INDEX INDEXUSERPOSITIONNAME2 ON USERPOSITIONNAME (POSITIONNAME);
CREATE UNIQUE INDEX INDEXUSERSUNIQUE ON USERS (LOCATIONID, NAME, PASS);
CREATE UNIQUE INDEX INDEXUSERSUNIQUE1 ON USERS (LOCATIONID, ID);
CREATE UNIQUE INDEX INDEXUSERSUNIQUE2 ON USERS (LOCATIONID, PASS);
CREATE UNIQUE INDEX INDEXVATNUM1 ON VATNUM (ID);
CREATE UNIQUE INDEX INDEXVATNUM2 ON VATNUM (VATNUM);
CREATE UNIQUE INDEX INDEXPROMOTIONBYQTY1 ON VOLUMEPROMOTION (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXWEBORDER1 ON WEBORDER (ID, LOCATIONID, DBTYPE);
CREATE INDEX INDEXWEBORDER2 ON WEBORDER (STATUS);
CREATE UNIQUE INDEX INDEXWEBORDERCONTENT1 ON WEBORDERCONTENT (ID, LOCATIONID, DBTYPE);
CREATE INDEX INDEXWEBORDERCONTENT2 ON WEBORDERCONTENT (LOCATIONID, DBTYPE, WEBORDERID);
CREATE UNIQUE INDEX INDEXWEIGHTSCALE1 ON WEIGHTSCALE (ID, LOCATIONID);
CREATE UNIQUE INDEX INDEXWEIGHTSCALE2 ON WEIGHTSCALE (LOCATIONID, SCALENAME);
CREATE UNIQUE INDEX INDEXWORKREPORT ON WORKREPORT (ID, LOCATIONID);

/* View: V_NEXT_ID, Owner: SYSDBA */
CREATE VIEW V_NEXT_ID (NEXT_ID) AS

select gen_id(G_MASTER,1) from rdb$database;;

/* View: V_PRINTCOUNT, Owner: SYSDBA */
CREATE VIEW V_PRINTCOUNT (PRINTCOUNT) AS

select gen_id(printCount,1) from rdb$database;;

/*  Exceptions */
CREATE EXCEPTION DBERR 'Error in db';
CREATE EXCEPTION ERRORINOUTZAG 'Error in OutZag';
CREATE EXCEPTION ERRSTOCKLOT 'Error in the operation of stock lot';
CREATE EXCEPTION EXPEMPTYPARTNER 'Empty partner info !';
CREATE EXCEPTION HASDOCTID '╨Э╨╡ ╨╝╨╛╨╢╨╡ ╨┤╨░ ╨▒╤К╨┤╨╡ ╨╕╨╖╤В╤А╨╕╤В╨░ ╤Б╤В╨╛╨║╨░╤В╨░ ╨╖╨░╤Й╨╛╤В╨╛ ╨╡ ╨╜╨░ ╨║╨╛╨╜╤Б╨╕╨│╨╜╨░╤Ж╨╕╤П';
CREATE EXCEPTION H_ROOMSTEL '╨Т╨╡╤З╨╡ ╨╕╨╝╨░ ╨▓╤К╨▓╨╡╨┤╨╡╨╜ ╤В╨░╨║╤К╨▓ ╨╜╨╛╨╝╨╡╤А ╨╜╨░ ╤В╨╡╨╗╨╡╤Д╨╛╨╜';
CREATE EXCEPTION H_USSINGSERVICES '╨У╨╛╤Б╤В╤К╤В ╨╡ ╨┐╨╛╨╗╨╖╨▓╨░╨╗ ╤Г╤Б╨╗╤Г╨│╨╕ ╨║╨╛╨╕╤В╨╛ ╨╜╨╡ ╤Б╨░ ╨┐╨╗╨░╤В╨╡╨╜╨╕';
CREATE EXCEPTION NOMENISUSE '╨Э╨╡ ╨╝╨╛╨╢╨╡ ╨┤╨░ ╤Б╨╡ ╨╕╨╖╤В╤А╨╕╨╡ ╨╜╨╛╨╝╨╡╨╜╨║╨╗╨░╤В╤Г╤А╨░╤В╨░ ╨╖╨░╤Й╨╛╤В╨╛ ╤Б╨╡ ╨╕╨╖╨┐╨╛╨╗╨╖╨▓╨░ !';
CREATE EXCEPTION OUTOFQUANTITY '╨Э╤П╨╝╨░ ╨┤╨╛╤Б╤В╨░╤В╤К╤З╨╜╨╛ ╨║-╨▓╨╛';
CREATE EXCEPTION PARTNERRAZCR '╨Э╨╡ ╨╝╨╛╨╢╨╡ ╨┤╨░ ╨▒╤К╨┤╨╡ ╨╕╨╖╤В╤А╨╕╤В ╨┐╨░╤А╤В╨╜╤М╨╛╤А╨░ ╨╖╨░╤Й╨╛╤В╨╛ ╨╕╨╝╨░ ╨┤╤К╨╗╨╢╨╕╨╝╨╕ ╤А╨░╨╖╤Б╤А╨╛╤З╨╡╨╜╨╕ ╨┐╨╗╨░╤Й╨░╨╜╨╕╤П';
CREATE EXCEPTION TYPEACTIONNOTFOUND 'TypeActionNotFound';
COMMIT WORK;
SET AUTODDL OFF;
SET TERM ^ ;

/* Stored procedures */
CREATE PROCEDURE ADDOPENRECHSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
RECHSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ADDREVGOTOVIPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
ONLYCHECKPROD CHAR(1) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ADDVALUEBYHOURS (TSHOUR SMALLINT,
ADDVALUE NUMERIC(10, 4),
P0_1 NUMERIC(10, 4),
P1_2 NUMERIC(10, 4),
P2_3 NUMERIC(10, 4),
P3_4 NUMERIC(10, 4),
P4_5 NUMERIC(10, 4),
P5_6 NUMERIC(10, 4),
P6_7 NUMERIC(10, 4),
P7_8 NUMERIC(10, 4),
P8_9 NUMERIC(10, 4),
P9_10 NUMERIC(10, 4),
P10_11 NUMERIC(10, 4),
P11_12 NUMERIC(10, 4),
P12_13 NUMERIC(10, 4),
P13_14 NUMERIC(10, 4),
P14_15 NUMERIC(10, 4),
P15_16 NUMERIC(10, 4),
P16_17 NUMERIC(10, 4),
P17_18 NUMERIC(10, 4),
P18_19 NUMERIC(10, 4),
P19_20 NUMERIC(10, 4),
P20_21 NUMERIC(10, 4),
P21_22 NUMERIC(10, 4),
P22_23 NUMERIC(10, 4),
P23_24 NUMERIC(10, 4))
RETURNS (O_P0_1 NUMERIC(10, 4),
O_P1_2 NUMERIC(10, 4),
O_P2_3 NUMERIC(10, 4),
O_P3_4 NUMERIC(10, 4),
O_P4_5 NUMERIC(10, 4),
O_P5_6 NUMERIC(10, 4),
O_P6_7 NUMERIC(10, 4),
O_P7_8 NUMERIC(10, 4),
O_P8_9 NUMERIC(10, 4),
O_P9_10 NUMERIC(10, 4),
O_P10_11 NUMERIC(10, 4),
O_P11_12 NUMERIC(10, 4),
O_P12_13 NUMERIC(10, 4),
O_P13_14 NUMERIC(10, 4),
O_P14_15 NUMERIC(10, 4),
O_P15_16 NUMERIC(10, 4),
O_P16_17 NUMERIC(10, 4),
O_P17_18 NUMERIC(10, 4),
O_P18_19 NUMERIC(10, 4),
O_P19_20 NUMERIC(10, 4),
O_P20_21 NUMERIC(10, 4),
O_P21_22 NUMERIC(10, 4),
O_P22_23 NUMERIC(10, 4),
O_P23_24 NUMERIC(10, 4))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ARTINVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ATTACHTOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE AUTOACCOUNTMONEYIN (OBEKTID INTEGER,
USERID NUMERIC(18, 0),
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE AVGINCOMEOUTGO (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
RETURNS (AVGINCOME DQTY,
AVGOUTGO DQTY,
AVGSALES DQTY,
AVGBRAK DQTY,
AVGOUTSTOKI DQTY,
AVGBACKSTOKI DQTY,
AVGDOCT DQTY,
SUMSALES DQTY,
SUMDOCT DQTY,
SUMZAIAVKI DQTY,
SUMBRAK DQTY,
SUMOUTSTOKI DQTY,
SUMBACKSTOKI DQTY,
SUMASALES DCURR,
SUMADOCT DCURR,
SUMABRAK DCURR,
SUMAOUTSTOKI DCURR,
SUMABACKSTOKI DCURR,
SUMAZAIAVKI DCURR,
SUMREVRAZKOL DQTY,
SUMREVRAZLV DCURR,
AVGREVRAZKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CALCANDROUND (TYPEOPER VARCHAR(1) CHARACTER SET WIN1251,
NUMBER1 VARCHAR(15) CHARACTER SET WIN1251,
NUMBER2 VARCHAR(15) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTVALUE VARCHAR(15) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CALCCKLADQTYBYDATE (DTDATE TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADKOL DQTY)
RETURNS (QTYBYDATE DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CALCHOURANDMIN (INTMINUTES INTEGER)
RETURNS (HOURANDMIN VARCHAR(8) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CANCELEARNEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTCANCEL TIMESTAMP,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
EARNESTSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKALLBOXCKLADCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKALLCKLADCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
KINDTYPE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKALLRECHCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKAVGPRICE (OBEKTID INTEGER,
UCODE BIGINT)
RETURNS (OTUCODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKAVGPRICESTORAGE (OBEKTID INTEGER,
STORAGEID INTEGER)
RETURNS (OTUARTNOMER BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKCKLADCANSALESSALESARTNOMER AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKCKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
KOL DQTY)
RETURNS (RESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKCKLADSALESARTNOMER AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKCKLADSALESCKLAD RETURNS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
TYPEACTION SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKDEFPRICELISTSALESCKLAD RETURNS (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKH_COUNTRYUNIQUEINDEX (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKLOGDATA (LOGDATA VARCHAR(5000) CHARACTER SET WIN1251,
SYSCHAR1 CHAR(1) CHARACTER SET WIN1251,
SYSCHAR2 CHAR(1) CHARACTER SET WIN1251,
SYSCHAR3 CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTLOGDATA VARCHAR(5000) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKOLDNOSMETKANO AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKPARENTGROUPNAME (OBEKTID INTEGER,
GROUPNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKPRICELISTUNIQUE1 RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKREFPRICELISTNAMESPRICELIST AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CHECKSALESCKLAD RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKSALESCKLADCKLADARTNOMER RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
ARTNOMER INTEGER,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKSTOCKATTRIBUTENULL (INSTOCKATTRIBUTE01_ID INTEGER,
INSTOCKATTRIBUTE02_ID INTEGER,
INSTOCKATTRIBUTE03_ID INTEGER,
INSTOCKATTRIBUTE04_ID INTEGER,
INSTOCKATTRIBUTE05_ID INTEGER)
RETURNS (OUTSTOCKATTRIBUTE01_ID INTEGER,
OUTSTOCKATTRIBUTE02_ID INTEGER,
OUTSTOCKATTRIBUTE03_ID INTEGER,
OUTSTOCKATTRIBUTE04_ID INTEGER,
OUTSTOCKATTRIBUTE05_ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKTIMEDAYACTIVE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CHECKUSERFORTABLENO (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CKLADDELARTOTRECH (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CKLADDELARTOTZAG (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARATTACHCKLAD (OBEKTID INTEGER,
CKLADID DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEAREXPORTHISTORY (OBEKTID INTEGER,
FIRSTID NUMERIC(18, 0),
LASTID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARLOGCKLADQTY AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARMISTRALMREVIZIA (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARNULLARTFROMTEKSMETKI (OBEKTID INTEGER,
SMETNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEAROLDARTIKULNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARPARTNERSKARTA (OBEKTID INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARPARTNERSSETTINGSSUMSALES AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARSMETKADEBITNOSALDO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
DTDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLEARTESTSMETKI (CHRDEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLOSEEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLOSELOGSYNC (ID INTEGER,
DTSTOP TIMESTAMP,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE CLOSEOPENRECH (OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYCKLAD (INOBEKTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
TOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
COPYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYCKLADINSTOCKBYATTRIBUTE AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYCKLADROW (INOBEKTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
COPYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYDEFPRICELISTNAMES (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYRECH (OBEKTID INTEGER,
FROMARTNOMER INTEGER,
FROMOTCKLADID NUMERIC(18, 0),
TOARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYRECHFROMTO (OBEKTID INTEGER,
STARTARTNOMER INTEGER,
STOPARTNOMER INTEGER,
FROMOTCKLADID NUMERIC(18, 0),
TOARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COPYREPORTPERM (OBEKTID INTEGER,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TOUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE COUNTARTIKULSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER)
RETURNS (COUNTSERIALNUMBER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE COUNTREGDO RETURNS (COUNTDO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE COUNTSMETKIWITHTO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
OPER VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (SMETKIWITHTO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE COUNTVLOJENOSTSDRART (OBEKTID INTEGER,
VLOJENOSTCKLADID NUMERIC(18, 0),
VLOJENOSTARTNOMER INTEGER)
RETURNS (COUNTSDRART INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE CREATELOGCKLADQTY (TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DECODEGROUP (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPAS VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE DECODEINOBEKTIID (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE DELARTOTBOXCKLADSDR (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELBROCHURE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELCKLADSTOCKGROUP1 (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELCLEARROWS (DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELDAILYMENUBYDATE (OBEKTID INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELDAILYMENUBYNUM (OBEKTID INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEALLDANNIFIRMA (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEALLTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEBARCODEMASK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEDISCOUNTBYHOURS (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFAKTURANOMER (OBEKTID INTEGER,
FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMAREAINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMARTIKULSPARTNO (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBOXCKLADDYNAMICSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBOXCKLADSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMBYPROD (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMDANGROUP (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMDANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMOPENMISTRALM (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERNOTEBYRECH (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMORDERSSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPOSSTATE (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DELFROMDEFPRICELIST CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMPROMTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMRATES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMRAZXODI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMREPORTPERM1 (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMREST_TABLES (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSETTINGSALIAS (TYPEPROGRAM SMALLINT,
ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSMETKIBYDATE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSMETKIBYDATE1 (DATEOT DATE,
DATEDO DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOCKBYATTRIBUTE (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTOREDMESSAGES (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSTREETINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMSYNCLOCK (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEKORDERSBYTEL (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEKORDERSBYTELSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPDELIVERYSDR (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPOUTPRODSDR (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPREV (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPREVBYUSERNAME (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPVLOJENOSTSDR1 (TYPEDB SMALLINT,
OBEKTID INTEGER,
TEMPVLOJENOSTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPZAIAVKI (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTEMPZAIAVKISDR (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTYPEAREA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTYPEMEASURECONV (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTYPEPARTNERS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMTYPETRANSPORT (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMUSERSBYREST_TABLES (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMUSERSBYREST_TABLES1 (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMVERDBDETAIL (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEFROMZAIAVKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEOBEKTI (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPARTNERSTYPEPARTNER (OBEKTID INTEGER,
TYPEPARTNERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPERMPOS (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPRICELISTNAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEPROMOTIONSALESPRICE (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETERECHSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETERESERVEDARTIKULS (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETESMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
REPORTINGDATE DATE,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETES_MACHINE (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETES_TYPECONTRACTS (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETES_TYPEMACHINE (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETAG (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETEMPOUTPROD (NOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETETYPEMEASURE (NAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEUSERSBYPASS (OBEKTID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELETEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMLOGCHANGES (OBEKTID INTEGER,
ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMOBEKTIOPENRECH (ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMPARTNERSEMPLOYEE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMPARTNERSSTORE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFROMVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELMISTRALMZAIAVKI (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELOLDARTIKULNAMES (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPARTNERSSETINGS (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPORSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPRICELISTARTNOMER (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPRINTER (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELRECH (OBEKTID INTEGER,
RECHNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELREVIZIA (REVNO INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELROWFROMTEKSMETKA (OBEKTID INTEGER,
ROWID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELSTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTEKSMETKA (OBEKTID INTEGER,
SMETNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTEMPBACKSTOKISDR (ID INTEGER,
OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTEMPFAKTURINOMER (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELVEZNINAMES (OBEKTID INTEGER,
ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELWEIGHTSCALES (OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DELZAG (OBEKTID INTEGER,
ZAGNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE DROPACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITARTINBOXCKLADSDR (OBEKTID INTEGER,
ID INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITARTINRECHSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITARTINSALESCKLAD (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 0),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITARTINVLOJENOSTSDR (OBEKTID INTEGER,
ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITARTINZAGSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITCKLAD (OBEKTID INTEGER,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITGRYPANAME (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITLOCATIONGROUP (LOCATIONID INTEGER,
DBLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
GROUPNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
PARTNERLOCATIONNUM INTEGER,
CHRMODE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITPRINTER (OBEKTID INTEGER,
OLDPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITRAZXOD (OBEKTID INTEGER,
OLDRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
NEWRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EDITSMETKIDOC (OBEKTID INTEGER,
NOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE EMPTYPOR ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ENCODEGROUP (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (GROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMBOXCKLAD (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
KOL DQTY,
SALESPRICE DCURR,
LASTDOCTPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMRAZFASOVKI (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMRECH (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMSPECHIFIK (OBEKTID INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTFROMZAG (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTIKUL1NAMESID (ARTIKUL1 D_ARTIKULNAME,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTIKULID (ARTIKUL D_ARTIKULNAME,
SAVEARTIKUL CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDARTIKULPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
SALEQTY DQTY,
ID NUMERIC(18, 0),
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDBARCODE (OBEKTID INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDBARCODECODESID (CODE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDBOXCKLADSDRART (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDBYLSTATNAMESID (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDCKLADNAMESID (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDANNIFIRMANAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDDSNONAMESID (DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDOCBYDELIVERY (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDOCBYDELIVERYID (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDOCBYOUTPRODID (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDOCTNOMERINPR_REQUEST (OBEKTID INTEGER,
DOCTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDDOCTYPENAMESID (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDFAKTURANOMER (FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PERCTO NUMERIC(6, 2))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDFISKALPRINTERNAMESID (NAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDH_COUNTRYNAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDMONEYINNAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDNOTESNOTEID (NOTE VARCHAR(30) CHARACTER SET WIN1251,
SAVENOTE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDOBEKTINAMESID (OBEKT VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDOLDARTIKULNAME (ARTIKULNAME D_ARTIKULNAME,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDORDERNOTENOTESID (NOTE VARCHAR(250) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER)
RETURNS (FINDSDR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDOUTPRODNOMERINPR_REQUEST (OBEKTID INTEGER,
OUTPRODNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNERBYKARTA (OBEKTID INTEGER,
KARTAID VARCHAR(60) CHARACTER SET WIN1251)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
KARTAVALIDITYDAYS SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNEREMPLOYEENAMESID (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPARTNERNAMESID (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPARTNERSEMPLOYEEBYNOMER (INOBEKTID INTEGER,
INNOMER VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNERSEMPLOYEEBYTEL (INOBEKTID INTEGER,
INTEL VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNERSEMPLOYEEEGNID (EGN VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPARTNERSNOTEID (PARTNERNOTE D_PARTNERSNOTE,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNERSSHORTNAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPARTNERSTORENAMESID (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPRICENAMESID (PRICENAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPRINTERNAMESID (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDPRODUCERNAMESID (PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDPROMBARCODE (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDRECHSDRART (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDREST_TABLESNO (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDROWINSALESCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDROWPERCPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
CUSTCOUNT INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDSALESARTIKUL (OBEKTID INTEGER,
ARTNOMER INTEGER,
INPRICELISTID NUMERIC(18, 0),
ACTIVEPRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
SALESPRICE DCURR,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
ARTIKUL1 D_ARTIKULNAME,
PRICELISTID NUMERIC(18, 0),
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFQTY DQTY,
TAX DCURR,
PERCTO NUMERIC(6, 4),
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BOXCKLADDYNAMIC CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
DEFFISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRBONUSPOINTFORSALES INTEGER,
GRPRICEBYBONUSPOINT INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
COOKINGTIME SMALLINT,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCI_DISCOUNTCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMOTIONSALESPRICEID INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
LOTTERY CHAR(1) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRPRICELISTID NUMERIC(18, 0),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
UNIQUECODE BIGINT,
VATA CHAR(1) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
CATEGORINOTE VARCHAR(100) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDSERIALNUMBERVALUESID (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDSPECHIFIKNAMESID (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
SAVESPECHIFIK CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MATERIALATTRIBUTE1 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE2 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE3 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE4 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE5 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE01NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE02NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE03NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE04NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSTOCKATTRIBUTE05NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSTOCKGROUPID (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
SAVEGROUPNAME CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDSYXRANENIENAMESID (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDTEKSMETKIMRROWNO (OBEKTID INTEGER,
MACA INTEGER,
MRROWNO INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTEMPREVGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTEMPREVROW (TEMPREVID DID,
OBEKTID INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTYPEARTIKULNAMESID (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDTYPEDOCTNAMESID (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDTYPEMEASUREID (OBEKTID INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (TYPEMEASUREID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDTYPEMEASURENAMEID (NAME VARCHAR(10) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTYPEPARTNERSNAMESID (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDTYPETRANSPORTID (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDUSERNAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDUSERPERMPOS (OBEKTID INTEGER,
SECURITYROLEID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDUSERPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FINDUSERPOSITIONSNAMESID (POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FINDVLOJENOSTSDRART (OBEKTID INTEGER,
VLOJENOSTCKLADID NUMERIC(18, 0),
VLOJENOSTARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEARTNOMERINCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEARTNOMERINRECH (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREEARTNOMERINSALESCKLAD (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEARTNOMERINZAG (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREEMACAINTEKSMETKI (OBEKTID INTEGER,
MINNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MACANOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREENOMERINGROUPID (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (GROUPNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREEORDERNOTENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ORDERNOTENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREEPARTNEREMPLOYEENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEPARTNERNOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNERNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEPARTNERSTORENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNERSTORENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE FREEPLUINVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
MINNOMER INTEGER)
RETURNS (PLU INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE FREEPRODUCERNOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PRODUCERNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETACTIONSTYPENAME (ACTIONID SMALLINT)
RETURNS (ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETACTIVEPRICELIST (OBEKTID INTEGER)
RETURNS (PRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETACTIVEPRICELISTSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETALLRECH (OBEKTID INTEGER)
RETURNS (RECHSDRID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
EXPIRATIONDATE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
AREAINFOID INTEGER,
STREETINFOID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETAREAINFOID (OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKUL1NAMESARTIKUL1 (ID INTEGER)
RETURNS (ARTIKUL1 D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULDOCTAVNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULFIELDS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DEFQTY DQTY,
DANGROUPID INTEGER,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTDELIVERYDATE TIMESTAMP,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
KINDTYPE INTEGER,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULFIELDSL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DEFQTY DQTY,
DANGROUPID INTEGER,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTDELIVERYDATE TIMESTAMP,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULMAINDOCTAV (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULNAL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (NAL DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULNAME (ARTIKULID INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULPARTNO (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULREVIZIA (OBEKTID INTEGER,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKULNAME D_ARTIKULNAME)
RETURNS (REVNO INTEGER,
DATEREV TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULSBYGROUP (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
SALENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTIKULSERIALNUMBERS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTINRECHINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (RECHSDRID INTEGER,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
OTNETKOL DQTY,
STORNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTINVLOJENOSTINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (VLOJENOSTSDRID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTINZAGINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (ZAGSDRID INTEGER,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
OTNETKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTNALBYDATE (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTDATE TIMESTAMP)
RETURNS (NALBYDATE DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTNALBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTNALBYPERIOD (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (FROMKOL DQTY,
FROMAVGPRICE DCURR,
SUMINKOL DQTY,
AVGINPRICE DCURR,
SUMOUTKOL DQTY,
AVGOUTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTPROMOTION (INOBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
FROMHOUR TIME,
TOHOUR TIME,
ID INTEGER,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMOTION INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTPROMOTIONBYQTY (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETARTSALESPRICES (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBARCODECODESCODE (ID INTEGER)
RETURNS (CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBLOCKARTIKULSINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
CANSALES CHAR(1) CHARACTER SET WIN1251,
CANDELIVERY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
RETURNS (BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER)
RETURNS (POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBONUSPOINTBYOBOR1 (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBONUSPOINTBYOBORID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBONUSPOINTBYOBORNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLAD (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
SHOWRECHSDR CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADDYNAMICSDR (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DANGROUPID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADDYNAMICSDR1 (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (DYNAMICSDR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
BOXCKLADARTNOMER INTEGER,
STORAGEID DID)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DKOL)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADDYNAMICSDRINFO1 (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
STORAGEID DID,
ALLROW CHAR(1) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BOXCKLADDYNAMICSDRID INTEGER,
DINSTOREID INTEGER,
QTY DKOL)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADSDR (OBEKTID INTEGER,
INARTNOMER INTEGER,
STORAGEID INTEGER)
RETURNS (BOXCKLADSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTNETKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
DOTCKLADID NUMERIC(18, 0),
DOTARTNOMER BIGINT,
DOTARTIKUL D_ARTIKULNAME,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251,
UCODECONTENT BIGINT,
UCODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBOXCKLADSDR2 (OBEKTID INTEGER,
INARTNOMER INTEGER,
STORAGEID INTEGER)
RETURNS (BOXCKLADSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTNETKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
DOTCKLADID NUMERIC(18, 0),
DOTARTNOMER BIGINT,
DOTARTIKUL D_ARTIKULNAME,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBYLSTATNAMESBYLSTAT (ID INTEGER)
RETURNS (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETBYPRODVLOJENOSTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (VLOJENOSTCKLAD VARCHAR(20) CHARACTER SET WIN1251,
VLOJENOSTARTNOMER INTEGER,
VLOJENOSTARTIKUL D_ARTIKULNAME,
VLOJENOSTKOL DQTY,
VLOJENOSTPARTNO VARCHAR(20) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
DEFKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADARTIKUL (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADBYPARTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CKLADBYPART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CKLADSTOCKGROUPID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADDOCPRODUCER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADEXPIRATIONDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (EXPIRATIONDATE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADID (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADIDBYTYPE (OBEKTID INTEGER,
TNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADKOL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (KOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADKOL1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (KOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADLASTDOCTPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADLASTREVDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (LASTREVDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (MINKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADMINQTYFROMSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (MINQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADNAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADNAMES (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ATTACHTOCKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADNAMESCKLADNAME (ID INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADOLDAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADOLDAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADOLDAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OPTQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSALESARTNOMER (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (SALESARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSALESPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSTOCKGROUPID (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSTOCKGROUPNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADSTOCKGROUPNOTE (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADTYPE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (TABLENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADTYPEMEASUREID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (TYPEMEASUREID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCURRENCYTYPESID (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETCURRENCYTYPESNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(15) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDAILYMENU (OBEKTID INTEGER,
NUM INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
NAL DQTY,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
MENUBLOCKED INTEGER,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANGROUP (ID INTEGER,
OBEKTID INTEGER)
RETURNS (DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANGROUPID (DANGROUP CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANGROUPTAX (OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (TAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANNIFIRMABYDEPNO (OBEKTID INTEGER,
DEPNO INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANNIFIRMAFAKTURANO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (FAKTURANO NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANNIFIRMAINVOICENO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (INVOICENO NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDANNIFIRMANAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDDSNONAMESDDSNO (ID INTEGER)
RETURNS (DDSNO VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFAULTPRICELISTID (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFAULTSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFCURRENCY (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFDANGROUP (INOBEKTID INTEGER)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFDANNIFIRMANAME (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFFISKALPRINTER (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFOBEKT RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFOBEKTID RETURNS (ID INTEGER,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFPARTNERNAMEFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFUSERMONEYIN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDEFWEIGHTSCALE RETURNS (DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETDISCOUNTBYHOURS (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID INTEGER,
PRICELISTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDISCOUNTBYHOURSPRICELISTID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (PRICELISTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDISCOUNTBYPACK (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESARTNOMER1 INTEGER,
SALESPRICE1 DCURR,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
SALESPRICE2 DCURR,
PRICELISTID2 NUMERIC(18, 0),
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDISCOUNTBYSALES (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDOCTDATEDOCT (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER)
RETURNS (DATEDOCT TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDOCTYPENAMESDOCTYPE (ID INTEGER)
RETURNS (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
DTACTIVEFROM TIMESTAMP)
RETURNS (DOCTPRICE DCURR,
ID INTEGER,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETDO_OBEKTID RETURNS (OBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETEARNESTDTSAVE (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (DTSAVE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETETIKETIFIELDS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
PLU INTEGER,
ARTIKUL1 D_ARTIKULNAME,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMFROMDATE TIMESTAMP,
PROMTODATE TIMESTAMP,
PROMFROMHOUR TIME,
PROMTOHOUR TIME,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
NAL DQTY,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
NET DQTY,
GROSS DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
ESLID VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFAKTURACONTENT (INOBEKTID INTEGER,
INTYPEDB SMALLINT,
FAKTURINOMER INTEGER)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
FROMDOCNOMER NUMERIC(18, 0),
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFAKTURIINFO (FNOMER NUMERIC(18, 0))
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEFAK DATE,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(50) CHARACTER SET WIN1251,
DATETIMESAVE TIMESTAMP,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
ACTIONID SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIFOPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIFOPRICECKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TEKSMETKIKOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIFOPRICERECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY,
TEKSMETKIKOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIRMAFISKALPRINTERS (OBEKTID INTEGER,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIRSTBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIRSTBARCODEBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFIRSTMACABYOPER (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MACA INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFISCALNUM (FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
DEFSALENUM INTEGER,
INCNUM CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEXTSALENUM INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETFISCALPRINTERID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFISKALPRINTERNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFISKALPRINTERNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFISKALPRINTERSFIRMA (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251)
RETURNS (FSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETFUTUREPRICE (OBEKTID INTEGER)
RETURNS (PRICELISTID DID,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DTSTART TIMESTAMP,
PRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPCODE (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PARENTGROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPIDDECODEGRYPA (OBEKTID INTEGER,
INGRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
DECODEGRYPA VARCHAR(255) CHARACTER SET WIN1251,
ORDERGRYPA VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPIDNAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPIDNOTE (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPIDROW (INOBEKTID INTEGER,
INGRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETGRYPAFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETHTTPORDERS (OBEKTID INTEGER,
STATUS SMALLINT)
RETURNS (HTTPORDERSID INTEGER,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
HTTPORDERSSDRID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
TYPEDB SMALLINT,
ORDERPAYMENT INTEGER,
ORDERPAYMENTSTR VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETHTTPORDERSORDERNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
RETURNS (ORDERNUMBER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETH_COUNTRYID (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETH_COUNTRYNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETH_COUNTRYNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETINFOMACA (OBEKTID INTEGER,
INMACANO INTEGER)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
TIMEOPEN TIME,
SUMSMETKA DCURR,
LASTOPEN TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETINOBEKTIID RETURNS (INOBEKTIID D_INOBEKTIID)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETITEMSINFOTM (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
PROMOTIONPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLASTARTIKULPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLASTARTIKULPARTNOISNOPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLASTOLDARTIKULNAME (OLDID INTEGER,
OLDOBEKTID INTEGER,
OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OLDARTIKULNAME D_ARTIKULNAME)
RETURNS (NEWID INTEGER,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGCKLADINQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMINQTY DQTY,
AVGINAVGPRICE DCURR,
AVGINLASTDOCTPRICE DCURR,
AVGINAVGPRICE1 DCURR,
AVGINLASTDOCTPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGCKLADOUTQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMOUTQTY DQTY,
AVGOUTAVGPRICE DCURR,
AVGOUTLASTDOCTPRICE DCURR,
AVGOUTAVGPRICE1 DCURR,
AVGOUTLASTDOCTPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGCKLADQTYARTADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMDOCTKOL DQTY,
SUMDOCTPRICE DCURR,
SUMSALESKOL DQTY,
SUMSALESPRICE DCURR,
SUMOUTKOL DQTY,
SUMOUTKOLPRICE DCURR,
SUMREVKOL DQTY,
SUMREVPRICE DCURR,
SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKAPRICE DCURR,
SUMIZKONSIGKOL DQTY,
SUMIZKONSIGPRICE DCURR,
SUMVLOJENOSTKOL DQTY,
SUMVLOJENOSTPRICE DCURR,
SUMBRAKKOL DQTY,
SUMBRAKPRICE DCURR,
SUMPFKOL DQTY,
SUMPFPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGCKLADQTYPRICEINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP)
RETURNS (AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DEFSALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGSENDTO_OFA (OBEKTID INTEGER,
STATUS SMALLINT)
RETURNS (ID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOGSYNCNO (OBEKTID INTEGER)
RETURNS (LOGSYNCNO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETLOTTERYSALESFORSEND (OBEKTID INTEGER,
TYPEDB SMALLINT)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMISTRALMZAIAVKI RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMISTRALMZAIAVKISDR (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINAUTOACCOUNTCOUNT (OBEKTID INTEGER,
USERID NUMERIC(18, 0))
RETURNS (INTCOUNT INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINDEFUSERS (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINNAL (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (NAL DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINNAME (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYINWAYOFPAY (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (WAYOFPAY INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMONEYOBOR (SMETKANO INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
INP CHAR(1) CHARACTER SET WIN1251)
RETURNS (MONEYOBOR DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETMSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251)
RETURNS (MSKEYS VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETNALBYLOG (OBEKTNAMEID INTEGER,
CKLADNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
DTDATE TIMESTAMP)
RETURNS (NAL DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETNOTESNOTENOTE (ID INTEGER)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTICKLADBYPART (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTIID (NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTILOGCKLADQTY (OBEKTID INTEGER)
RETURNS (LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTINAME (ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTINAMESOBEKT (ID INTEGER)
RETURNS (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTIOPENRECH (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOBEKTIPATHDB (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (PATHDB VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETOBEKTITYPEDB (OBEKTID INTEGER)
RETURNS (TYPEDB CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOLDNONEWNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDNO INTEGER)
RETURNS (NEWNO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOPENEARNESTBYVALUE RETURNS (ID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(256) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
SALEMATERIALCODE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOPENMISTRALMSESSIONNO (OBEKTID INTEGER)
RETURNS (SESSIONNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETORDERNOTEBYRECH (OBEKTID INTEGER,
UCODE BIGINT)
RETURNS (ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETORDERNOTEINFO (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
UCODE BIGINT)
RETURNS (ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETORDERNOTENOMER (OBEKTID INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETORDERNOTENOTESNOTE (ID INTEGER)
RETURNS (NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SALESARTNOMER INTEGER,
UCODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (ID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUPNAMESID INTEGER,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETORDERSSUMPAY (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (SUMPAY DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETOUTPRODDATE (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (OUTPRODDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARENTGROUPNOMER (OBEKTID INTEGER,
GROUPNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNEREMPLOYEENAMESPE (ID INTEGER)
RETURNS (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERNAMEFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERNAMESPARTNERNAME (ID INTEGER)
RETURNS (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSARTNOMERARTNOMER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
PARTNERARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSARTNOMERPARTNERARTNO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNERARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSEMPLOYEEEGNEGN (ID INTEGER)
RETURNS (EGN VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSEMPLOYEENAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSLASTSALESINFO (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSNAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSNOTEPARTNERNOTE (ID INTEGER)
RETURNS (PARTNERNOTE D_PARTNERSNOTE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSSETINGS (INID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
SUMSALES DCURR,
SUMDELIVERY DCURR,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSSETINGSID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSSETTINGSB_S (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSSHORTNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSSTORENAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNERSTORENAMESPS (ID INTEGER)
RETURNS (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPARTNOBYFIFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
CHECKQTY CHAR(1) CHARACTER SET WIN1251)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
OUTQTY DQTY,
PARTNALQTY DQTY,
GODNODO DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPAYRAZCRSMETKASUMA (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKAACTIONID SMALLINT)
RETURNS (SUMPAYRAZCR DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPERCPRICELISTPERC (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
CUSTCOUNT INTEGER)
RETURNS (FROMPRICELISTID NUMERIC(18, 0),
PERC NUMERIC(6, 2),
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPORTEXTTERMINAL RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPOSACTIVESALESPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPOSSTATEPOSID (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (POSID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTCKLADID (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (DIGG INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTLOADFROMPRICELIST (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (LOADNULLFROMPRICELISTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTNAME (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (POSACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTPRICE (OBEKTID INTEGER,
INPRICELISTID NUMERIC(18, 0),
SALEARTNOMER INTEGER,
IFNULLLOADDEFPRICE CHAR(1) CHARACTER SET WIN1251,
GETPROMPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
ACTIVEPRICELISTID NUMERIC(18, 0))
RETURNS (SALESPRICE FLOAT,
PRICELISTID NUMERIC(18, 0),
PERCTO NUMERIC(6, 4),
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMOTIONSALESPRICEID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICELISTTYPE (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICENAME (ID INTEGER)
RETURNS (PRICENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRICINGPOLICYACTPRICELISTID (OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (PRICELISTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRIKDELIVERYOPER (OBEKTID INTEGER,
DELIVERYNO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRIKOUTSTOKIOPER (OBEKTID INTEGER,
OUTSTOKINO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRIKSMETKAOPER (OBEKTID INTEGER,
SMETKANO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRINTERID (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (PRINTERID NUMERIC(18, 2))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRINTERNAME (OBEKTID INTEGER,
PRINTERID NUMERIC(18, 0))
RETURNS (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRINTERNAMESPRINTERNAME (ID INTEGER)
RETURNS (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRINTERSROW (INID NUMERIC(18, 0),
INOBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODREQUESTQTY (OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODUCER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODUCERDVCKNOMER (OBEKTID INTEGER,
ID INTEGER)
RETURNS (DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODUCERID (OBEKTID INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (PRODUCERID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODUCERNAME (OBEKTID INTEGER,
PRODUCERID NUMERIC(18, 0))
RETURNS (PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPRODUCERNAMESPRODUCER (ID INTEGER)
RETURNS (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPROGRAMSETTINGS (TYPEPROGRAM SMALLINT,
SETTINGSALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSNO INTEGER)
RETURNS (PROGRAMSETTINGS BLOB CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMSALESPRICE DCURR)
RETURNS (SALESPRICE DCURR,
PROMOTIONSALESPRICEID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRAZCRBYSMETKANO (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
INTYPEDB SMALLINT)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMA DCURR,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRAZCRNOTEINFO (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT)
RETURNS (RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRAZCRSUMA (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT)
RETURNS (RAZCRSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRAZFASOVKICKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRAZFASOVKISDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT,
OTKOL DPERC,
OTPRICE DPERC)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECH (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
OTARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
UNIQUECODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECHBYCODE (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
MATSALECODE INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
OTARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECHCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECHEXPIRATIONDATE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (EXPIRATIONDATE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECHNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRECHSDR (OBEKTID INTEGER,
INPARTNOMER INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0) =2)
RETURNS (RECHSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTNETKOL DQTY,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
UCODECONTENT BIGINT,
UCODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETRESERVEDPARTNERS (OBEKTID INTEGER)
RETURNS (PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETREST_TABLESID (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETREVDOCTPRICE (TYPEPRICE SMALLINT,
OBEKTID INTEGER,
ARTNOMER INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ISARTVLOJENOST CHAR(1) CHARACTER SET WIN1251)
RETURNS (DOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETROWPARTNERS (INP_OBEKTID INTEGER,
INP_NOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLAD (OBEKTID INTEGER)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
MINQTY DQTY,
NAL DQTY,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SCI_DISCOUNTCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
MAXTO DCURR,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRINTER1ID NUMERIC(18, 0),
PRINTELETIKETI CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLAD1 (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
MINQTY DQTY,
NAL DQTY,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MAXTO NUMERIC(6, 2),
UNIQUECODE BIGINT,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTBYDAILYMENU (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NUM INTEGER,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251,
TAGVALID INTEGER = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
SALEQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME,
KINDTYPE INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
CATEGORY VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOBYGRYPAONLY (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251,
TAGVALID INTEGER =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
SALEQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME,
KINDTYPE INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOMER (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOMERBYGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOMERBYGRYPA1 (OBEKTID INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
WORKQTY DQTY,
TEMPQTY DQTY,
ARTIKUL1 D_ARTIKULNAME,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
KINDTYPE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOMERBYGRYPA2 (OBEKTID INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
DTDAY DATE,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME,
COLOR INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADARTNOMERBYGRYPA3 (OBEKTID INTEGER,
DTDAY DATE,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME,
COLOR INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADBYPROMOTION (OBEKTID INTEGER,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NAL DQTY,
LASTDOCTPRICE DCURR,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
FROMDATE1 DATE,
TODATE1 DATE,
FROMHOUR1 TIME,
TOHOUR1 TIME,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMOTION INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADBYSPECHIFIK (OBEKTID INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
STOREID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADLOCKBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADLOCKBYMISTRALM1 (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (MISTRALTCOLOR INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADROW (INOBEKTID INTEGER,
INARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADSERIALNUMBER (OBEKTID INTEGER)
RETURNS (SALESCKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADSPECHIFIK1 (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADSTOCKGROUP (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSALESCKLADTYPEMEASURECONV (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OLDTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NEWTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPDATA BLOB,
REPOPTIONS BLOB)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSAVEDREPORTSREPDATA (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPDATA BLOB)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSAVEDREPORTSREPOPTIONS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPOPTIONS BLOB)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSENDSALESEMAIL RETURNS (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSERIALNUMBERSALESARTNOMER (OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSERIALNUMBERVALUESSERNO (ID INTEGER)
RETURNS (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSERNOMAXDTOTCHET (SERNO VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (DTOTCHET TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETINGSCALCNAL RETURNS (CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSACTIVEPRICELISTID RETURNS (ACTIVEPRICELISTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSALIASID (ALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEPROGRAM SMALLINT)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSDBINFO RETURNS (DBINFO VARCHAR(31) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSFIRMA RETURNS (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSGROUPSMETKI RETURNS (ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSLOGSAVEDATA RETURNS (LOGSAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETSETTINGSSAVEDATA RETURNS (SAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETSETTINGSSAVEPOR RETURNS (SAVEPOR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSETTINGSUPDATEARTIKULNAMES RETURNS (UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSLAVEOBEKTID (LOGOBEKTID CHAR(1) CHARACTER SET WIN1251,
OFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INOBEKTID INTEGER)
RETURNS (OBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSMETKAFORDESPARK (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (PRDATE TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSMETKASENDEMAIL (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER)
RETURNS (PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSMETKIBYDAYID (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER)
RETURNS (ID INTEGER,
KOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSMETKIPRDATE (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (PRDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSPECHIFIKNAMESSPECHIFIK (ID INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE (OBEKTID INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE01NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE01_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE01_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE02NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE02_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE02_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE03NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE03_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE03_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE04NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE04_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE04_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE05NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE05_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTE05_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTEID (OBEKTID INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTENAMES (STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER)
RETURNS (STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTENAMESID (STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKATTRIBUTEQTY (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKBYATTRIBUTEID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSTOCKGROUPNAME (ID INTEGER)
RETURNS (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMBACKSTOKA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKALV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMBRAKKOL DQTY,
SUMBRAKLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMBRAKBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMBRAK DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMDOCTKOL DQTY,
SUMDOCTLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMDOCTBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMDOCT DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER)
RETURNS (SUMA DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMOUTKOL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMOUTKOL DQTY,
SUMOUTLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMOUTPRODBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMOUTPROD DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMPERSONALFOODBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMPERSONALFOOD DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMRAZXODIBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMRAZXODI DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMREVBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMREV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMREVKOL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMREVKOL DQTY,
SUMREVLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMSALES (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMSALESKOL DQTY,
SUMSALESLV DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSUMSALESBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMSALES DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSYNCLOCKLASTACTIONNO (OBEKTID INTEGER)
RETURNS (LASTACTIONNO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSYXRANENIE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSYXRANENIEID (OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSYXRANENIENAME (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETSYXRANENIENAMESSYXRANENIE (ID INTEGER)
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTABLENO_STAGENO (NOTE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TABLENO INTEGER,
STAGENO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTAXGROUPREPORTSMAXDATE (OBEKTID INTEGER)
RETURNS (MAXDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEKSMETKILASTEDITDATE (OBEKTID INTEGER,
SMETNOMER INTEGER)
RETURNS (LASTEDITDATE DOUBLE PRECISION)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPFAKTURINOMER (OBEKTID INTEGER)
RETURNS (FAKTURINOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPREVDTOPEN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (DTOPEN TIMESTAMP,
CKLADID NUMERIC(18, 0),
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPREVGRYPA (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPREVINFO (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPREVOPENCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPREVREVBYSTOCKGROUP (OBEKTID INTEGER)
RETURNS (REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTEMPVLOJENOSTSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TEMPVLOJENOSTNOMER INTEGER)
RETURNS (FROMCKLADID NUMERIC(18, 0),
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER BIGINT,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMAVGPRICE DCURR,
FROMLASTDOCTPRICE DCURR,
FROMQTY DQTY,
TEMPQTY DQTY,
VLOJENOSTSDRID INTEGER,
TEMPVLOJENOSTSDRID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (NEWPARTNERSEMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER)
RETURNS (NEWPARTNERNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEAREAID (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEARTIKULID (OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEARTIKULNAME (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEARTIKULNAMESTYPEARTIKUL (ID INTEGER)
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEDOCTNAMESTYPEDOCT (ID INTEGER)
RETURNS (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEDOCUMENTSID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEDOCUMENTSNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASURE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASURECONVQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER)
RETURNS (QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASURECOUNTABLE (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (COUNTABLE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASUREDEFQTY (OBEKTID INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (DEFQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASUREID (OBEKTID INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEMEASURENAME (ID INTEGER)
RETURNS (NAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPENOMINAL (OBEKTID INTEGER,
CURRENCYTYPESID INTEGER)
RETURNS (ID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEPARTNERID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEPARTNERNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEPARTNERS (ID INTEGER,
OBEKTID INTEGER)
RETURNS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPEPARTNERSNAMES_TP (ID INTEGER)
RETURNS (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPETRANSPORTID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPETRANSPORTNAME (TYPETRANSPORTID INTEGER)
RETURNS (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETTYPETRANSPORTNAME1 (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERBYPASS (OBEKTID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
CARD CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERBYREST_TABLESUSERNAME (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERPOSITIONNAMESPOSITION (ID INTEGER)
RETURNS (POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERSID (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERSNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETUSERTABLES (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TABLENO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVERDBMULTICKLAD RETURNS (MULTICKLAD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE GETVERDBSTOCKBYATTRIBUTE RETURNS (STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVERDBTYPEDB RETURNS (TYPEDB CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNAATTACHINFO (OBEKTID INTEGER,
VEZNANAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ATTACHVEZNANAME VARCHAR(20) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESCODEPAGE (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESEXTENDEDINFO (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESLOGNO (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (LOGNO SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESMAXPLU (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (MAXPLU INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNINAMESTYPEVEZNA (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (TYPEVEZNA INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVEZNIROW (INPOBEKTID INTEGER,
INPVEZNANO NUMERIC(18, 0),
INPSALESARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVLOJENOSTART (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INARTNOMER INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRODUCTIONCOST DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVLOJENOSTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRODUCTIONCOST DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETVLOJENOSTNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETWAYOFPAY (WAYOFPAY INTEGER)
RETURNS (WAYOFPAYNAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETWAYOFPAYFROMSMETKI (SMETKIWAYOFPAY VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETZAG (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
LASTDOCTPRICE DCURR,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETZAGBYCODE (OBEKTID INTEGER,
MATCODE INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
LASTDOCTPRICE DCURR,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETZAGNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETZAGSDR (OBEKTID INTEGER,
INPARTNOMER INTEGER)
RETURNS (ZAGSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
PORTION DQTY,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTNETKOL DQTY,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
UCODECONTENT BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GETZAIAVKIDATE (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER)
RETURNS (DATEZAIAVKA TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GET_H_ADRESSCARDCOUNT RETURNS (ADRESSCARDCOUNT INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GIVEKLIENT (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GIVEMACA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MINMACA INTEGER,
KLIENT INTEGER,
NEWNUM INTEGER)
RETURNS (MACA INTEGER,
SMETNOMER INTEGER,
NEWSMETKA CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE GROUPTEKSMETKA (OBEKTID INTEGER,
FROMROWID NUMERIC(18, 0),
TOROWID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE HASACTIVEPROMOTION RETURNS (CHRACTIVEPROMOTION CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASCKLADBYPART RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASCKLADMINQTY RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASNEWACTIVEPROMCHECK (DTNEWACTIVEPROMCHECK TIMESTAMP,
OLDCOUNTPROM INTEGER)
RETURNS (CHRACTIVEPROM CHAR(1) CHARACTER SET WIN1251,
DTCHECK TIMESTAMP,
COUNTPROM INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASPRINTELETIKET (OBEKTID INTEGER)
RETURNS (PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASSALESBLOCKARTIKULS RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HASZAGINZAGSDR (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE HTTPORDERSCOME RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INAVGINCOMEOUTGO (OBEKTID INTEGER,
ARTNOMERS BLOB CHARACTER SET WIN1251,
ARTIKULS BLOB CHARACTER SET WIN1251,
DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
RETURNS (SUMSALES DQTY,
SUMDOCT DQTY,
SUMZAIAVKI DQTY,
SUMBRAK DQTY,
SUMOUTSTOKI DQTY,
SUMASALES DCURR,
SUMADOCT DCURR,
SUMAOUTSTOKI DCURR,
SUMAZAIAVKI DCURR,
SUMABRAK DCURR,
AVGOUTGO DQTY,
AVGSALES DQTY,
AVGBRAK DQTY,
AVGOUTSTOKI DQTY,
AVGDOCT DQTY,
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INITPARAMSBYHOURS (CHRINITALL CHAR(1) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
RETURNS (O_P0_1 NUMERIC(10, 4),
O_P1_2 NUMERIC(10, 4),
O_P2_3 NUMERIC(10, 4),
O_P3_4 NUMERIC(10, 4),
O_P4_5 NUMERIC(10, 4),
O_P5_6 NUMERIC(10, 4),
O_P6_7 NUMERIC(10, 4),
O_P7_8 NUMERIC(10, 4),
O_P8_9 NUMERIC(10, 4),
O_P9_10 NUMERIC(10, 4),
O_P10_11 NUMERIC(10, 4),
O_P11_12 NUMERIC(10, 4),
O_P12_13 NUMERIC(10, 4),
O_P13_14 NUMERIC(10, 4),
O_P14_15 NUMERIC(10, 4),
O_P15_16 NUMERIC(10, 4),
O_P16_17 NUMERIC(10, 4),
O_P17_18 NUMERIC(10, 4),
O_P18_19 NUMERIC(10, 4),
O_P19_20 NUMERIC(10, 4),
O_P20_21 NUMERIC(10, 4),
O_P21_22 NUMERIC(10, 4),
O_P22_23 NUMERIC(10, 4),
O_P23_24 NUMERIC(10, 4))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INOUTDOCTBYPART (OBEKTID INTEGER,
NEWKOL DQTY,
OLDKOL DQTY,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
EDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSCAKERESERVATIONS (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTSAVE TIMESTAMP,
QTY DQTY,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DESPARKID VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSCASHIMPORTEXPORT (LOCATIONID INTEGER,
POSNAME VARCHAR(30) CHARACTER SET WIN1251,
DATESAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DEVICENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(20) CHARACTER SET WIN1251,
AMOUNT DCURR,
NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NUM INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSDISCOORDERS (OBEKTID INTEGER,
ORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
ORDERDATE DATE,
FORDELIVERYDATE DATE,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
DISCOTYPE SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
NOTE VARCHAR(256) CHARACTER SET WIN1251,
SALEMATERIALCODE INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTARTINBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTBRAKSDR (OBEKTID INTEGER,
BRAKNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTCKLADNAME (ID INTEGER,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTDOCTBYPART (OBEKTID INTEGER,
DTDOCT TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTDOCTSDR (OBEKTID INTEGER,
DOCTNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTFAKTURISDR (OBEKTID INTEGER,
FAKTURAID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
SUMA DCURR,
TYPEDB SMALLINT,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIKNAMESID INTEGER,
GODNODO DATE,
DOCTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINEXPORTHISTORY (OBEKTID INTEGER,
LOGID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINLOGCHANGES (OBEKTID INTEGER,
CHANGES VARCHAR(30000) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINLOGCHANGES1 (ID INTEGER,
OBEKTID INTEGER,
CHANGES VARCHAR(30000) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOAREAINFO (INID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOARTIKUL1NAMES (ARTIKUL1 D_ARTIKULNAME)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOARTIKULNAMES (ARTIKUL D_ARTIKULNAME)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOARTIKULSPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBACKSTOKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBACKSTOKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(50) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBARCODECODES (CODE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEWID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOBOXCKLAD (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0))
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOBRAK (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOBYLSTATNAMES (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOBYPROD (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
OBEKTID INTEGER,
TYPEDB INTEGER,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
OLDAVGPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
OLDAVGPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
OLDAVGPRICEWOTAX DCURR,
CKLADSTOCKGROUPID INTEGER,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
LASTDOCTPRICE DCURR,
SUMDOCTKOL DQTY,
LASTDOCTKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOCKLADNAMES (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOCURRENCYTYPES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTODANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODANNIFIRMANAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTODDSNONAMES (DDSNO VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTODEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAMEID INTEGER,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAMESID INTEGER,
PARTNERNAMESID INTEGER,
PARTNERSTORENAMESID INTEGER,
PARTNEREMPLOYEENAMESID INTEGER,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
FROMOBEKTNAMEID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPEID INTEGER,
DOC2DATE DATE,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPEID INTEGER,
DOC2DATE DATE,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODOCT (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODOCTYPENAMES (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTODOGDOCTPRICES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
RETURNS (OUTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
OBEKTINAMESID INTEGER,
DTSAVE TIMESTAMP,
USERNAMESID INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PAYSUMA DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOEARNESTSDR (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
ARTNOMER INTEGER,
ARTIKULNAMESID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
PAYPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOEDITDOCT (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
EDITBYUSERID INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAMEID INTEGER,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPERID INTEGER,
PARTNERNAMEID INTEGER,
PARTNEREMPLOYEEID INTEGER,
PARTNERSTOREID INTEGER,
PARTNERSSHORTNAMEID INTEGER,
TYPEDOCTID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAMEID INTEGER,
MONEYINNAMEID INTEGER,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAMESID INTEGER,
BYLSTATNAMESID INTEGER,
DDSNONAMESID INTEGER)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOEDITDOCTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDOCTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKULID INTEGER,
SYXRANENIEID INTEGER,
PRODUCERID INTEGER,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPAID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER,
PERCTO NUMERIC(6, 2),
SPECHIFIKNAMESID INTEGER,
ARTIKUL1ID INTEGER,
BARCODEID INTEGER,
ZAIAVKIQTY DQTY,
NOTESNOTEID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOEDITSMETKI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
OBEKTNAMEID INTEGER,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP,
OPERID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAMEID INTEGER,
PARTNEREMPLOYEEID INTEGER,
PARTNERSTOREID INTEGER,
PARTNERSSHORTNAMEID INTEGER,
PARTNERSEMPLOYEEEGNID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
KACAOPERID INTEGER,
EDITBYUSERID INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOEDITSMETKISDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITSMETKIID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
KOL DQTY,
TYPEMEASURENAMEID INTEGER,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
GRYPAID INTEGER,
LASTDOCTPRICE DCURR,
PRICELISTNAMEID INTEGER,
FISKALPRINTERNAMESID INTEGER,
STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER,
CKLADNAMESID INTEGER,
SPECHIFIKNAMESID INTEGER,
ARTIKUL1ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOFISCALDATA (LOCATIONNAMEID INTEGER,
SALENUM INTEGER,
FISCALDATE TIMESTAMP,
FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
FISCALMEMORY VARCHAR(10) CHARACTER SET WIN1251,
FISCALNUM VARCHAR(12) CHARACTER SET WIN1251,
FISCALAMOUNT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOFISKALPRINTERNAMES (NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOFSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251,
FSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOGROUPID (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOH_COUNTRY (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOH_COUNTRYNAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOINFOBYSERIALNUMBER (OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBERVALUESID INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOLOGBLOBDATA (OBEKTID INTEGER,
LOGCHANGESID INTEGER,
BLOBDATA BLOB)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOLOGBONUSPOINT (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
ACTIONSTYPEID SMALLINT,
USERNAMESID INTEGER,
SMETKANO INTEGER,
BONUSPOINTDELTA INTEGER,
OLDBONUSPOINT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
NAL DCURR,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYINNAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYOPER (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMONEYTRANSFER (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMPA (FKEY INTEGER,
KEYID VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOMSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251,
MSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTONOTESNOTE (NOTE VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOOBEKTI (NAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER,
PATHDB VARCHAR(255) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOOBEKTINAMES (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOOBEKTIOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOOPENMISTRALM (OBEKTID INTEGER,
SESSIONNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERNOTEBYRECH (OBEKTID INTEGER,
UCODE BIGINT,
ORDERNOTENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERNOTENOTES (NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAMESID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUPNAMESID INTEGER,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOOUTPROD (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNEREMPLOYEENAMES (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERNAMES (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERS (OBEKTID INTEGER,
NOMER NUMERIC(18, 0),
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOPARTNERSEMPLOYEE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERSEMPLOYEEEGN (EGN VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
SUMSALES DCURR,
SUMDELIVERY DCURR,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERSSHORTNAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOPARTNERSSTORE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPARTNERSTORENAMES (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPERSONALFOOD (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFNOMER INTEGER,
PFDATE DATE,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SCTIME TIME,
EXECDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPOR (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAMESID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAMESID INTEGER,
USERNAMESID INTEGER,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ACTIONID SMALLINT,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPORSDR (ID INTEGER,
OBEKTID INTEGER,
PORID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
ORDERNOTENOTESID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKULID1 INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPOSSTATE (PROGRAMID INTEGER,
POSID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPRICENAMES (PRICENAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPRINTERNAMES (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOPRODUCERNAMES (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPRODUCERS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (OUTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
FORDATE TIMESTAMP,
DOCTNOMER INTEGER,
OUTPRODNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPRODUCTIONREQUESTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
PRODUCTIONQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTORATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTORECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
SALEARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTORECHSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
RETURNS (OUTRECHSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTORESERVEDARTIKULS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DCURR,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOREST_TABLES (OBEKTID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOREVIZIA (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
REVNO INTEGER,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSERIALNUMBERVALUES (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOSETINGS (MAKESALDOSKLAD CHAR(1) CHARACTER SET WIN1251,
BEGININTERVAL TIMESTAMP,
ENDINTERVAL TIMESTAMP,
ACTIVEPRICELIST NUMERIC(18, 0),
PRINTSMETKACOUNT INTEGER,
DTINITSMETKACOUNT TIMESTAMP,
LOGCKLAD CHAR(1) CHARACTER SET WIN1251,
ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251,
UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251,
DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251,
DBINFO VARCHAR(31) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSETTINGSALIAS (TYPEPROGRAM SMALLINT,
ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSMETKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DATEOPEN DATE,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSMETKIBYDAY (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSPECHIFIKNAMES (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOSPENTTIME (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE01NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE02NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE03NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE04NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKATTRIBUTE05NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOCKGROUPNAMES (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTOREDMESSAGES (OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSTREETINFO (INID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOSYNCLOCK (OBEKTID INTEGER,
LASTACTIONNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOSYXRANENIENAMES (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOS_MACHINE (OBEKTID INTEGER,
S_TYPEMACHINEID INTEGER,
SERNOMER VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOS_TYPECONTRACTS (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEFPRICE DCURR,
DEFPERIOD SMALLINT)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOS_TYPEMACHINE (OBEKTID INTEGER,
PRODUCERID NUMERIC(18, 0),
MODEL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTAG (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
TAGVALUEID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAGID INTEGER =null)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTAGVALUE (INP_ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTEKORDERSBYTELSDR (OBEKTID INTEGER,
TEKORDERSBYTELNOMER INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
PRIK CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSERID INTEGER,
MONEYINNAMEID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERSID INTEGER,
FROMPRODUCTIONREQUESTNOMER INTEGER,
REPORTINGDATE DATE,
DOCTDATE TIMESTAMP,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPDELIVERYSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRYID INTEGER,
SYXRANENIEID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSERID INTEGER,
MONEYINNAMEID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKTID INTEGER,
FROMPRODUCTIONREQUESTNOMER INTEGER,
REPORTINGDATE DATE,
OUTPRODDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPOUTPRODSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
SYXRANENIEID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
USERSID INTEGER,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTEMPZAIAVKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
NEWPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTYPEADDRESS (INID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEAREA (INID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEARTIKULNAMES (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTYPEDOCTNAMES (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEWID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEMEASURE (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEMEASURECONV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOTYPEMEASURENAME (NAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEPARTNERS (OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPEPARTNERSNAMES (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPETRANSPORT (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOTYPETRANSPORTNAMES (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOUSERNAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOUSERPOSITIONNAMES (POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOUSERSBYREST_TABLES (OBEKTID INTEGER,
USERSID INTEGER,
REST_TABLESID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOVERDBDETAIL (OBJECTTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(100) CHARACTER SET WIN1251,
VERNO INTEGER,
FROMDATE DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOVEZNI (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
PORTION DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTINTOZAGSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INZAGSDRID INTEGER,
OTNETKOL DQTY)
RETURNS (OUTZAGSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTINTOZAIAVKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUT_ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTLOGCKLAD (DATELOG TIMESTAMP,
OPERTYPE VARCHAR(10) CHARACTER SET WIN1251,
OLDOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OLDARTNOMER INTEGER,
OLDARTIKUL D_ARTIKULNAME,
OLDKOL DQTY,
OLDTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDAVGPRICE DCURR,
OLDLASTDOCTPRICE DCURR,
OLDMINKOL DQTY,
OLDCANSALES CHAR(1) CHARACTER SET WIN1251,
OLDSALESARTNOMER INTEGER,
NEWOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWARTNOMER INTEGER,
NEWARTIKUL D_ARTIKULNAME,
NEWKOL DQTY,
NEWTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
NEWAVGPRICE DCURR,
NEWLASTDOCTPRICE DCURR,
NEWMINKOL DQTY,
NEWCANSALES CHAR(1) CHARACTER SET WIN1251,
NEWSALESARTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ACTIONSTYPEID SMALLINT,
OLDCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
NEWCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER,
OLDAVGPRICE1 DCURR,
NEWAVGPRICE1 DCURR,
OLDLASTDOCTPRICE1 DCURR,
NEWLASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTOTCHETFP (OBEKTID INTEGER,
DTOTCHET TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
SERNO VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTOUTPRODSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPAYRAZCR (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
ACTIONID SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPERMPOS (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPERMSKLAD (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPERSONALFOODSDR (OBEKTID INTEGER,
PFNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPRICELISTNAMES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTPRINTER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
RETURNS (OUTID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTREVALUATION (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TSDATETIME TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDSALESPRICE DCURR,
NEWSALESPRICE DCURR,
NAL DQTY,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTREVIZIASDR (OBEKTID INTEGER,
REVNO INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTSMETKISDR (OBEKTID INTEGER,
NOMER INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
BESTBEFORE TIMESTAMP = null)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTSTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTSYSLOG (DTLOG TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
LOGTYPE SMALLINT,
"LOG" VARCHAR(255) CHARACTER SET WIN1251,
MAJVER SMALLINT,
MINVER SMALLINT,
DBVER SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTSYXRANENIE (ID INTEGER,
OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTTYPEARTIKUL (ID INTEGER,
OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSERTUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTVERDB (VERDB INTEGER,
KOLDIG INTEGER,
CURRDIG INTEGER,
CURRMASK VARCHAR(10) CHARACTER SET WIN1251,
KOLMASK VARCHAR(10) CHARACTER SET WIN1251,
CALCNAD CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
ALLOWOTRKOL CHAR(1) CHARACTER SET WIN1251,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
DBSTATUS CHAR(1) CHARACTER SET WIN1251,
FIKPRICE CHAR(1) CHARACTER SET WIN1251,
FIFO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
MAJORVER INTEGER,
MINORVER INTEGER,
STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTVEZNINAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTWORKREPORT (ID INTEGER,
LOCATIONID INTEGER,
USERID INTEGER,
APPTYPE SMALLINT,
DATESAVED TIMESTAMP,
POS VARCHAR(10) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPORTDATA BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUT_ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSERTZAIAVKISDR (OBEKTID INTEGER,
ZAIAVKANOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NALKOL DQTY,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSHTTPORDERS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
STATUS SMALLINT)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSHTTPORDERSSDR (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
HTTPORDERSID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSLOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSLOGSENDSALESEMAIL (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSLOGSENDTO_OFA (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULID INTEGER,
QTY DCURR,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAMESID INTEGER,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSLOTTERYSALES (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSOLDARTIKULNAMES (OLDOBEKTID INTEGER,
OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OLDARTIKULNAME D_ARTIKULNAME,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSPARTNERSNOTE (PARTNERNOTE D_PARTNERSNOTE)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSSECURITYROLE (ID INTEGER,
OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP)
RETURNS (OUTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTAXGROUPREPORTS (ID INTEGER,
OBEKTID INTEGER,
DTREPORT TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERSID NUMERIC(18, 0),
TAKEBYUSERSID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSTEMPBACKSTOKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSTEMPFAKTURINOMER (OBEKTID INTEGER,
FAKTURINOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
NEWPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE INSTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE INSWEIGHTSCALES (OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCALETYPE SMALLINT,
PORTNO SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISARTIKULDELIVERYBLOCK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ISBLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISARTIKULEXISTS (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (ISEXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISARTIKULLASTDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISARTIKULSALESBLOCK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ISBLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISARTIKULSERIALNUMBEREXISTS (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (CHREXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISARTINPROMOTION (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
FROMHOUR TIME,
TOHOUR TIME,
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
TSNOW TIMESTAMP)
RETURNS (ARTINPROMOTION CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISARTVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CHRVALUE CHAR(1) CHARACTER SET WIN1251,
CHRCKLADBYPART CHAR(1) CHARACTER SET WIN1251,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISBARCODEEXISTS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISBLOCKARTIKUL (DTFROM TIMESTAMP,
DTTO TIMESTAMP)
RETURNS (BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISGROUPHASCHILD (OBEKTID INTEGER,
GROUPPATH VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (HASCHILD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISMONEYINNAMEEXISTS (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISOPERHASTEKSMETKI (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISPARTNERHASDOGDOCTPRICES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISPRIMARYGROUP (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISPROGRAMSETTINGSEXISTS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER)
RETURNS (CHRVALUE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTE01USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTE02USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTE03USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTE04USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTE05USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISSTOCKATTRIBUTEEXISTS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ISEXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISS_TYPEMACHINEUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (USE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISTYPEMEASUREUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISTYPEPARTNERUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISVEZNASUNC (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0))
RETURNS (CHRISSUNC CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ISZAGUSEINZAGSDR (OBEKTID INTEGER,
ARTNOMER BIGINT)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE IS_PRODUCERSUSE (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADBARCODE (OBEKTID INTEGER,
INCKLADID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADBARCODEBYATTRIBUTE (OBEKTID INTEGER,
INCKLADID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADBONUSPOINTBYART (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
FIRSTBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADBRAKFORCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADCKLADWEIGHTSCALE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADDEFDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (DEFSUMDEBITNOSALDO DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADDOGDOCTPRICE (OBEKTID INTEGER,
INPCKLADID NUMERIC(18, 0),
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ID INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PERCTO NUMERIC(6, 2),
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
PAYSUMA DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADEDITDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
MONEYINNAMEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
TIMEDOCT TIME,
GODNODO DATE,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
PERCTO NUMERIC(6, 2),
ARTIKUL D_ARTIKULNAME,
DOCNO NUMERIC(18, 0),
DOCDATE TIMESTAMP,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADEDITOUTSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
MONEYINNAMEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DOCNO NUMERIC(18, 0),
DOCDATE TIMESTAMP,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOOUT NUMERIC(18, 0),
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADPERCPRICELIST (OBEKTID INTEGER,
PRICELISTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR,
PROFIT DCURR,
NAD DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADPERCPRICELISTBYGROUP (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BARCODE CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR,
PROFIT DCURR,
NAD DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADSALESPRICE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0),
TAGS VARCHAR(255) CHARACTER SET WIN1251 = null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICE DCURR,
PROFIT DCURR,
NAD DCURR,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADSALESPRICEBYGROUP (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0),
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICE DCURR,
PROFIT DCURR,
NAD DCURR,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADVEZNIART (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
PRICELISTID NUMERIC(18, 0),
LOADALL CHAR(1) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER,
BARCODE CHAR(40) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
PRICE DCURR,
EXPIRATIONDATE INTEGER,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOADZAIAVKI (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TYPE SMALLINT,
UNDERKOL DQTY,
DTPROMOTION TIMESTAMP)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
LASTDOCTPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DANGROUPTAX DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DELIVERYBLOCK CHAR(1) CHARACTER SET WIN1251,
SALESCKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTSALESDATE TIMESTAMP,
PACKAGEQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOCKALLBYMISTRALM (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKARTBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKDB (LOCK CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKGROUPBYMISTRALM (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKONLYINSTOCKBYMISTRALM (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKRANGEBYMISTRALM (OBEKTID INTEGER,
FROMARTNOMER INTEGER,
TOARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOCKSP AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGADDOPENRECHSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
RECHSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ATTACHTOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCANCELEARNEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTCANCEL TIMESTAMP,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
EARNESTSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCLEARATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCLEARSMETKADEBITNOSALDO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
DTDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCLOSEEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCLOSEOPENRECH (OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCLOSESAPDELIVERY (OBEKTID INTEGER,
TYPEDB SMALLINT,
NUMBER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTCLOSEDELIVERY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGCOPYREPORTPERM (OBEKTID INTEGER,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TOUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDATA (PARAMNAME VARCHAR(50) CHARACTER SET WIN1251,
PARAMVALUE VARCHAR(5000) CHARACTER SET WIN1251,
OLDDATA VARCHAR(30000) CHARACTER SET WIN1251)
RETURNS (DATA VARCHAR(30000) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOGDELBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELBROCHURE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELCKLADSTOCKGROUP1 (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELDAILYMENUBYDATE (OBEKTID INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELDAILYMENUBYNUM (OBEKTID INTEGER,
NUM DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEALLDANNIFIRMA (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEALLTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEBARCODEMASK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEDISCOUNTBYHOURS (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEDOGDOCTPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFAKTURANOMER (OBEKTID INTEGER,
FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMAREAINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMBOXCKLADSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMDANGROUP (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMDANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMORDERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DELFROMDEFPRICELIST CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMPROMOTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMRATES (ID INTEGER,
OBEKTID INTEGER,
"LOG" INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMRAZXODI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMREPORTPERM1 (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMSTREETINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTEMPVLOJENOSTSDR1 (TYPEDB SMALLINT,
OBEKTID INTEGER,
TEMPVLOJENOSTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTYPEAREA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTYPEPARTNERS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMTYPETRANSPORT (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEFROMZAIAVKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPARTNERSTYPEPARTNER (OBEKTID INTEGER,
TYPEPARTNERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPERMPOS (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPRICELISTNAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEPROMOTIONSALESPRICE (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETERECHSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETESMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
REPORTINGDATE DATE,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETAG (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETETYPEMEASURE (NAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELETEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELFROMBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELFROMPARTNERSEMPLOYEE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELFROMPARTNERSSTORE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELPARTNERSSETINGS (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELPRINTER (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELRAZFASOVKA (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELRAZFASOVKA1 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELRECH (OBEKTID INTEGER,
RECHNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELSTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGDELZAG (OBEKTID INTEGER,
ZAGNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITARTINBOXCKLADSDR (OBEKTID INTEGER,
ID INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITARTINRECHSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITARTINSALESCKLAD (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITARTINVLOJENOSTSDR (OBEKTID INTEGER,
ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITARTINZAGSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITCKLAD (OBEKTID INTEGER,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITGRYPANAME (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITLOCATIONGROUP (LOCATIONID INTEGER,
DBLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
GROUPNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
PARTNERLOCATIONNUM INTEGER,
CHRMODE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITPRINTER (OBEKTID INTEGER,
OLDPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITRAZXOD (OBEKTID INTEGER,
OLDRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
NEWRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEDITSMETKIDOC (OBEKTID INTEGER,
NOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGEMPTYPOR ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGFIXQTYFROMOUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
USERID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSBOXCKLADDYNAMICSDRINFO (ID INTEGER,
OBEKTID INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSCAKERESERVATIONS (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTSAVE TIMESTAMP,
QTY DQTY,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DESPARKID VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSCASHIMPORTEXPORT (LOCATIONID INTEGER,
POSNAME VARCHAR(30) CHARACTER SET WIN1251,
DATESAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DEVICENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(20) CHARACTER SET WIN1251,
AMOUNT DCURR,
NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NUM INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTARTINBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTCKLADNAME (ID INTEGER,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOAREAINFO (INID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBOXCKLAD (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBOXCKLADDYNAMICSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBOXCKLADSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INBOXCKLADSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOBYPROD (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
OBEKTID INTEGER,
TYPEDB INTEGER,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOCURRENCYTYPES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTODOGDOCTPRICES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOFISCALDATA (LOCATIONNAMEID INTEGER,
SALENUM INTEGER,
FISCALDATE TIMESTAMP,
FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
FISCALMEMORY VARCHAR(10) CHARACTER SET WIN1251,
FISCALNUM VARCHAR(10) CHARACTER SET WIN1251,
FISCALAMOUNT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOGROUPID (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOH_COUNTRY (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOOBEKTIOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPARTNERSEMPLOYEE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPARTNERSSTORE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOPRODUCERS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTORATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSPENTTIME (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOSTREETINFO (INID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTAG (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
TAGVALUEID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAGID INTEGER =null)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTAGVALUE (INP_ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
NEWPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPEADDRESS (INID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPEAREA (INID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPEMEASURE (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPEPARTNERS (OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOTYPETRANSPORT (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTINTOUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTOTCHETFP (OBEKTID INTEGER,
DTOTCHET TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
POS CHAR(10) CHARACTER SET WIN1251,
SERNO VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPAYRAZCR (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
ACTIONID SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPERMPOS (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPERMSKLAD (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPRICELISTNAMES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPRINTER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTRAZFASOVKI (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
SEARCHNAME D_ARTIKULNAME,
CKLADID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTSTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTSYXRANENIE (ID INTEGER,
OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTTYPEARTIKUL (ID INTEGER,
OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSERTWORKREPORT (ID INTEGER,
LOCATIONID INTEGER,
USERID INTEGER,
APPTYPE SMALLINT,
DATESAVED TIMESTAMP,
POS VARCHAR(10) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPORTDATA BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSLOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSLOTTERYSALES (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSSECURITYROLE (ID INTEGER,
OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
NEWPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGINSTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKBRAK (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEBRAK CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBRAK CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKOUTSTOKI (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
SUMMONEYIN DQTY,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
OUTCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
LOGSAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEPF CHAR(1) CHARACTER SET WIN1251,
LOGSAVEPF CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PFTIME TIME,
EXECDATE TIMESTAMP,
UCODE BIGINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKPOR (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEREV CHAR(1) CHARACTER SET WIN1251,
LOGSAVEREV CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGPRIKSMETKA (SMETKANOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PRDATE TIMESTAMP,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
CHROUTFROMCKLAD CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SUMSMETKA DCURR,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
AVGPRICE DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVESMETKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVESMETKI CHAR(1) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0),
UCODE BIGINT,
BESTBEFORE TIMESTAMP = null)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGREORDERPORID AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEAMBALAJ (DOCTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DOCTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATEDOCT DATE,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO INTEGER,
DOCDATE DATE,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
OLDBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBARCODEMASK (OBEKTID INTEGER,
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBOXARTIKUL (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
BOXCKLADSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DYNAMICSDRINFOARTNOMER INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBRAK (OBEKTID INTEGER,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEBRAKINCKLAD (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVECLEARROW (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
SAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
LOGSAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
CHRUPDATE CHAR(1) CHARACTER SET WIN1251,
FROMOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDELIVERY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDELIVERYSLAVEDB (OBEKTID INTEGER,
OBEKTIDLOG INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEDOCTINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSAVENEWART CHAR(1) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
PRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DATEDOCT TIMESTAMP,
GODNODO DATE,
AVGPRICEWOTAX DCURR,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEEARNEST (NOMER INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PAYSUMA DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEFAKTURI (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY CHAR(1) CHARACTER SET WIN1251,
FAKTURATYPE INTEGER,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE CHAR(1) CHARACTER SET WIN1251,
TYPEAVANS CHAR(1) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
F CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DOCTNOMER INTEGER,
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOGDOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEGROUPITEM (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEGRYPA (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEHTTPORDERS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEINVOICETOTAL (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
TOTAL DCURR,
VATTOTAL DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEMONEYINOPER (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVENEWARTFROMPOS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVENEWARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
MAXTO DCURR,
CKLADSTOCKGROUPID INTEGER,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVENEWARTINSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVENEWBOXCKLAD (SDRID INTEGER,
OBEKTID INTEGER,
SALEARTNOMER INTEGER,
DYNAMICSDRNUM INTEGER,
OTSTOREID INTEGER,
OTDINAMICSTORE CHAR(1) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
DYNAMICSDRGRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDRSELLARTNOMER INTEGER,
QTY DQTY,
NETQTY DQTY,
QTYPERCENTAGE DQTY,
PRICEPERCENTAGE DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVENEWRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
RECHSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION INTEGER,
OTNETKOL DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEORDERITEM (OBEKTID INTEGER,
SALEARTNOMER INTEGER,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEORDERS (ORDERID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
SAVED CHAR(1) CHARACTER SET WIN1251,
CHREDIT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEOUTPROD (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEOUTSTOKIINCKLAD (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPARTNERPRICELISTID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPARTNERSERVICEUSER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERCODE VARCHAR(10) CHARACTER SET WIN1251,
SERVICETYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMRAZCR DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKADATE TIMESTAMP,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINOBEKTID INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPFINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPOR (PORID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVERAZXODI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVERECH (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEREVINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
RAZKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER INTEGER,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
FROMSTOCKATTRIBUTE01_ID INTEGER,
FROMSTOCKATTRIBUTE02_ID INTEGER,
FROMSTOCKATTRIBUTE03_ID INTEGER,
FROMSTOCKATTRIBUTE04_ID INTEGER,
FROMSTOCKATTRIBUTE05_ID INTEGER,
TOSTOCKATTRIBUTE01_ID INTEGER,
TOSTOCKATTRIBUTE02_ID INTEGER,
TOSTOCKATTRIBUTE03_ID INTEGER,
TOSTOCKATTRIBUTE04_ID INTEGER,
TOSTOCKATTRIBUTE05_ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVETEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
SALESPRICE DCURR,
PERCTO NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVETIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
VLOJENOSTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
PORTION DQTY,
NETQTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ZAGSDRID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSAVEZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETARTIKULALTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETARTIKULDEFPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETARTIKULLASTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCAKERESERVATIONSSTATUS (ID INTEGER,
OBEKTID INTEGER,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTPAY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCKLADGANCHEV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GANCHEV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCKLADQTY (OBEKTID INTEGER,
DEFCKLADID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
ISACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCKLADSTOCKACTIV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADSTOCKGROUPID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETCLEARROWSSMETKANO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETDEFCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETDEFDANNIFIRMA (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETDEFFISKALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETLOTTERYSALESDTSEND (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSEND TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETMATERIALPACKAGE (OBEKTID INTEGER,
UCODE BIGINT,
PACUCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETSALESCKLADLOCKBONUSPOINT (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETSALESCKLADLOTTERY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
LOTTERY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
MISTRALTCOLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETUSERDEFMONEYIN (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSETUSERSDTLASTLOG (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSPDELARTOTCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSPEDITARTINCKLAD (OLDOBEKTID INTEGER,
OLDARTNOMER INTEGER,
OLDCKLADID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
SALESARTNOMER INTEGER,
CANSALES CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
KINDTYPE INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGSPNAME (SPNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (DATA VARCHAR(30000) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE LOGSPPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEAREAINFO (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEARTIKUL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBOXCKLAD (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBOXCKLADSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEBYPRODKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADALTERDANGROUP (OBEKTID INTEGER,
UNIQUECODE BIGINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORBACKSTOKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORDOCT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFOROUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADBLOCKFORZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADDANGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OPTQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADTYPEARTIKULID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADTYPEMEASURE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECKLADWEIGHT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NETWEIGHT DQTY,
GROSSWEIGHT DQTY,
MINKOLORDER DQTY,
PACKKOL DQTY,
TARAKOL DQTY,
TRANSPORTPACK DQTY,
TOLERANSKOL DQTY,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATECURRENCYTYPES (OBEKTID INTEGER,
OLDNAME VARCHAR(15) CHARACTER SET WIN1251,
NEWNAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDANNIFIRMA (OLDID INTEGER,
OLDOBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(30) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDISCOUNTBYPACKACTIVE (ID INTEGER,
OBEKTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEFAKTURICANCEL (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATELOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMATDELIVERYDATE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMATERIAL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMATLASTEXEC (OBEKTID INTEGER,
EDITBYUSERID INTEGER,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMATPROPERTY (OBEKTID INTEGER,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
PACKAGEQTY DQTY,
TOLERANCE DQTY,
MINORDERQTY DQTY,
SPECIFICATION VARCHAR(40) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
MINKOL DQTY,
OPTIMALQTY DQTY,
COUNRTYORIGINID INTEGER,
DISCOUNTPERCENTAGE NUMERIC(6, 2),
EXPIRATIONDATE INTEGER,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(512) CHARACTER SET WIN1251,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UCODE BIGINT,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMONEYINNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(25) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEMONEYOPERKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERGROUP (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERNOTE (OBEKTID INTEGER,
OLDNOMER INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERNOTEBYGROUPGRYPA (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERNOTESDR (ID INTEGER,
OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERSSDRSAVED (OBEKTID INTEGER,
ORDERID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERBONUSPOINT (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
BONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERS (OBEKTID INTEGER,
EDITNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERSEMPLOYEE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERSNOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPARTNERSSTORE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPRICELISTNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPRICELISTNAMESDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEPROMOTIONSALESPRICE (OBEKTID INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATERATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATERECH (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATERECHDANGROUP (OBEKTID INTEGER,
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATERECHSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATERECHTYPEMEASURE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADACTIVEDATE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADARTNOMER (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADBLOCKED (OBEKTID INTEGER,
ARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADELETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADPERCNAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTERID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESALESCKLADTM_ACTIVE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESMETKIKACA (OBEKTID INTEGER,
NOMER INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESMETKIPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESTREETINFO (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETAG (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETEKORDERSBYTELSDRPOR (ID INTEGER,
OBEKTID INTEGER,
POR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETEKORDERSBYTELSTATUS (OBEKTID INTEGER,
NOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEAREA (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEMEASURE (OLDNAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEMEASUREID (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPEPARTNERS (OLDTYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATETYPETRANSPORT (OLDNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEUSERSPASS (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NEWPASS VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEUSERSPASS1 (OBEKTID INTEGER,
OLDPASS1 VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS1 VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEUSERSPOSITIONS (OBEKTID INTEGER,
OLDPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
NEWPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEVLOJENOSTCHRACTIVE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEZAG (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDATEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDBRAKCHRCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDCKLADDEFPARTNERNOMER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDFUTUREPRICE (OBEKTID INTEGER,
OLDPRICELISTID DID,
OLDARTNOMER INTEGER,
OLDDTSTART TIMESTAMP,
OLDPRICE DCURR,
NEWPRICELISTID DID,
NEWARTNOMER INTEGER,
NEWDTSTART TIMESTAMP,
NEWPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDHTTPORDERSSTATUS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDOBEKTILOGCKLADQTY (OBEKTID INTEGER,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPARTNERSSETINGSKARTAV_TO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPRICELISTLOADFROMPRLIST (ID NUMERIC(18, 0),
OBEKTID INTEGER,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDPROMBARCODES (OBEKTID INTEGER,
OLDPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
NEWPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDRAZFASOVKA (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDRAZFASOVKASDR (ID INTEGER,
OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDRECHWEIGHTSCALENAME (OBEKTID INTEGER,
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSALESCKLADEXTRAMERED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSALESCKLADFISKALPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
FISKALPRINTERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSALESCKLADPRINTER1ID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTER1ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
OLDSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
NEWSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSCI_DISCOUNTRATE (OBEKTID INTEGER,
CATEGORYNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTRATE NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDSECURITYROLE (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDTEKORDERSBYTELDTPORREADY (OBEKTID INTEGER,
NOMER INTEGER,
DTPORREADY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDTEKORDERSBYTELDTPRINTPOR (OBEKTID INTEGER,
NOMER INTEGER,
DTPRINTPOR TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDTEKORDERSBYTELD_USER (OBEKTID INTEGER,
NOMER INTEGER,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDTEKORDERSBYTELSDRPRIK (ID INTEGER,
OBEKTID INTEGER,
PRIK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE LOGUPDTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE MAKELOG (TYPEDB CHAR(1) CHARACTER SET WIN1251)
RETURNS ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE MOVEROWTEKSMETKA (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NEWMACA INTEGER,
NEWKOL DQTY,
NEWKLIENT INTEGER,
NEWOPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE MRGETARTIKULS (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE MRGETSTOCKGROUP (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE NEXTSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OBEKTIAFTERUPDATE1 (OLDID INTEGER,
NEWID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OPENLOGSYNC (OBEKTID INTEGER,
DTSTART TIMESTAMP)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE OPENSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE OTCHETIFPMAXDTOTCHET (OBEKTID INTEGER)
RETURNS (MAXDTOTCHET TIMESTAMP,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE OUTBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTDOCTBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
IZKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTFROMSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
QTY DQTY,
EDITBYUSERID INTEGER,
TYPEACTION SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
TYPEDB SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ORDERNOTEAVGPRICE DCURR,
ORDERNOTELASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE OUTRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTSTOKI (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SALEARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTVLOJENOSTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDITBYUSERID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE OUTZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PREVSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEBRAK CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBRAK CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKORDERS (OBEKTID INTEGER,
ORDERSSDRID INTEGER,
USERID INTEGER,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAMES VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKOUTSTOKI (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
SUMMONEYIN DCURR,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
OUTCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
LOGSAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEPF CHAR(1) CHARACTER SET WIN1251,
LOGSAVEPF CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PFTIME TIME,
EXECDATE TIMESTAMP,
UCODE BIGINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKPOR (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEREV CHAR(1) CHARACTER SET WIN1251,
LOGSAVEREV CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE PRIKSMETKA (SMETKANOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PRDATE TIMESTAMP,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
CHROUTFROMCKLAD CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SUMSMETKA DCURR,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
AVGPRICE DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVESMETKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVESMETKI CHAR(1) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0),
UCODE BIGINT,
BESTBEFORE TIMESTAMP = null)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE QACTIONS (DATEOT DATE,
DATEDO DATE,
I SMALLINT,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIONS0 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIONS1 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIONS2 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIONS3 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTYSALES DQTY,
SUMSALES DCURR,
QTYDOCT DQTY,
SUMDOCT DCURR,
QTYBRAK DQTY,
SUMBRAK DCURR,
QTYBACKSTOKI DQTY,
SUMBACKSTOKI DCURR,
QTYOUTSTOKI DCURR,
SUMOUTSTOKI DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIONSTYPE RETURNS (ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIVEPROMOTIONS (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QACTIVEPROMOTIONSALESPRICE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QALEXLOG_EXPORTART (OBEKTID INTEGER)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
BARCODE2 VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QAREAINFO RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QARTBYVEZNI (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (VEZNANO NUMERIC(18, 0),
VEZNINAMES VARCHAR(20) CHARACTER SET WIN1251,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QARTIKULNAMES RETURNS (ID INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QARTIKULORDER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DATEFOR TIMESTAMP,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
ORDERARTIKUL D_ARTIKULNAME,
ORDERKOL DQTY,
ORDERTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ORDERSSDRID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
NALKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBACKSTOKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBACKSTOKISDR (OBEKTID INTEGER,
BACKSTOKINOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBARCODEMASK (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBEKTIOPENRECH RETURNS (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKDELIVERY CHAR(1) CHARACTER SET WIN1251,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
BLOCKSALES CHAR(1) CHARACTER SET WIN1251,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
CANSALES CHAR(1) CHARACTER SET WIN1251,
CANDELIVERY CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBONUSPOINTBYART (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBONUSPOINTBYOBOR (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBRAKBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEBRAK DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
PRICE DCURR,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBRAKSDR (OBEKTID INTEGER,
BRAKNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBROCHURE (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBROCHUREDETAILS (OBEKTID INTEGER,
BROCHUREID INTEGER)
RETURNS (ID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBYPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QBYPRODREV (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SUMKOL DQTY,
SUMREVRAZKOL DQTY,
DEFKOL DQTY,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADARTNOMER (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INARTNOMER INTEGER)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
LASTREVDATE TIMESTAMP,
LASTBRAKDATE TIMESTAMP,
LASTBACKSTOKADATE TIMESTAMP,
LASTSALESDATE TIMESTAMP,
LASTOUTPRODDATE TIMESTAMP,
DOCTTO NUMERIC(6, 2),
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
TYPEMEASUREID INTEGER,
TYPEARTIKULID INTEGER,
SYXRANENIEID INTEGER,
PRODUCERID INTEGER,
DANGROUPID INTEGER,
MINQTY DQTY,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
CKLADSTOCKGROUPID INTEGER,
UNIQUECODE BIGINT,
CATEGORY VARCHAR(40) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
TOLERANCE DQTY,
PACKAGEQTY DQTY,
KINDTYPE NUMERIC(18, 0),
ESLID VARCHAR(100) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADBLOCKARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
FORARTNOMER INTEGER = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ACTIV CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADBYDATE (DTDATE TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADBYDATEADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
IZKONSIGLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADBYPARTNERSARTNOMER (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PARTNERSARTNOMERID INTEGER,
PARTNERARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADBYSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADSTOCKGROUPID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
QTY DQTY,
ARTIKUL D_ARTIKULNAME,
MINKOL DQTY,
OPTQTY DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADQTYBYDATE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADQTYBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
STARTQTY DQTY,
STARTAVGPRICE DCURR,
STARTLASTDOCTPRICE DCURR,
STARTAVGPRICE1 DCURR,
STARTLASTDOCTPRICE1 DCURR,
SUMINQTY DQTY,
AVGINAVGPRICE DCURR,
AVGINLASTDOCTPRICE DCURR,
AVGINAVGPRICE1 DCURR,
AVGINLASTDOCTPRICE1 DCURR,
SUMOUTQTY DQTY,
AVGOUTAVGPRICE DCURR,
AVGOUTLASTDOCTPRICE DCURR,
AVGOUTAVGPRICE1 DCURR,
AVGOUTLASTDOCTPRICE1 DCURR,
ENDQTY DQTY,
ENDAVGPRICE DCURR,
ENDLASTDOCTPRICE DCURR,
ENDAVGPRICE1 DCURR,
ENDLASTDOCTPRICE1 DCURR,
STARTDEFSALESPRICE DCURR,
ENDDEFSALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCKLADSTOCKGROUP RETURNS (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCLEARROWREASONS (OBEKTID INTEGER)
RETURNS (ID INTEGER,
REASON D_REASON)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCLEARROWS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QCURRENCYTYPES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDAILYMENU RETURNS (ID INTEGER,
NUM INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDANGROUP RETURNS (ID INTEGER,
OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDANNIFIRMA RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
OBEKTID INTEGER,
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDEBITNOSALDO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDEBITNOSALDOBYPARTNERS (OBEKTID INTEGER,
TYPEDB SMALLINT,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OUTTYPEDB SMALLINT,
DTDATE TIMESTAMP,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOORDERS RETURNS (ID INTEGER,
OBEKTID INTEGER,
ORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
ORDERDATE DATE,
FORDELIVERYDATE DATE,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
SMETKINOMER INTEGER,
DTSAVE TIMESTAMP,
TYPEDB SMALLINT,
DISCOTYPE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOUNTBYHOURS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOUNTBYHOURSNAMES (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOUNTBYPACK RETURNS (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE1 VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTID1 NUMERIC(18, 0),
PRICELISTNAME1 VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER2 INTEGER,
ARTIKUL2 D_ARTIKULNAME,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTID2 NUMERIC(18, 0),
PRICELISTNAME2 VARCHAR(20) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOUNTBYSALES RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMES VARCHAR(20) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDISCOUNTBYSALESNAME (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DOCBYDELIVERYID INTEGER,
MISTRALEXPORT CHAR(1) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
CHECKUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
UNIQUENUM INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCTBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT DATE,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
PRICE DCURR,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
DOCTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCTBYDOC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
CHECKUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCTBYPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCTSDR (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOCTYPENAMES RETURNS (ID INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOGDOCTPRICE1 (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOGDOCTPRICEBYOBEKTI (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QDOGDOCTPRICEGROUP (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEARNEST (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
PAYSUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEARNESTBYVALUE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
DTCLOSE TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(256) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEARNESTOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
MONEYOBOR DCURR,
DATEONLY DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEARNESTSDR (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEDITDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEDITOUTPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEDITSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
LASTDOCTPRICE DCURR,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PRDATEONLY DATE,
PRTIMEONLY TIME,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTARTIKULSTOMISTRALM (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
QTY DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
GODNODO DATE,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
LASTEDITDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTBARCODEMASKTOMISTRALM (OBEKTID INTEGER)
RETURNS (PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM VARCHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTBARCODETOMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
SUMDOCTPRICE DCURR,
SUMSALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMDOCT DCURR,
SALESPRICE DCURR,
DOCTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMDOCTSALESPRICE DCURR,
DATEDOCT TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTDOCTTOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DCURR,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
TYPEMEASURENAMEID INTEGER,
DOCTYPEID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTFAKTURITOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
FNOMER NUMERIC(18, 0),
DATEFAK DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(50) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
SALESPRICE DCURR,
SUMA DCURR,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTGROUPTOMISTRALM (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DECODENAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTOUTSTOKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMOUTSTOKI DCURR,
OUTSTOKINOMER INTEGER,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMOUTSTOKISALESPRICE DCURR,
DTOUTPROD TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTOUTSTOKITOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DCURR,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
TYPEMEASURENAMEID INTEGER,
DOCTYPEID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTPRICELISTTOMISTRALM (OBEKTID INTEGER,
CHRSTOCKGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
QTY DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTREV (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (REVNO INTEGER,
DATEREV TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
RAZKOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
SUMRAZDOCTPRICE DCURR,
SUMRAZSALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTSALESTOSANTAPRIMA (DATEOT DATE,
DATEDO DATE)
RETURNS (OBEKTNAMEID INTEGER,
SMETNOMER INTEGER,
PRDATE TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DQTY,
SALESPRICE DCURR,
TYPEACTION SMALLINT,
TYPEMEASURENAMEID INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPORTSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMSALES DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
SMETKANOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SUMSALESDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QEXPSALESCKLADTOMOBREST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURI (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID,
SELNOMER INTEGER = null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
FROMDOCNOMER NUMERIC(18, 0),
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICEVAT FLOAT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURIBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
TYPEDB SMALLINT,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DTPAY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
FAKTURATYPECODE INTEGER,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURIHOWPAY (HOWPAYCODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (HOWPAY VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURITOTAL (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX NUMERIC(10, 2),
SUMNODDS DCURR,
SUMDDS DCURR,
TOTAL DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DTPAY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURITYPE (FAKTURATYPECODE INTEGER)
RETURNS (FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFAKTURITYPEAVANS (TYPEAVANSCODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE QFAKTURITYPEIZVESTIE (TYPEIZVESTIECODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFINDARTIKULSBYNAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
NAME D_ARTIKULNAME)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFINDPARTNERS (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
PARTNERNOTE D_PARTNERSNOTE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QFISKALPRINTERS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QGROUPID (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QGROUPRAZ (OBEKTID INTEGER)
RETURNS (RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QGROUPSMETKIBYDAYID (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QGROUPVLOJENOST (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
SALESPRICE DCURR,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QHTTPORDERS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(512) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QH_OBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QINFOBYSERIALNUMBER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QINRAZCR (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QINRAZCRBYPARTNERNOMER (PARTNERNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGBONUSPOINT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
BONUSPOINTDELTA INTEGER,
OLDBONUSPOINT INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGCKLAD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATELOG TIMESTAMP,
OPERTYPE VARCHAR(30) CHARACTER SET WIN1251,
OLDOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OLDARTNOMER INTEGER,
OLDARTIKUL D_ARTIKULNAME,
OLDKOL DQTY,
OLDTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDAVGPRICE DCURR,
OLDLASTDOCTPRICE DCURR,
OLDMINKOL DQTY,
OLDCANSALES CHAR(1) CHARACTER SET WIN1251,
OLDSALESARTNOMER INTEGER,
NEWOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWARTNOMER INTEGER,
NEWARTIKUL D_ARTIKULNAME,
NEWKOL DQTY,
NEWTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
NEWAVGPRICE DCURR,
NEWLASTDOCTPRICE DCURR,
NEWMINKOL DQTY,
NEWCANSALES CHAR(1) CHARACTER SET WIN1251,
NEWSALESARTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
NEWCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
OLDAVGPRICE1 DCURR,
NEWAVGPRICE1 DCURR,
OLDLASTDOCTPRICE1 DCURR,
NEWLASTDOCTPRICE1 DCURR,
OLDKOLDELTA DQTY,
NEWKOLDELTA DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGCKLADQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGCKLADQTYADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
STARTQTY DQTY,
STARTAVGPRICE DCURR,
STARTLASTDOCTPRICE DCURR,
STARTAVGPRICE1 DCURR,
STARTLASTDOCTPRICE1 DCURR,
ENDQTY DQTY,
ENDAVGPRICE DCURR,
ENDLASTDOCTPRICE DCURR,
ENDAVGPRICE1 DCURR,
ENDLASTDOCTPRICE1 DCURR,
SUMDOCTKOL DQTY,
SUMDOCTPRICE DCURR,
SUMSALESKOL DQTY,
SUMSALESPRICE DCURR,
SUMOUTKOL DQTY,
SUMOUTKOLPRICE DCURR,
SUMREVKOL DQTY,
SUMREVPRICE DCURR,
SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKAPRICE DCURR,
SUMIZKONSIGKOL DQTY,
SUMIZKONSIGPRICE DCURR,
SUMVLOJENOSTKOL DQTY,
SUMVLOJENOSTPRICE DCURR,
SUMBRAKKOL DQTY,
SUMBRAKPRICE DCURR,
SUMPFKOL DQTY,
SUMPFPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGSENDTO_OFA RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QLOGSYNC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
LOGNO INTEGER,
DTSTART TIMESTAMP,
DTSTOP TIMESTAMP,
SYNCTIME INTEGER,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMISTRALMFINDART (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
NALQTY DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYINAUTOACCOUNT (OBEKTID INTEGER,
USERID NUMERIC(18, 0))
RETURNS (FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYINNAL (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
NAL DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYINNAMES RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
USERNAMESID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEDB SMALLINT,
INP CHAR(1) CHARACTER SET WIN1251)
RETURNS (MONEYOBOR DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOBORBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
SUMTEKSMETKI DCURR,
COUNTSMETKIWITHTO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOBORBYREPORTINGDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(55) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
NUMBERCLIENTS INTEGER,
COUNTSMETKI INTEGER,
MONEYOBOR DCURR,
MONEYOBORBYDEFPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOBORBYREPORTINGDATEGROUP (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(55) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
NUMBERCLIENTS INTEGER,
COUNTSMETKI INTEGER,
MONEYOBOR DCURR,
MONEYOBORBYDEFPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOPER1 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYOPER2 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QMONEYTRANSFER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNAL (INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 = null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 = null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
LASTREVDATE TIMESTAMP,
LASTBRAKDATE TIMESTAMP,
LASTBACKSTOKADATE TIMESTAMP,
LASTSALESDATE TIMESTAMP,
LASTOUTPRODDATE TIMESTAMP,
EXTRATYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EXTRATYPEMEASURESDR DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICEWOTAX DCURR,
AVGDELIVPRICEWOTAX DCURR,
NET DKOL,
GROSS DKOL,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(521) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
SUMIZKONSIGLV DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALADVANCEDREV (REV1 INTEGER,
REV2 INTEGER,
INOBEKTIID D_INOBEKTIID)
RETURNS (NOREV1 INTEGER,
NALREV1 DQTY,
LVREV1 DQTY,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
SUMIZKONSIGLV DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
NOREV2 INTEGER,
NALREV2 DQTY,
LVREV2 DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALANDSALESPRICE (OBEKTID INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
LASTDOCTPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALBYATTRIBUTE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALBYPART (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
KOL DQTY,
OPENKOL DQTY,
EDPRICE DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QNALBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMKOL DQTY,
FROMAVGPRICE DCURR,
SUMINKOL DQTY,
AVGINPRICE DCURR,
SUMOUTKOL DQTY,
AVGOUTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBEKTI RETURNS (ID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER,
PATHDB VARCHAR(255) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBEKTINAMES RETURNS (ID INTEGER,
OBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATETIME TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
DATEONLY DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
MONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
OPERATION VARCHAR(30) CHARACTER SET WIN1251,
COUNTSMETKISDR INTEGER,
NUMBERCLIENTS INTEGER,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBORBYACTION (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEOBOR DATE,
SUMDOCT DCURR,
SUMSALES DCURR,
SUMSTORNO DCURR,
SUMBRAK DCURR,
SUMOUTPROD DCURR,
SUMRAZXODI DCURR,
SUMREV DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMPERSONALFOOD DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBORBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
NAD DCURR,
DISCOUNT DCURR,
DOCT DCURR,
IZKONSIG DCURR,
SUMRAZCR DCURR,
SUMTEKSMETKI DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMCLEARROWS DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBORBYOPER1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
MONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
COUNTSMETKI INTEGER,
COUNTSMETKISDR INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOBOROTDOOTCHETFP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATETIMEOT TIMESTAMP,
DATETIMEDO TIMESTAMP,
OBORSALESPRICE DCURR,
OBORDOCTPRICE DCURR,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOPENMISTRALM RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SESSIONNO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERGROUP RETURNS (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERNOTE RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
FINDSDR CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERNOTEBYGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ORDERNOTENOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERNOTEBYRECH RETURNS (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERS (INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERS1 (SAVED CHAR(1) CHARACTER SET WIN1251)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERSBYDATE (OBEKTID INTEGER,
DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (ORDERID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
ORDERSSDRID INTEGER,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERSBYDATE1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSEMPLOYEETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERSBYDATEFOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERSBYPARTNER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOUTPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OBEKTID INTEGER,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOUTPRODBYDOC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
DATESAVED TIMESTAMP,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOUTPRODSDR (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOUTRAZCR (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QOUTRAZCRBYPARTNERNOMER (PARTNERNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERS (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
SUMSALES DCURR,
SUMDELIVERY DCURR,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
OBEKTID INTEGER,
ID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
KARTAVALIDITYTO TIMESTAMP,
PAYMENT_PERIOD INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
PARTNERNOTE D_PARTNERSNOTE,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERSBYKARTA (OBEKTID INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
KARTAVALIDITYTO TIMESTAMP,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERSEMPLOYEE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
BONUSPOINT INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMDELIVERY DCURR,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251,
OBEKTID INTEGER,
KARTAVALIDITYTO TIMESTAMP,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
TYPEPARTNERID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERSNAME (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERSSTORE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
BONUSPOINT INTEGER,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMDELIVERY DCURR,
OBEKTID INTEGER,
KARTAVALIDITYTO TIMESTAMP,
PARTNERNOMER INTEGER,
TYPEPARTNERID INTEGER,
PAYMENT_PERIOD INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPARTNERSSTORE1 (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPAYRAZCR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
PAYRAZCRACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPERMPOS RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID INTEGER,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPERMSKLAD RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID INTEGER,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPERSONALFOOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFNOMER INTEGER,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
DTSTARTCOOKING TIMESTAMP,
MISTRALTCOLOR INTEGER,
COUNTPOR INTEGER,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
GIVE_STATUS SMALLINT,
FORDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPORBYMISTRALT_STATUS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
MISTRALT_STATUS SMALLINT)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
DTSTARTCOOKING TIMESTAMP,
COUNTPOR INTEGER,
SMETKANO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRICELIST RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRICELISTNAMES RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
TIMEACTIVEFROM TIMESTAMP,
TIMEACTIVETO TIMESTAMP,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
DIGG INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRICINGPOLICY (OBEKTID INTEGER)
RETURNS (ID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRINTETIKETI (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
ARTIKUL1 D_ARTIKULNAME,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
ESLID VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRODUCTIONREQUEST (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
FORDATE TIMESTAMP,
DOCTNOMER INTEGER,
OUTPRODNOMER INTEGER,
CKLADNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
REQUESTQTY DQTY,
PRODUCTIONQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONREQUESTSDRID INTEGER,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR,
DOCTDATE TIMESTAMP,
OUTPRODDATE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPRODUCTIONREQUESTBYSTATUS (OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT)
RETURNS (DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
PRODUCTIONREQUESTSDRID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROFITBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROFITBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SUMADOCTPRICE DCURR,
SUMAPROFIT DCURR,
NAD NUMERIC(6, 2),
SUMCOST DCURR,
NADSUMSALESPRICE NUMERIC(6, 2),
SUMREV DCURR,
COUNTSMETKI INTEGER,
COUNTSMETKISDR INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROFITBYPERIOD1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SUMADOCTPRICE DCURR,
SUMAPROFIT DCURR,
NAD NUMERIC(6, 2),
SUMCOST DCURR,
NADSUMSALESPRICE NUMERIC(6, 2))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROMBARCODES RETURNS (ID INTEGER,
OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROMOTIONBYQTY (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
BYQTY DQTY,
SALESPRICE DCURR,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
ID INTEGER,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QPROMOTIONSALESPRICE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPENAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRATES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
CURRENCYTYPESFROM VARCHAR(15) CHARACTER SET WIN1251,
CURRENCYTYPESTO VARCHAR(15) CHARACTER SET WIN1251,
RATE FLOAT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRAZCR (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRMAXSUM DCURR,
RAZCRMAXDAY INTEGER,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
PARTNERTYPE VARCHAR(30) CHARACTER SET WIN1251,
IBAN VARCHAR(24) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRAZCRBYDTBACK (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
ACTIONID SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRAZCRINFO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMARAZCR DCURR,
PAYSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUMA DCURR,
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRAZFASOVKI (INOBEKTID INTEGER)
RETURNS (ID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLAD VARCHAR(20) CHARACTER SET WIN1251,
OTARTNOMER BIGINT,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
SEARCHNAME D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRAZXODI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QRESERVEDARTIKULSBYPARTNERS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREST_TABLES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVALUATION (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TSDATETIME TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDSALESPRICE DCURR,
NEWSALESPRICE DCURR,
NAL DQTY,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVBYATTRIBUTE (OBEKTID INTEGER,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVBYATTRIBUTESG (OBEKTID INTEGER,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(25) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVBYCKLADSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVBYDEFPARTNER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFPARTNERNUM INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVBYSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SUMREVRAZKOL DQTY,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QREVIZIA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
REVNO INTEGER,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
IZKOL DQTY,
LIPSIKOL DQTY,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
TYPEDB INTEGER,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DEFPARTNER VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALDOSKLAD (DATETIMEOT TIMESTAMP,
DATETIMEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATESALDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
POLSUMAVG DCURR,
OTRSUMAVG DCURR,
POLSUMLASTDOCTPRICE DCURR,
OTRSUMLASTDOCTPRICE DCURR,
POLSUMSALESPRICE DCURR,
OTRSUMSALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESACTIVEPROMOTIONSALESPRICE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEONLY DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESBYSERIALNUMBER (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DATESALES TIMESTAMP,
WARRANTY DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESCKLAD (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADARTNOMER INTEGER,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
NAL DQTY,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
OTCKLADID NUMERIC(18, 0),
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251,
UCODE BIGINT,
STORAGETYPE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESFORDISCO (DATEFROM TIMESTAMP,
DATETO TIMESTAMP,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (SMETKANOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PRDATE TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
DISCOORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DISCOTYPE SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESKOLBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSALESPRICE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSAVEDREPBYCATEGORY (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSETTINGSALIASNAME (TYPEPROGRAM SMALLINT)
RETURNS (ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
LASTDOCTPRICE DCURR,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PRDATEONLY DATE,
PRTIMEONLY TIME,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
SMETKACOUNT INTEGER,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
SMETKISDRID NUMERIC(18, 0),
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEOPEN DATE,
WEIGHT DQTY,
DYNPAK SMALLINT,
WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOTE2 D_PARTNERSNOTE,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
PARTNERDRV VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSERVIC VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
DATEFORDELIVERY TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKIANDOPEN (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTYPE VARCHAR(20) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
AVGPRICE1 DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERDRV VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSERVIC VARCHAR(50) CHARACTER SET WIN1251,
OBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKIBYDAY (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DTDATE DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKIGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
CKLADAVGDOCTPRICE DCURR,
CKLADLASTDOCTPRICE DCURR,
SALESPRICE1 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKINAL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
MAXTO NUMERIC(6, 2),
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKINAL1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
SUMAVGPR DCURR,
LASTDOCTPRICE DCURR,
SUMLASTDOCTPR DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKINAL_R (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
MAXTO NUMERIC(6, 2),
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
OPTQTY DQTY,
MINKOL DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSMETKISDR (OBEKTID INTEGER,
SMETNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DEFSALEPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
WEIGHT DQTY,
GODNODO DATE)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSPENTTIME (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
WORKTIME INTEGER,
STARTHOUR TIME,
STOPHOUR TIME,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
WORKTIME1 VARCHAR(8) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSPENTTIMEBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
WORKTIME1 VARCHAR(8) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOCKATTRIBUTE (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTEID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOKIREGISTER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DTDATE TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTKOL DQTY,
DOCTEDPRICE DCURR,
SALESKOL DQTY,
SALESEDPRICE DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
OUTPRODKOL DQTY,
OUTPRODEDPRICE DCURR,
DOCDATE DATE,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
REVRAZKOL DQTY,
REVRAZLV DCURR,
NALBYDATEOT DQTY,
BACKSTOKIKOL DQTY,
BACKSTOKIEDPRICE DCURR,
BRAKKOL DQTY,
BRAKEDPRICE DCURR,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOKIUNDERMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
DEFPARTNERNOMER INTEGER,
LASTDOCTPRICE DCURR,
DEFPARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
SALESCKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOKIUNDERMINKOL1 (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
DEFPARTNERNOMER INTEGER,
LASTDOCTPRICE DCURR,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
CKLADSTOCKGROUPID INTEGER,
PACKAGEQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTOREDMESSAGES RETURNS (ID INTEGER,
OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSTREETINFO RETURNS (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
TYPEAREAID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMDOCTBYCKLAD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMDOCT DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMEARNESTBYUSER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
USERNAMESID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMEARNEST DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMPROFIT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMPROFITBYMONTH (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA1 DCURR,
SUMA2 DCURR,
SUMA3 DCURR,
SUMA4 DCURR,
SUMA5 DCURR,
SUMA6 DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMSALESBYGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMA DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QSUMSALESNULLGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER)
RETURNS (SUMA DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEKORDERSBYTEL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (TEKORDERSBYTELID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
TEKORDERSBYTELSDRID INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEKSMETKI (INOBEKTIID D_INOBEKTIID,
SELMACA INTEGER =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
SALESPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
DATEOPEN DATE,
SMETNOMER INTEGER,
MRROWNO INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
OBEKTID INTEGER,
ID NUMERIC(18, 0),
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
PARTNERNOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
SEARIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SUMA DCURR,
PRINTDOC CHAR(1) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID NUMERIC(18, 0),
DRV VARCHAR(50) CHARACTER SET WIN1251,
SALESREPRESEN VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREIK VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEKSMETKIBYNOMER (OBEKTID INTEGER,
SMETNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
MACA INTEGER,
KLIENT INTEGER,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER,
DATEOPEN DATE,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
PRINTDOC CHAR(1) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
ORDERSID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID DCURR,
DELIV CHAR(1) CHARACTER SET WIN1251,
HOME CHAR(1) CHARACTER SET WIN1251,
HOMEROW CHAR(1) CHARACTER SET WIN1251,
RESERVATIONNOTE VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEMPBACKSTOKI RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY,
TEMPBACKSTOKIID INTEGER,
TEMPBACKSTOKISDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEMPDELIVERY RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TEMPDELIVERYID INTEGER,
TEMPDELIVERYSDRID INTEGER,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEMPOUTPROD RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
EDPRICE DCURR,
TEMPOUTPRODID INTEGER,
TEMPOUTPRODSDRID INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
OUTPRODDATE TIMESTAMP,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEMPREV (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
EDPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTEMPZAIAVKI RETURNS (TEMPZAIAVKIID INTEGER,
TEMPZAIAVKISDRID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FORDATE TIMESTAMP,
USERSID INTEGER,
USERSNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEADDRESS RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEAREA RETURNS (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER,
SERVEOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEDOCUMENTS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEMEASURE RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEMEASURECONV (OBEKTID INTEGER)
RETURNS (ID INTEGER,
CKLADID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OLDTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NEWTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEMEASURENAME RETURNS (ID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QTYPEPARTNERS RETURNS (ID INTEGER NOT NULL,
OBEKTID INTEGER NOT NULL,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251 NOT NULL,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QUSERS (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QUSERSBYREST_TABLES RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QVEZNINAMES RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QVLOJENOST (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMCKLADID NUMERIC(18, 0),
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
SUMAVGPRICE DCURR,
SUMLASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
VLOJENOSTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PORTION DQTY,
NETQTY DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QVLOJENOSTSDR (OBEKTID INTEGER,
VLOJENOSTID INTEGER)
RETURNS (FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
NETQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QVLOJENOSTSDR1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QWEIGHTSCALES RETURNS (ID INTEGER,
OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCALETYPE SMALLINT,
PORTNO SMALLINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QZAIAVKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALEPRICE DCURR,
TYPEDB INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QZAIAVKIBYDATE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OBEKTID INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QZAIAVKIBYDATEZADOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE QZAIAVKISDR (OBEKTID INTEGER,
ZAIAVKANOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE REORDERPORID AS 
BEGIN EXIT; END ^
CREATE PROCEDURE REORDERSMETKI AS 
BEGIN EXIT; END ^
CREATE PROCEDURE ROUNDPART2 (PART2 VARCHAR(30) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTPART2 VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE ROUNDPRICE (DIGG INTEGER,
PRICE DCURR)
RETURNS (OUTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEAMBALAJ (DOCTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DOCTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEARTBYPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
SMETNOMER INTEGER,
PRDATE TIMESTAMP,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
TYPEDB SMALLINT,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBACKSTOKIINCKLAD (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
OLDBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBARCODEMASK (OBEKTID INTEGER,
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM VARCHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBRAK (OBEKTID INTEGER,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBRAKINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBYPROD (OBEKTID INTEGER,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
TYPEDB INTEGER,
ACTIONID SMALLINT,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEBYPRODTMP (TMPROWID NUMERIC(18, 0),
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVECKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
DOCTPRICE DCURR,
KOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVECLEARROW (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
SAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
LOGSAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVECOUNTPOR (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
CHRUPDATE CHAR(1) CHARACTER SET WIN1251,
FROMOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDELIVERY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDELIVERYLOG (OBEKTID INTEGER,
OBEKTIDLOG INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEDOCTINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSAVENEWART CHAR(1) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
PRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DATEDOCT TIMESTAMP,
GODNODO DATE,
AVGPRICEWOTAX DCURR,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEEARNEST (NOMER INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PAYSUMA DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEEDITDOCTNO (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEEDITSMETKANO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEEDITSMETKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
F CHAR(1) CHARACTER SET WIN1251,
EDITSMETKIID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEFAKTURI (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY CHAR(1) CHARACTER SET WIN1251,
FAKTURATYPE INTEGER,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE CHAR(1) CHARACTER SET WIN1251,
TYPEAVANS CHAR(1) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
F CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DOCTNOMER INTEGER,
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOGDOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEGROUPITEM (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEGROUPSMETKIBYDAY (DATEOT DATE,
DATEDO DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEGRYPA (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (GROUPNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEHTTPORDERS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT)
RETURNS (OUTHTTPORDERSID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVEINFOBYSERIALNUMBER (OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEINVOICETOTAL (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
TOTAL DCURR,
VATTOTAL DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVELOGBONUSPOINT (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
BONUSPOINT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVELOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVELOGSENDTO_OFA (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVELOGSYNC (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEMISTRALMZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEMONEYINOPER (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEM_TEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVENEWARTFROMPOS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVENEWARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
MAXTO NUMERIC(6, 2),
CKLADSTOCKGROUPID INTEGER,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVENEWARTINSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVENEWBOXCKLAD (SDRID INTEGER,
OBEKTID INTEGER,
SALEARTNOMER INTEGER,
DYNAMICSDRNUM INTEGER,
OTSTOREID INTEGER,
OTDINAMICSTORE CHAR(1) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
DYNAMICSDRGRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDRSELLARTNOMER INTEGER,
QTY DQTY,
NETQTY DQTY,
QTYPERCENTAGE DQTY,
PRICEPERCENTAGE DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTDYNAMICSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVENEWRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
RECHSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION INTEGER,
OTNETKOL DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEOLDNO (OBEKTID INTEGER,
TYPEDB INTEGER,
OLDNO INTEGER,
NEWNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEOPENRECH (MATCODE INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
RETURNS (MCODE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVEORDERITEM (OBEKTID INTEGER,
SALEARTNOMER INTEGER,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEORDERS (ORDERID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
SAVED CHAR(1) CHARACTER SET WIN1251,
CHREDIT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVEOUTPROD (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEOUTSTOKIINCKLAD (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
EDPRICE DCURR,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERPRICELISTID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERSERVICEUSER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERCODE VARCHAR(10) CHARACTER SET WIN1251,
SERVICETYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERSSUMDELIVERY (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMDELIVERY DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPARTNERSSUMSALES (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMSALES DCURR,
DTSALES DATE,
AUTOCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMRAZCR DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKADATE TIMESTAMP,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINOBEKTID INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SCTIME TIME,
EXECDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPFINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
EDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPOR (PORID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT,
FORDATE TIMESTAMP,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPROGRAMSETTINGS (TYPEPROGRAM SMALLINT,
SETTINGSALIAS VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVERAZFASOVKAINCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
DATEDOCT TIMESTAMP,
TYPEDB SMALLINT,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVERAZXODI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVERECH (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
RETURNS (OUTRECHSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVEREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEREVALUATION (OBEKTID INTEGER,
ARTNOMER INTEGER,
OLDPRICE DCURR,
NEWPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEREVINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
RAZKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTACTION TIMESTAMP,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEREVSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
RAZKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESALDOSKLAD AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESAPTYPEMEASURE (TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER INTEGER,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESMETKI (SMETKANOMER INTEGER,
OBEKTID INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
BESTBEFORE TIMESTAMP = null)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESMETKIBYDAY (DTDATE DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
FROMSTOCKATTRIBUTE01_ID INTEGER,
FROMSTOCKATTRIBUTE02_ID INTEGER,
FROMSTOCKATTRIBUTE03_ID INTEGER,
FROMSTOCKATTRIBUTE04_ID INTEGER,
FROMSTOCKATTRIBUTE05_ID INTEGER,
TOSTOCKATTRIBUTE01_ID INTEGER,
TOSTOCKATTRIBUTE02_ID INTEGER,
TOSTOCKATTRIBUTE03_ID INTEGER,
TOSTOCKATTRIBUTE04_ID INTEGER,
TOSTOCKATTRIBUTE05_ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (TEKORDERSBYTELSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETEKSMETKA (OBEKTID INTEGER,
SMETNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
MACA INTEGER,
KLIENT INTEGER,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
CUSTEMPLOYEEID NUMERIC(18, 0),
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER,
DATEOPEN DATE,
MRROWNO INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(50) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
ORDERSID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID NUMERIC(18, 0),
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
TEMPPQTY CHAR(1) CHARACTER SET WIN1251)
RETURNS (ROWID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TEMPBACKSTOKIID INTEGER,
TEMPBACKSTOKISDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
SALESPRICE DCURR,
PERCTO NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (TEMPDELIVERYID INTEGER,
TEMPDELIVERYSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETEMPOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
OUTPRODDATE TIMESTAMP,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (TEMPOUTPRODID INTEGER,
TEMPOUTPRODSDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
FORDATE TIMESTAMP,
USERSID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (TEMPZAIAVKIID INTEGER,
TEMPZAIAVKISDRID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SAVETIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETMPAVGINCOMEOUTGOARTIKULID (ID INTEGER,
ARTIKULID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVETMPAVGINCOMEOUTGOARTNOMER (ID INTEGER,
ARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEUSERLASTLOG (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTLOG TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
VLOJENOSTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
PORTION DQTY,
NETQTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ZAGSDRID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SAVEZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(40) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SEARCHARTFROMSALESCKLAD (OBEKTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
LASTDOCTPRICE DCURR,
FIRSTBARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
KINDTYPE INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHARTFROMSALESCKLAD1 (OBEKTID INTEGER,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
FILTERBYGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHARTFROMSALESCKLAD2 (OBEKTID INTEGER,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
FILTERBYGROUP CHAR(1) CHARACTER SET WIN1251,
LIKECON VARCHAR(20000) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHFORARTIKULNAME (OBEKTID INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHFORPARTNERSEMPLOYEENAME (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHFORPARTNERSNAME (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SEARCHFORPARTNERSSTORENAME (OBEKTID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SELECTCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
MINKOL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
CKLADID1 NUMERIC(18, 0),
STORAGNAME VARCHAR(50) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
KINDTYPENAME VARCHAR(50) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
UNIQUECODE BIGINT,
WHLOCATIONID INTEGER,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SELECTCKLAD1 (OBEKTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
MINKOL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADSTOCKGROUPID INTEGER,
PACKAGEQTY DQTY)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SELECTCKLADBYGROUP (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INGRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SUMA DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
CKLADID1 NUMERIC(18, 0),
STORAGNAME VARCHAR(50) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
KINDTYPENAME VARCHAR(50) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
UNIQUECODE BIGINT)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SELECTCKLADBYGROUPMAX (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INGRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SUMA DCURR,
LASTDOCTPRICE DCURR,
WORKQTY DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
TEMPQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SELECTCKLADMAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
WORKQTY DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
TEMPQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SETACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETARTIKULALTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETARTIKULDEFPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETARTIKULLASTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETARTIKULSENDTOVEZNA (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETARTNOMERSTARTFROM AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCAKERESERVATIONSSTATUS (ID INTEGER,
OBEKTID INTEGER,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCASHONDELIVERYDTPAY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTPAY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCKLADGANCHEV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GANCHEV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCKLADQTY (OBEKTID INTEGER,
DEFCKLADID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
ISACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCKLADSTOCKACTIV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADSTOCKGROUPID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCLEARROWSSMETKANO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETCLOSEEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
SMETKANO INTEGER,
DTCLOSE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDBINFO (USERNAME VARCHAR(31) CHARACTER SET WIN1251,
OLDDBINFO VARCHAR(31) CHARACTER SET WIN1251,
DBINFO VARCHAR(31) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SETDEFCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDEFDANNIFIRMA (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDEFFISKALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDEFOBEKT (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDEFWEIGHTSCALE (DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETDISCOORDERSSMETKINOMER (ORDERNUMBER INTEGER,
SMETKINOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETFUTUREPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRSET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SETLOGSENDSALESEMAILDTSEND (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER,
DTSEND TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETLOTTERYSALESDTSEND (ID INTEGER,
OBEKTID INTEGER,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETMATERIALPACKAGE (OBEKTID INTEGER,
UCODE BIGINT,
PACUCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETPORTEXTTERMINALSTATUS (ID INTEGER,
OBEKTID INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSALESCKLADLOCKBONUSPOINT (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSALESCKLADLOTTERY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
LOTTERY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
MISTRALTCOLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSETINGSCALCNAL (CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSETTINGSLOGSAVEDATA (LOGSAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSETTINGSSAVEDATA (SAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETSETTINGSSAVEPOR (SAVEPOR CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEKSMETKIEARNESTBYVALUE (OBEKTID INTEGER,
SMETNOMER INTEGER,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEKSMETKIOFA_FIELDS (OBEKTID INTEGER,
SMETNOMER INTEGER,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEKSMETKIORDERSID (OBEKTID INTEGER,
SMETNOMER INTEGER,
ORDERSID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEKSMETKISTOCKATTRIBUTE (ID INTEGER,
OBEKTID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEMPDELIVERYNUM (LOCATIONID INTEGER,
NUM INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETUSERDEFMONEYIN (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SETUSERSDTLASTLOG (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SHOWARTBYSPECHIFIK (OBEKTID INTEGER,
INSPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (OUTSPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SPBRAKZAPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SPDELARTOTCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SPEDITARTINCKLAD (OLDOBEKTID INTEGER,
OLDARTNOMER INTEGER,
OLDCKLADID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
SALESARTNOMER INTEGER,
CANSALES CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SPPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE SPPERSONALFOODBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE STORNODOCTINCKLAD (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTACTION TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE STORNORAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE STORNOVLOJENOSTFROMBYPROD (OBEKTID INTEGER,
DOCTNO INTEGER,
TYPEDB SMALLINT,
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE STRROUND (NUMBER VARCHAR(30) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTNUMBER VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SUMRAZCRSUMA (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (SUMAINRAZCR DCURR,
SUMAOUTRAZCR DCURR,
SALDO DCURR)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE SYNCMONEYOPERKACA AS 
BEGIN EXIT; END ^
CREATE PROCEDURE TM_GETENTITYID RETURNS (ENTITYID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE TM_GETMISTRALORDERSTATUS (MISTRALORDERID INTEGER)
RETURNS (MISTRALORDERSTATUS DOUBLE PRECISION)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE TM_GETOPENTABLES RETURNS (TABLENUMBER INTEGER,
CLIENTNUMBER INTEGER,
MISTRALORDERID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE TM_GETTABLESTATUS (TABLENUMBER INTEGER)
RETURNS (CLIENTNUMBER INTEGER,
MISTRALORDERID INTEGER)
AS 
BEGIN SUSPEND; END ^
CREATE PROCEDURE UNLOCKALLARTBYMISTRALM (OBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UNLOCKGROUPBYMISTRALM (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEAREAINFO (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEARTIKUL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEARTIKULNAMESID (OLDID INTEGER,
NEWID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEARTIKULSPARTNO (ID INTEGER,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEBOXCKLAD (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEBYPRODKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADALTERDANGROUP (OBEKTID INTEGER,
UNIQUECODE BIGINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADARTIKUL1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL1 D_ARTIKULNAME)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORBACKSTOKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORDOCT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFOROUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBLOCKFORZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBYPARTNERSSUMFIELDS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
LASTDOCTPRICE DCURR,
LASTDOCTKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADBYPARTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADDANGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TYPEACTIONID SMALLINT,
TYPEDB SMALLINT,
DTACTION TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADLASTBRAKDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTBRAKDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADLASTOUTPRODDATE (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
LASTOUTPRODDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADLASTSALESDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTSALESDATE TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OPTQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADSALESCKLADBLOCKED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADTMPQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADTYPEARTIKULID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADTYPEMEASURE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADWEIGHT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NETWEIGHT DQTY,
GROSSWEIGHT DQTY,
MINKOLORDER DQTY,
PACKKOL DQTY,
TARAKOL DQTY,
TRANSPORTPACK DQTY,
TOLERANSKOL DQTY,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECKLADWORKQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WORKQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INCQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATECURRENCYTYPES (OBEKTID INTEGER,
OLDNAME VARCHAR(15) CHARACTER SET WIN1251,
NEWNAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDANGROUPNAME (OBEKTID INTEGER,
OLDDANGROUP CHAR(1) CHARACTER SET WIN1251,
NEWDANGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDANNIFIRMA (OLDID INTEGER,
OLDOBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDANNIFIRMAFAKTURANO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDANNIFIRMAINVOICENO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
INVOICENO NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDELARTOTVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDISCOUNTBYPACKACTIVE (ID INTEGER,
OBEKTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDOCBYDELIVERYID (OLDID INTEGER,
NEWID INTEGER,
DOCSUM DCURR,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDOCBYOUTPRODID (OLDID INTEGER,
NEWID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEFAKTURICANCEL (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEFIKPRICE (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEGROUPIDGRYPA (OBEKTID INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWGRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBERVALUESID INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATELOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMATDELIVERYDATE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMATERIAL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMATLASTEXEC (OBEKTID INTEGER,
EDITBYUSERID INTEGER,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMATPROPERTY (OBEKTID INTEGER,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
PACKAGEQTY DQTY,
TOLERANCE DQTY,
MINORDERQTY DQTY,
SPECIFICATION VARCHAR(40) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
MINKOL DQTY,
OPTIMALQTY DQTY,
COUNRTYORIGINID INTEGER,
DISCOUNTPERCENTAGE NUMERIC(6, 2),
EXPIRATIONDATE INTEGER,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(512) CHARACTER SET WIN1251,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UCODE BIGINT,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMONEYINNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(25) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEMONEYOPERKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEOBEKTI (OLDID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEOBEKTIID (OLDID INTEGER,
NEWID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEOBEKTIPATHDB (OBEKT VARCHAR(30) CHARACTER SET WIN1251,
PATHDB VARCHAR(255) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEOBEKTISMETKANO (OBEKTID INTEGER,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERGROUP (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERNOTE (OBEKTID INTEGER,
OLDNOMER INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERNOTEBYGROUPGRYPA (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERNOTEBYRECH (ID INTEGER,
OBEKTID INTEGER,
UCODE BIGINT,
ORDERNOTENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERNOTESDR (ID INTEGER,
OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERSSAVED (ID INTEGER,
OBEKTID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERSSDR (ID INTEGER,
OBEKTID INTEGER,
ORDERID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERSSDRSAVED (OBEKTID INTEGER,
ORDERID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERBONUSPOINT (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
BONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
TYPEDB SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERS (OBEKTID INTEGER,
EDITNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSEMPLOYEE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSNOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSSETINGS (OLDOBEKTID INTEGER,
EDITID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPARTNERSSTORE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPORMISTRALT (ID INTEGER,
OBEKTID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME1 SMALLINT,
DTSTARTCOOKING TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPOSSTATEPOSID (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251,
POSID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRICELISTNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRICELISTNAMESDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRICELISTPRICE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRINTETIKETIFROMPARTNERS (OBEKTID INTEGER,
PARTNERNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRINTETIKETIFROMPRODUCERS (OBEKTID INTEGER,
PRODUCERID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRINTOUTETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRODUCTIONREQUESTDOCTNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DOCTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPRODUCTIONREQUESTSTATUS (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
STATUS SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPROMOTIONBYQTY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEPROMOTIONSALESPRICE (OBEKTID INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERAZCRDOC (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERAZCRDTBACK (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
DTBACK TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERECH (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERECHDANGROUP (OBEKTID INTEGER,
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERECHSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERECHTYPEMEASURE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATERESERVEDARTIKULS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEREST_TABLES (ID INTEGER,
OBEKTID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALDOSKLADSETINGS (MAKESALDOSKLAD CHAR(1) CHARACTER SET WIN1251,
BEGININTERVAL TIMESTAMP,
ENDINTERVAL TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADACTIVEDATE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADARTNOMER (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADBLOCKED (OBEKTID INTEGER,
ARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADDESCRIPTION (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADELETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADLOCKBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADPERCNAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTERID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADTM_ACTIVE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESALESCKLADTM_SENDTO (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_SENDTO CHAR(1) CHARACTER SET WIN1251,
TM_SENDSALESPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESETINGSGROUPSMETKI (ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESETTINGSALIAS (TYPEPROGRAM SMALLINT,
OLDALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESETTINGSFIRMA (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKIBYDAYKOL (ID INTEGER,
KOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKIKACA (OBEKTID INTEGER,
NOMER INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKIPARTNERNOTE (OBEKTID INTEGER,
SMETKANO INTEGER,
TYPEDB SMALLINT,
PARTNERNOTE VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKIPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKISDRAVGPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
AVGPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKISDRDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
DOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKISDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESMETKISDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOCKBYATTRIBUTE (ID INTEGER,
OBEKTID INTEGER,
KOL DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTOREDMESSAGES (ID INTEGER,
OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESTREETINFO (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESYNCLOCKLASTACTIONNO (OBEKTID INTEGER,
LASTACTIONNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATES_MACHINE (ID INTEGER,
OBEKTID INTEGER,
S_TYPEMACHINEID INTEGER,
SERNOMER VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATES_TYPECONTRACTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEFPRICE DCURR,
DEFPERIOD SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATES_TYPEMACHINE (ID INTEGER,
OBEKTID INTEGER,
PRODUCERID INTEGER,
MODEL VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETAG (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKORDERSBYTEL (ID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKORDERSBYTELSDR (ID INTEGER,
OBEKTID INTEGER,
TEKORDERSBYTELNOMER INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
PRIK CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKORDERSBYTELSDRPOR (ID INTEGER,
OBEKTID INTEGER,
POR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKORDERSBYTELSTATUS (OBEKTID INTEGER,
NOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKICHAIR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PLACENUM INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIDISCOUNTBYPACKN (ID INTEGER,
OBEKTID INTEGER,
DISCOUNTBYPACKN INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIDOC (OBEKTID INTEGER,
SMETKANOMER INTEGER,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
DOCDATE DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIGODNODO (ID NUMERIC(18, 0),
OBEKTID INTEGER,
GODNODO DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIHOME (OBEKTID INTEGER,
ID NUMERIC(18, 0),
HOME CHAR(1) CHARACTER SET WIN1251,
HOMEROW CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIKLIENT (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIKOL (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKILASTEDITDATE (OBEKTID INTEGER,
SMETNOMER INTEGER,
LASTEDITDATE DOUBLE PRECISION)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIMRROWNO (OBEKTID INTEGER,
MACA INTEGER,
MRROWNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKINOTE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKINUMBERCLIENTS (OBEKTID INTEGER,
SMETNOMER INTEGER,
NUMBERCLIENTS INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIOPER (SMETNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
LASTEDITDATE DOUBLE PRECISION)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPARTNO (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPRINTETIKET (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPRINTPOR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PORNO INTEGER,
PORHOUR TIME)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPRINTSMETKA (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
DATEPRINTSMETKA TIMESTAMP,
SMETKANO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPROMBARCODE (OBEKTID INTEGER,
SMETNOMER INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKIPROMOTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKISALESPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
PRICEF DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
BEFTOBYQTYPID NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEKSMETKISERIALNUMBER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPDELIVERY (ID INTEGER,
OBEKTID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
DOCTDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPDELIVERYSDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPOUTPROD (OBEKTID INTEGER,
ID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
OUTPRODDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPOUTPRODSDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPOUTPRODZAOBEKT (OBEKTID INTEGER,
NOMER INTEGER,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPREVDTOPEN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPREVKOMKOL (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KOMKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
QTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPZAIAVKI (ID INTEGER,
OBEKTID INTEGER,
DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
USERSID INTEGER,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETEMPZAIAVKISDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEAREA (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEMEASURE (OLDNAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEMEASURECONV (ID INTEGER,
OBEKTID INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER,
QTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEMEASUREID (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPEPARTNERS (OLDTYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATETYPETRANSPORT (OLDNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEUSERSBYREST_TABLES (ID INTEGER,
OBEKTID INTEGER,
USERSID INTEGER,
REST_TABLESID INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEUSERSPASS (OBEKTID INTEGER,
CODE VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEUSERSPASS1 (OBEKTID INTEGER,
OLDPASS1 VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS1 VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEUSERSPOSITIONS (OBEKTID INTEGER,
OLDPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
NEWPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVERDB (VERDB INTEGER,
KOLDIG INTEGER,
CURRDIG INTEGER,
CURRMASK VARCHAR(10) CHARACTER SET WIN1251,
KOLMASK VARCHAR(10) CHARACTER SET WIN1251,
CALCNAD CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
ALLOWOTRKOL CHAR(1) CHARACTER SET WIN1251,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
DBSTATUS CHAR(1) CHARACTER SET WIN1251,
FIKPRICE CHAR(1) CHARACTER SET WIN1251,
FIFO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
MAJORVER INTEGER,
MINORVER INTEGER,
STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVERDBDETAIL (ID INTEGER,
OBJECTTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(100) CHARACTER SET WIN1251,
VERNO INTEGER,
FROMDATE DATE)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVEZNI (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVEZNIEXTINFO (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVEZNINAMES (OBEKTID INTEGER,
OLDID NUMERIC(18, 0),
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEVEZNISTATUS (STATUS CHAR(1) CHARACTER SET WIN1251,
DTSTATUSUPDATE TIMESTAMP,
OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEZAG (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDATEZAIAVKISUPPLY (ZAIAVKANOMER INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
SUPPLY CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRAVG_PRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBACKSTOKISDRLAST_PRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKCHRCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBRAKSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDCKLADDEFPARTNERNOMER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDDOCBYDELIVERYMISTRALEXPORT (ID INTEGER,
MISTRALEXPORT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDFUTUREPRICE (OBEKTID INTEGER,
OLDPRICELISTID DID,
OLDARTNOMER INTEGER,
OLDDTSTART TIMESTAMP,
OLDPRICE DCURR,
NEWPRICELISTID DID,
NEWARTNOMER INTEGER,
NEWDTSTART TIMESTAMP,
NEWPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDHTTPORDERSSTATUS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDLOCKGETARTIKULNAL AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDLOGSENDTO_OFA_STATUS (OBEKTID INTEGER,
SMETKANO INTEGER,
STATUS SMALLINT,
DTSEND TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOBEKTILOGCKLADQTY (OBEKTID INTEGER,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOUTPRODSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOUTPRODSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOUTPRODSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOUTPRODSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDOUTPRODSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPARTNERSSETINGSKARTAV_TO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICE1 DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPFSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPORCOUNTERS (ID INTEGER,
OBEKTID INTEGER,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRICELISTLOADFROMPRLIST (ID NUMERIC(18, 0),
OBEKTID INTEGER,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTOUTPRODNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
OUTPRODNOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTSDREDPRICE (ID INTEGER,
OBEKTID INTEGER,
EDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTSDRPARTNO (ID INTEGER,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTSDRPR_COST (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONCOST DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTSDRPR_EDPR (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONEDPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPRODUCTIONREQUESTSDRP_QTY (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONQTY DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDPROMBARCODES (OBEKTID INTEGER,
OLDPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
NEWPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDRECHWEIGHTSCALENAME (OBEKTID INTEGER,
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSALESCKLADEXTRAMERED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSALESCKLADFISKALPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
FISKALPRINTERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSALESCKLADPRINTER1ID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTER1ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSALESCKLADPRINTORDER (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
OLDSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
NEWSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSECURITYROLE (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSETTINGSUPDATEARTIKULNAMES (UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSMETKISDRAVGPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
AVGPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDSMETKISDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKORDERSBYTELDTPORREADY (OBEKTID INTEGER,
NOMER INTEGER,
DTPORREADY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKORDERSBYTELDTPRINTPOR (OBEKTID INTEGER,
NOMER INTEGER,
DTPRINTPOR TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKORDERSBYTELD_USER (OBEKTID INTEGER,
NOMER INTEGER,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKORDERSBYTELSDRPRIK (ID INTEGER,
OBEKTID INTEGER,
PRIK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIDELIV (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DELIV CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIINVINFO (OBEKTID INTEGER,
SMETNOMER INTEGER,
INVTYPE INTEGER,
INVPAYMENT INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIOFA_APPLYDISCOUNT (OBEKTID INTEGER,
ID INTEGER,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIPRICEF (ID INTEGER,
OBEKTID INTEGER,
PRICEF DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIPRINTDOC (OBEKTID INTEGER,
SMETKANOMER INTEGER,
PRINTDOC CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIPRINTPOR1 (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIPROMPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PROMPRICE CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKISENDTOGEOVISION (OBEKTID INTEGER,
ID NUMERIC(18, 0),
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEKSMETKIWEIGHT (ID NUMERIC(18, 0),
OBEKTID INTEGER,
WEIGHT DQTY)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPBACKSTOKI (ID INTEGER,
OBEKTID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPBACKSTOKISDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPDELIVERYSDRSER_NUMBER (ID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPDEL_SDRFROMZAIAVAKNOMER (ID INTEGER,
FROMZAIAVKANOMER INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTEMPOUTPRODSDRSERIALNUMBER (ID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPDWEIGHTSCALES (OBEKTID INTEGER,
OLDSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
NEWSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
NEWSCALETYPE SMALLINT,
NEWPORTNO INTEGER)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE UPOUTPRODSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
BEGIN EXIT; END ^
CREATE PROCEDURE VLOJENOSTARTCANEDIT (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CHRCANEDIT CHAR(1) CHARACTER SET WIN1251)
AS 
BEGIN SUSPEND; END ^

ALTER PROCEDURE ADDOPENRECHSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
RECHSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ADDREVGOTOVIPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
ONLYCHECKPROD CHAR(1) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE ADDVALUEBYHOURS (TSHOUR SMALLINT,
ADDVALUE NUMERIC(10, 4),
P0_1 NUMERIC(10, 4),
P1_2 NUMERIC(10, 4),
P2_3 NUMERIC(10, 4),
P3_4 NUMERIC(10, 4),
P4_5 NUMERIC(10, 4),
P5_6 NUMERIC(10, 4),
P6_7 NUMERIC(10, 4),
P7_8 NUMERIC(10, 4),
P8_9 NUMERIC(10, 4),
P9_10 NUMERIC(10, 4),
P10_11 NUMERIC(10, 4),
P11_12 NUMERIC(10, 4),
P12_13 NUMERIC(10, 4),
P13_14 NUMERIC(10, 4),
P14_15 NUMERIC(10, 4),
P15_16 NUMERIC(10, 4),
P16_17 NUMERIC(10, 4),
P17_18 NUMERIC(10, 4),
P18_19 NUMERIC(10, 4),
P19_20 NUMERIC(10, 4),
P20_21 NUMERIC(10, 4),
P21_22 NUMERIC(10, 4),
P22_23 NUMERIC(10, 4),
P23_24 NUMERIC(10, 4))
RETURNS (O_P0_1 NUMERIC(10, 4),
O_P1_2 NUMERIC(10, 4),
O_P2_3 NUMERIC(10, 4),
O_P3_4 NUMERIC(10, 4),
O_P4_5 NUMERIC(10, 4),
O_P5_6 NUMERIC(10, 4),
O_P6_7 NUMERIC(10, 4),
O_P7_8 NUMERIC(10, 4),
O_P8_9 NUMERIC(10, 4),
O_P9_10 NUMERIC(10, 4),
O_P10_11 NUMERIC(10, 4),
O_P11_12 NUMERIC(10, 4),
O_P12_13 NUMERIC(10, 4),
O_P13_14 NUMERIC(10, 4),
O_P14_15 NUMERIC(10, 4),
O_P15_16 NUMERIC(10, 4),
O_P16_17 NUMERIC(10, 4),
O_P17_18 NUMERIC(10, 4),
O_P18_19 NUMERIC(10, 4),
O_P19_20 NUMERIC(10, 4),
O_P20_21 NUMERIC(10, 4),
O_P21_22 NUMERIC(10, 4),
O_P22_23 NUMERIC(10, 4),
O_P23_24 NUMERIC(10, 4))
AS 
 ^

ALTER PROCEDURE ARTINVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ATTACHTOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE AUTOACCOUNTMONEYIN (OBEKTID INTEGER,
USERID NUMERIC(18, 0),
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE AVGINCOMEOUTGO (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
RETURNS (AVGINCOME DQTY,
AVGOUTGO DQTY,
AVGSALES DQTY,
AVGBRAK DQTY,
AVGOUTSTOKI DQTY,
AVGBACKSTOKI DQTY,
AVGDOCT DQTY,
SUMSALES DQTY,
SUMDOCT DQTY,
SUMZAIAVKI DQTY,
SUMBRAK DQTY,
SUMOUTSTOKI DQTY,
SUMBACKSTOKI DQTY,
SUMASALES DCURR,
SUMADOCT DCURR,
SUMABRAK DCURR,
SUMAOUTSTOKI DCURR,
SUMABACKSTOKI DCURR,
SUMAZAIAVKI DCURR,
SUMREVRAZKOL DQTY,
SUMREVRAZLV DCURR,
AVGREVRAZKOL DQTY)
AS 
 ^

ALTER PROCEDURE CALCANDROUND (TYPEOPER VARCHAR(1) CHARACTER SET WIN1251,
NUMBER1 VARCHAR(15) CHARACTER SET WIN1251,
NUMBER2 VARCHAR(15) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTVALUE VARCHAR(15) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CALCCKLADQTYBYDATE (DTDATE TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADKOL DQTY)
RETURNS (QTYBYDATE DQTY)
AS 
 ^

ALTER PROCEDURE CALCHOURANDMIN (INTMINUTES INTEGER)
RETURNS (HOURANDMIN VARCHAR(8) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CANCELEARNEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTCANCEL TIMESTAMP,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
EARNESTSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKALLBOXCKLADCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE CHECKALLCKLADCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
KINDTYPE INTEGER)
AS 
 ^

ALTER PROCEDURE CHECKALLRECHCANSALES RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE CHECKAVGPRICE (OBEKTID INTEGER,
UCODE BIGINT)
RETURNS (OTUCODE BIGINT)
AS 
 ^

ALTER PROCEDURE CHECKAVGPRICESTORAGE (OBEKTID INTEGER,
STORAGEID INTEGER)
RETURNS (OTUARTNOMER BIGINT)
AS 
 ^

ALTER PROCEDURE CHECKCKLADCANSALESSALESARTNOMER AS 
 ^

ALTER PROCEDURE CHECKCKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
KOL DQTY)
RETURNS (RESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKCKLADSALESARTNOMER AS 
 ^

ALTER PROCEDURE CHECKCKLADSALESCKLAD RETURNS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
TYPEACTION SMALLINT)
AS 
 ^

ALTER PROCEDURE CHECKDEFPRICELISTSALESCKLAD RETURNS (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CHECKH_COUNTRYUNIQUEINDEX (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKLOGDATA (LOGDATA VARCHAR(5000) CHARACTER SET WIN1251,
SYSCHAR1 CHAR(1) CHARACTER SET WIN1251,
SYSCHAR2 CHAR(1) CHARACTER SET WIN1251,
SYSCHAR3 CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTLOGDATA VARCHAR(5000) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKOLDNOSMETKANO AS 
 ^

ALTER PROCEDURE CHECKPARENTGROUPNAME (OBEKTID INTEGER,
GROUPNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER)
RETURNS (HASRAZCR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKPRICELISTUNIQUE1 RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CHECKREFPRICELISTNAMESPRICELIST AS 
 ^

ALTER PROCEDURE CHECKSALESCKLAD RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CHECKSALESCKLADCKLADARTNOMER RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
ARTNOMER INTEGER,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKSTOCKATTRIBUTENULL (INSTOCKATTRIBUTE01_ID INTEGER,
INSTOCKATTRIBUTE02_ID INTEGER,
INSTOCKATTRIBUTE03_ID INTEGER,
INSTOCKATTRIBUTE04_ID INTEGER,
INSTOCKATTRIBUTE05_ID INTEGER)
RETURNS (OUTSTOCKATTRIBUTE01_ID INTEGER,
OUTSTOCKATTRIBUTE02_ID INTEGER,
OUTSTOCKATTRIBUTE03_ID INTEGER,
OUTSTOCKATTRIBUTE04_ID INTEGER,
OUTSTOCKATTRIBUTE05_ID INTEGER)
AS 
 ^

ALTER PROCEDURE CHECKTIMEDAYACTIVE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CHECKUSERFORTABLENO (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CKLADDELARTOTRECH (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CKLADDELARTOTZAG (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CLEARATTACHCKLAD (OBEKTID INTEGER,
CKLADID DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLEAREXPORTHISTORY (OBEKTID INTEGER,
FIRSTID NUMERIC(18, 0),
LASTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE CLEARLOGCKLADQTY AS 
 ^

ALTER PROCEDURE CLEARMISTRALMREVIZIA (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE CLEARNULLARTFROMTEKSMETKI (OBEKTID INTEGER,
SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CLEAROLDARTIKULNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE CLEARPARTNERSKARTA (OBEKTID INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLEARPARTNERSSETTINGSSUMSALES AS 
 ^

ALTER PROCEDURE CLEARSMETKADEBITNOSALDO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
DTDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLEARTESTSMETKI (CHRDEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLOSEEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLOSELOGSYNC (ID INTEGER,
DTSTOP TIMESTAMP,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE CLOSEOPENRECH (OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COPYCKLAD (INOBEKTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
TOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
COPYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COPYCKLADINSTOCKBYATTRIBUTE AS 
 ^

ALTER PROCEDURE COPYCKLADROW (INOBEKTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
COPYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COPYDEFPRICELISTNAMES (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE COPYRECH (OBEKTID INTEGER,
FROMARTNOMER INTEGER,
FROMOTCKLADID NUMERIC(18, 0),
TOARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COPYRECHFROMTO (OBEKTID INTEGER,
STARTARTNOMER INTEGER,
STOPARTNOMER INTEGER,
FROMOTCKLADID NUMERIC(18, 0),
TOARTNOMER INTEGER,
TOCKLADID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COPYREPORTPERM (OBEKTID INTEGER,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TOUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE COUNTARTIKULSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER)
RETURNS (COUNTSERIALNUMBER INTEGER)
AS 
 ^

ALTER PROCEDURE COUNTREGDO RETURNS (COUNTDO INTEGER)
AS 
 ^

ALTER PROCEDURE COUNTSMETKIWITHTO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
OPER VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (SMETKIWITHTO INTEGER)
AS 
 ^

ALTER PROCEDURE COUNTVLOJENOSTSDRART (OBEKTID INTEGER,
VLOJENOSTCKLADID NUMERIC(18, 0),
VLOJENOSTARTNOMER INTEGER)
RETURNS (COUNTSDRART INTEGER)
AS 
 ^

ALTER PROCEDURE CREATELOGCKLADQTY (TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DECODEGROUP (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPAS VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DECODEINOBEKTIID (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELARTOTBOXCKLADSDR (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELBROCHURE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELCKLADSTOCKGROUP1 (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELCLEARROWS (DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
AS 
 ^

ALTER PROCEDURE DELDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELDAILYMENUBYDATE (OBEKTID INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELDAILYMENUBYNUM (OBEKTID INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEALLDANNIFIRMA (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEALLTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEBARCODEMASK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEDISCOUNTBYHOURS (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFAKTURANOMER (OBEKTID INTEGER,
FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMAREAINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMARTIKULSPARTNO (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMBOXCKLADDYNAMICSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMBOXCKLADSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMBYPROD (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT)
AS 
 ^

ALTER PROCEDURE DELETEFROMCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMDANGROUP (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMDANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE DELETEFROMFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMOPENMISTRALM (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERNOTEBYRECH (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMORDERSSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE DELETEFROMPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMPOSSTATE (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DELFROMDEFPRICELIST CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMPROMTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMRATES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMRAZXODI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMREPORTPERM1 (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMREST_TABLES (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSETTINGSALIAS (TYPEPROGRAM SMALLINT,
ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE DELETEFROMSMETKIBYDATE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
AS 
 ^

ALTER PROCEDURE DELETEFROMSMETKIBYDATE1 (DATEOT DATE,
DATEDO DATE)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOCKBYATTRIBUTE (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTOREDMESSAGES (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMSTREETINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMSYNCLOCK (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEKORDERSBYTEL (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEKORDERSBYTELSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPDELIVERYSDR (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPOUTPRODSDR (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPREV (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPREVBYUSERNAME (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPVLOJENOSTSDR1 (TYPEDB SMALLINT,
OBEKTID INTEGER,
TEMPVLOJENOSTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPZAIAVKI (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTEMPZAIAVKISDR (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTYPEAREA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTYPEMEASURECONV (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMTYPEPARTNERS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMTYPETRANSPORT (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMUSERSBYREST_TABLES (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMUSERSBYREST_TABLES1 (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEFROMVERDBDETAIL (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEFROMZAIAVKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEOBEKTI (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETEORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPARTNERSTYPEPARTNER (OBEKTID INTEGER,
TYPEPARTNERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPERMPOS (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPRICELISTNAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEPROMOTIONSALESPRICE (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE DELETERECHSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETERESERVEDARTIKULS (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETESMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
REPORTINGDATE DATE,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETES_MACHINE (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETES_TYPECONTRACTS (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETES_TYPEMACHINE (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELETETAG (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETETEMPOUTPROD (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETETEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELETETMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETETYPEMEASURE (NAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEUSERSBYPASS (OBEKTID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELETEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELFROMBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELFROMCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELFROMLOGCHANGES (OBEKTID INTEGER,
ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE DELFROMOBEKTIOPENRECH (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELFROMPARTNERSEMPLOYEE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELFROMPARTNERSSTORE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELFROMVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE DELLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELMISTRALMZAIAVKI (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELOLDARTIKULNAMES (ID INTEGER)
AS 
 ^

ALTER PROCEDURE DELPARTNERSSETINGS (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELPORSDR (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELPRICELISTARTNOMER (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELPRINTER (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELRECH (OBEKTID INTEGER,
RECHNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELREVIZIA (REVNO INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE DELROWFROMTEKSMETKA (OBEKTID INTEGER,
ROWID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE DELSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELSTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELTEKSMETKA (OBEKTID INTEGER,
SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELTEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE DELTEMPBACKSTOKISDR (ID INTEGER,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELTEMPFAKTURINOMER (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE DELTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELVEZNINAMES (OBEKTID INTEGER,
ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE DELWEIGHTSCALES (OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DELZAG (OBEKTID INTEGER,
ZAGNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE DROPACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE EDITARTINBOXCKLADSDR (OBEKTID INTEGER,
ID INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITARTINRECHSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE EDITARTINSALESCKLAD (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 0),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITARTINVLOJENOSTSDR (OBEKTID INTEGER,
ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE EDITARTINZAGSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE EDITCKLAD (OBEKTID INTEGER,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITGRYPANAME (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITLOCATIONGROUP (LOCATIONID INTEGER,
DBLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
GROUPNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
PARTNERLOCATIONNUM INTEGER,
CHRMODE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITPRINTER (OBEKTID INTEGER,
OLDPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITRAZXOD (OBEKTID INTEGER,
OLDRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
NEWRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE EDITSMETKIDOC (OBEKTID INTEGER,
NOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE)
AS 
 ^

ALTER PROCEDURE EMPTYPOR ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ENCODEGROUP (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (GROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMBOXCKLAD (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
KOL DQTY,
SALESPRICE DCURR,
LASTDOCTPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMRAZFASOVKI (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMRECH (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMSPECHIFIK (OBEKTID INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDARTFROMZAG (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE FINDARTIKUL1NAMESID (ARTIKUL1 D_ARTIKULNAME,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDARTIKULID (ARTIKUL D_ARTIKULNAME,
SAVEARTIKUL CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDARTIKULPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
SALEQTY DQTY,
ID NUMERIC(18, 0),
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDBARCODE (OBEKTID INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE FINDBARCODECODESID (CODE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDBOXCKLADSDRART (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDBYLSTATNAMESID (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDCKLADNAMESID (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDDANNIFIRMANAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDDDSNONAMESID (DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDDOCBYDELIVERY (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDDOCBYDELIVERYID (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDDOCBYOUTPRODID (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDDOCTNOMERINPR_REQUEST (OBEKTID INTEGER,
DOCTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDDOCTYPENAMESID (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDFAKTURANOMER (FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE FINDFISKALPRINTERNAMESID (NAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDH_COUNTRYNAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDMONEYINNAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDNOTESNOTEID (NOTE VARCHAR(30) CHARACTER SET WIN1251,
SAVENOTE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDOBEKTINAMESID (OBEKT VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDOLDARTIKULNAME (ARTIKULNAME D_ARTIKULNAME,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDORDERNOTENOTESID (NOTE VARCHAR(250) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER)
RETURNS (FINDSDR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDOUTPRODNOMERINPR_REQUEST (OBEKTID INTEGER,
OUTPRODNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDPARTNERBYKARTA (OBEKTID INTEGER,
KARTAID VARCHAR(60) CHARACTER SET WIN1251)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
KARTAVALIDITYDAYS SMALLINT)
AS 
 ^

ALTER PROCEDURE FINDPARTNEREMPLOYEENAMESID (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPARTNERNAMESID (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSEMPLOYEEBYNOMER (INOBEKTID INTEGER,
INNOMER VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSEMPLOYEEBYTEL (INOBEKTID INTEGER,
INTEL VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSEMPLOYEEEGNID (EGN VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSNOTEID (PARTNERNOTE D_PARTNERSNOTE,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSSHORTNAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPARTNERSTORENAMESID (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDPRICENAMESID (PRICENAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPRINTERNAMESID (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPRODUCERNAMESID (PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDPROMBARCODE (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDRECHSDRART (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDREST_TABLESNO (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDROWINSALESCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDROWPERCPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
CUSTCOUNT INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDSALESARTIKUL (OBEKTID INTEGER,
ARTNOMER INTEGER,
INPRICELISTID NUMERIC(18, 0),
ACTIVEPRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
SALESPRICE DCURR,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
ARTIKUL1 D_ARTIKULNAME,
PRICELISTID NUMERIC(18, 0),
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFQTY DQTY,
TAX DCURR,
PERCTO NUMERIC(6, 4),
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BOXCKLADDYNAMIC CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
DEFFISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRBONUSPOINTFORSALES INTEGER,
GRPRICEBYBONUSPOINT INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
COOKINGTIME SMALLINT,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCI_DISCOUNTCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMOTIONSALESPRICEID INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
LOTTERY CHAR(1) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRPRICELISTID NUMERIC(18, 0),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
UNIQUECODE BIGINT,
VATA CHAR(1) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
CATEGORINOTE VARCHAR(100) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDSERIALNUMBERVALUESID (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSPECHIFIKNAMESID (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
SAVESPECHIFIK CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MATERIALATTRIBUTE1 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE2 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE3 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE4 VARCHAR(25) CHARACTER SET WIN1251,
MATERIALATTRIBUTE5 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE01NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE02NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE03NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE04NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKATTRIBUTE05NAMESID (NAME VARCHAR(25) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSTOCKGROUPID (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
SAVEGROUPNAME CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDSYXRANENIENAMESID (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTEKSMETKIMRROWNO (OBEKTID INTEGER,
MACA INTEGER,
MRROWNO INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDTEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDTEMPREVGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDTEMPREVROW (TEMPREVID DID,
OBEKTID INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDTYPEARTIKULNAMESID (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTYPEDOCTNAMESID (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTYPEMEASUREID (OBEKTID INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (TYPEMEASUREID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTYPEMEASURENAMEID (NAME VARCHAR(10) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTYPEPARTNERSNAMESID (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDTYPETRANSPORTID (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDUSERNAMESID (NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDUSERPERMPOS (OBEKTID INTEGER,
SECURITYROLEID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDUSERPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FINDUSERPOSITIONSNAMESID (POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE FINDVLOJENOSTSDRART (OBEKTID INTEGER,
VLOJENOSTCKLADID NUMERIC(18, 0),
VLOJENOSTARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE FREEARTNOMERINCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEARTNOMERINRECH (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEARTNOMERINSALESCKLAD (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEARTNOMERINZAG (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEMACAINTEKSMETKI (OBEKTID INTEGER,
MINNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MACANOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREENOMERINGROUPID (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (GROUPNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEORDERNOTENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (ORDERNOTENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEPARTNEREMPLOYEENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEPARTNERNOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNERNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEPARTNERSTORENOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PARTNERSTORENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE FREEPLUINVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
MINNOMER INTEGER)
RETURNS (PLU INTEGER)
AS 
 ^

ALTER PROCEDURE FREEPRODUCERNOMER (OBEKTID INTEGER,
MINNOMER INTEGER)
RETURNS (PRODUCERNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETACTIONSTYPENAME (ACTIONID SMALLINT)
RETURNS (ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETACTIVEPRICELIST (OBEKTID INTEGER)
RETURNS (PRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETACTIVEPRICELISTSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETALLRECH (OBEKTID INTEGER)
RETURNS (RECHSDRID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
EXPIRATIONDATE INTEGER)
AS 
 ^

ALTER PROCEDURE GETAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
AREAINFOID INTEGER,
STREETINFOID INTEGER)
AS 
 ^

ALTER PROCEDURE GETAREAINFOID (OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETARTIKUL1NAMESARTIKUL1 (ID INTEGER)
RETURNS (ARTIKUL1 D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETARTIKULBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULDOCTAVNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULFIELDS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DEFQTY DQTY,
DANGROUPID INTEGER,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTDELIVERYDATE TIMESTAMP,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
KINDTYPE INTEGER,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULFIELDSL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DEFQTY DQTY,
DANGROUPID INTEGER,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PRODUCTIONCOST DCURR,
MINQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTDELIVERYDATE TIMESTAMP,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULMAINDOCTAV (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULNAL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (NAL DCURR)
AS 
 ^

ALTER PROCEDURE GETARTIKULNAME (ARTIKULID INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETARTIKULPARTNO (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTIKULREVIZIA (OBEKTID INTEGER,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKULNAME D_ARTIKULNAME)
RETURNS (REVNO INTEGER,
DATEREV TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR)
AS 
 ^

ALTER PROCEDURE GETARTIKULSBYGROUP (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
SALENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETARTIKULSERIALNUMBERS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTINRECHINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (RECHSDRID INTEGER,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
OTNETKOL DQTY,
STORNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTINVLOJENOSTINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (VLOJENOSTSDRID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE GETARTINZAGINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (ZAGSDRID INTEGER,
NOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE GETARTNALBYDATE (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTDATE TIMESTAMP)
RETURNS (NALBYDATE DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTNALBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE GETARTNALBYPERIOD (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (FROMKOL DQTY,
FROMAVGPRICE DCURR,
SUMINKOL DQTY,
AVGINPRICE DCURR,
SUMOUTKOL DQTY,
AVGOUTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETARTPROMOTION (INOBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
FROMHOUR TIME,
TOHOUR TIME,
ID INTEGER,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMOTION INTEGER)
AS 
 ^

ALTER PROCEDURE GETARTPROMOTIONBYQTY (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETARTSALESPRICES (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBARCODECODESCODE (ID INTEGER)
RETURNS (CODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBLOCKARTIKULSINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
CANSALES CHAR(1) CHARACTER SET WIN1251,
CANDELIVERY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
RETURNS (BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER)
AS 
 ^

ALTER PROCEDURE GETBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER)
RETURNS (POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBONUSPOINTBYOBOR1 (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBONUSPOINTBYOBORID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETBONUSPOINTBYOBORNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBOXCKLAD (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
SHOWRECHSDR CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADDYNAMICSDR (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DANGROUPID INTEGER)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADDYNAMICSDR1 (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (DYNAMICSDR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
BOXCKLADARTNOMER INTEGER,
STORAGEID DID)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DKOL)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADDYNAMICSDRINFO1 (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
STORAGEID DID,
ALLROW CHAR(1) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BOXCKLADDYNAMICSDRID INTEGER,
DINSTOREID INTEGER,
QTY DKOL)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETBOXCKLADNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADSDR (OBEKTID INTEGER,
INARTNOMER INTEGER,
STORAGEID INTEGER)
RETURNS (BOXCKLADSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTNETKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
DOTCKLADID NUMERIC(18, 0),
DOTARTNOMER BIGINT,
DOTARTIKUL D_ARTIKULNAME,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251,
UCODECONTENT BIGINT,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE GETBOXCKLADSDR2 (OBEKTID INTEGER,
INARTNOMER INTEGER,
STORAGEID INTEGER)
RETURNS (BOXCKLADSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTNETKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
DOTCKLADID NUMERIC(18, 0),
DOTARTNOMER BIGINT,
DOTARTIKUL D_ARTIKULNAME,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBYLSTATNAMESBYLSTAT (ID INTEGER)
RETURNS (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETBYPRODVLOJENOSTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (VLOJENOSTCKLAD VARCHAR(20) CHARACTER SET WIN1251,
VLOJENOSTARTNOMER INTEGER,
VLOJENOSTARTIKUL D_ARTIKULNAME,
VLOJENOSTKOL DQTY,
VLOJENOSTPARTNO VARCHAR(20) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
DEFKOL DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADARTIKUL (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETCKLADAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADBYPARTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CKLADBYPART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CKLADSTOCKGROUPID INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADDOCPRODUCER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADEXPIRATIONDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (EXPIRATIONDATE INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADID (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETCKLADIDBYTYPE (OBEKTID INTEGER,
TNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETCKLADKOL (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (KOL DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADKOL1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (KOL DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADLASTDOCTPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADLASTREVDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER BIGINT)
RETURNS (LASTREVDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETCKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (MINKOL DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADMINQTYFROMSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (MINQTY DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADNAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADNAMES (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ATTACHTOCKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETCKLADNAMESCKLADNAME (ID INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADOLDAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADOLDAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADOLDAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OLDAVGPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OPTQTY DQTY)
AS 
 ^

ALTER PROCEDURE GETCKLADSALESARTNOMER (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER)
RETURNS (SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADSALESPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETCKLADSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADSTOCKGROUPID (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADSTOCKGROUPNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADSTOCKGROUPNOTE (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADTYPE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (TABLENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCKLADTYPEMEASUREID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (TYPEMEASUREID INTEGER)
AS 
 ^

ALTER PROCEDURE GETCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETCURRENCYTYPESID (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETCURRENCYTYPESNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(15) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDAILYMENU (OBEKTID INTEGER,
NUM INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
NAL DQTY,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
MENUBLOCKED INTEGER,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETDANGROUP (ID INTEGER,
OBEKTID INTEGER)
RETURNS (DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE GETDANGROUPID (DANGROUP CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETDANGROUPTAX (OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (TAX DCURR)
AS 
 ^

ALTER PROCEDURE GETDANNIFIRMABYDEPNO (OBEKTID INTEGER,
DEPNO INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDANNIFIRMAFAKTURANO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (FAKTURANO NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETDANNIFIRMAINVOICENO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (INVOICENO NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETDANNIFIRMANAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDDSNONAMESDDSNO (ID INTEGER)
RETURNS (DDSNO VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFAULTPRICELISTID (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETDEFAULTSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETDEFCURRENCY (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFDANGROUP (INOBEKTID INTEGER)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE GETDEFDANNIFIRMANAME (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFFISKALPRINTER (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFOBEKT RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFOBEKTID RETURNS (ID INTEGER,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFPARTNERNAMEFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFUSERMONEYIN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDEFWEIGHTSCALE RETURNS (DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDISCOUNTBYHOURS (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID INTEGER,
PRICELISTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDISCOUNTBYHOURSPRICELISTID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETDISCOUNTBYPACK (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESARTNOMER1 INTEGER,
SALESPRICE1 DCURR,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
SALESPRICE2 DCURR,
PRICELISTID2 NUMERIC(18, 0),
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDISCOUNTBYSALES (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE GETDOCTDATEDOCT (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER)
RETURNS (DATEDOCT TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETDOCTYPENAMESDOCTYPE (ID INTEGER)
RETURNS (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
DTACTIVEFROM TIMESTAMP)
RETURNS (DOCTPRICE DCURR,
ID INTEGER,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETDO_OBEKTID RETURNS (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE GETEARNESTDTSAVE (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (DTSAVE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETETIKETIFIELDS (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
PLU INTEGER,
ARTIKUL1 D_ARTIKULNAME,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMFROMDATE TIMESTAMP,
PROMTODATE TIMESTAMP,
PROMFROMHOUR TIME,
PROMTOHOUR TIME,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
NAL DQTY,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
NET DQTY,
GROSS DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
ESLID VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFAKTURACONTENT (INOBEKTID INTEGER,
INTYPEDB SMALLINT,
FAKTURINOMER INTEGER)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
FROMDOCNOMER NUMERIC(18, 0),
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFAKTURIINFO (FNOMER NUMERIC(18, 0))
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEFAK DATE,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(50) CHARACTER SET WIN1251,
DATETIMESAVE TIMESTAMP,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
ACTIONID SMALLINT)
AS 
 ^

ALTER PROCEDURE GETFIFOPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETFIFOPRICECKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TEKSMETKIKOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETFIFOPRICERECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY,
TEKSMETKIKOL DQTY)
RETURNS (FIFOPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETFIRMAFISKALPRINTERS (OBEKTID INTEGER,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFIRSTBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFIRSTBARCODEBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFIRSTMACABYOPER (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (MACA INTEGER)
AS 
 ^

ALTER PROCEDURE GETFISCALNUM (FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
DEFSALENUM INTEGER,
INCNUM CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEXTSALENUM INTEGER)
AS 
 ^

ALTER PROCEDURE GETFISCALPRINTERID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETFISKALPRINTERNAME (ID INTEGER,
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFISKALPRINTERNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFISKALPRINTERSFIRMA (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251)
RETURNS (FSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETFUTUREPRICE (OBEKTID INTEGER)
RETURNS (PRICELISTID DID,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DTSTART TIMESTAMP,
PRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETGROUPCODE (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PARENTGROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GROUPCODE VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGROUPIDDECODEGRYPA (OBEKTID INTEGER,
INGRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
DECODEGRYPA VARCHAR(255) CHARACTER SET WIN1251,
ORDERGRYPA VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGROUPIDNAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGROUPIDNOTE (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGROUPIDROW (INOBEKTID INTEGER,
INGRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETGRYPAFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETHTTPORDERS (OBEKTID INTEGER,
STATUS SMALLINT)
RETURNS (HTTPORDERSID INTEGER,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
HTTPORDERSSDRID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
TYPEDB SMALLINT,
ORDERPAYMENT INTEGER,
ORDERPAYMENTSTR VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETHTTPORDERSORDERNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
RETURNS (ORDERNUMBER INTEGER)
AS 
 ^

ALTER PROCEDURE GETH_COUNTRYID (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SAVE CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETH_COUNTRYNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETH_COUNTRYNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETINFOMACA (OBEKTID INTEGER,
INMACANO INTEGER)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
TIMEOPEN TIME,
SUMSMETKA DCURR,
LASTOPEN TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETINOBEKTIID RETURNS (INOBEKTIID D_INOBEKTIID)
AS 
 ^

ALTER PROCEDURE GETITEMSINFOTM (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
PROMOTIONPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETLASTARTIKULPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETLASTARTIKULPARTNOISNOPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETLASTOLDARTIKULNAME (OLDID INTEGER,
OLDOBEKTID INTEGER,
OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OLDARTIKULNAME D_ARTIKULNAME)
RETURNS (NEWID INTEGER,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETLOGCKLADINQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMINQTY DQTY,
AVGINAVGPRICE DCURR,
AVGINLASTDOCTPRICE DCURR,
AVGINAVGPRICE1 DCURR,
AVGINLASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE GETLOGCKLADOUTQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMOUTQTY DQTY,
AVGOUTAVGPRICE DCURR,
AVGOUTLASTDOCTPRICE DCURR,
AVGOUTAVGPRICE1 DCURR,
AVGOUTLASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE GETLOGCKLADQTYARTADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SUMDOCTKOL DQTY,
SUMDOCTPRICE DCURR,
SUMSALESKOL DQTY,
SUMSALESPRICE DCURR,
SUMOUTKOL DQTY,
SUMOUTKOLPRICE DCURR,
SUMREVKOL DQTY,
SUMREVPRICE DCURR,
SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKAPRICE DCURR,
SUMIZKONSIGKOL DQTY,
SUMIZKONSIGPRICE DCURR,
SUMVLOJENOSTKOL DQTY,
SUMVLOJENOSTPRICE DCURR,
SUMBRAKKOL DQTY,
SUMBRAKPRICE DCURR,
SUMPFKOL DQTY,
SUMPFPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETLOGCKLADQTYPRICEINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP)
RETURNS (AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DEFSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETLOGSENDTO_OFA (OBEKTID INTEGER,
STATUS SMALLINT)
RETURNS (ID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETLOGSYNCNO (OBEKTID INTEGER)
RETURNS (LOGSYNCNO INTEGER)
AS 
 ^

ALTER PROCEDURE GETLOTTERYSALESFORSEND (OBEKTID INTEGER,
TYPEDB SMALLINT)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER)
AS 
 ^

ALTER PROCEDURE GETMISTRALMZAIAVKI RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMISTRALMZAIAVKISDR (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMONEYINAUTOACCOUNTCOUNT (OBEKTID INTEGER,
USERID NUMERIC(18, 0))
RETURNS (INTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE GETMONEYINDEFUSERS (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMONEYINID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETMONEYINNAL (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (NAL DCURR)
AS 
 ^

ALTER PROCEDURE GETMONEYINNAME (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMONEYINNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETMONEYINWAYOFPAY (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (WAYOFPAY INTEGER)
AS 
 ^

ALTER PROCEDURE GETMONEYOBOR (SMETKANO INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
INP CHAR(1) CHARACTER SET WIN1251)
RETURNS (MONEYOBOR DCURR)
AS 
 ^

ALTER PROCEDURE GETMSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251)
RETURNS (MSKEYS VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETNALBYLOG (OBEKTNAMEID INTEGER,
CKLADNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
DTDATE TIMESTAMP)
RETURNS (NAL DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETNOTESNOTENOTE (ID INTEGER)
RETURNS (NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTICKLADBYPART (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTIID (NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETOBEKTILOGCKLADQTY (OBEKTID INTEGER)
RETURNS (LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTINAME (ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTINAMESOBEKT (ID INTEGER)
RETURNS (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTIOPENRECH (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTIPATHDB (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (PATHDB VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOBEKTITYPEDB (OBEKTID INTEGER)
RETURNS (TYPEDB CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETOLDNONEWNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDNO INTEGER)
RETURNS (NEWNO INTEGER)
AS 
 ^

ALTER PROCEDURE GETOPENEARNESTBYVALUE RETURNS (ID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(256) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
SALEMATERIALCODE INTEGER)
AS 
 ^

ALTER PROCEDURE GETOPENMISTRALMSESSIONNO (OBEKTID INTEGER)
RETURNS (SESSIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE GETORDERNOTEBYRECH (OBEKTID INTEGER,
UCODE BIGINT)
RETURNS (ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT)
AS 
 ^

ALTER PROCEDURE GETORDERNOTEINFO (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
UCODE BIGINT)
RETURNS (ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT)
AS 
 ^

ALTER PROCEDURE GETORDERNOTENOMER (OBEKTID INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETORDERNOTENOTESNOTE (ID INTEGER)
RETURNS (NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SALESARTNOMER INTEGER,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE GETORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (ID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUPNAMESID INTEGER,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETORDERSSUMPAY (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (SUMPAY DCURR)
AS 
 ^

ALTER PROCEDURE GETOUTPRODDATE (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (OUTPRODDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETPARENTGROUPNOMER (OBEKTID INTEGER,
GROUPNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETPARTNEREMPLOYEENAMESPE (ID INTEGER)
RETURNS (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERNAMEFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERNAMESPARTNERNAME (ID INTEGER)
RETURNS (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSARTNOMERARTNOMER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
PARTNERARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETPARTNERSARTNOMERPARTNERARTNO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PARTNERARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETPARTNERSEMPLOYEEEGNEGN (ID INTEGER)
RETURNS (EGN VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSEMPLOYEENAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSLASTSALESINFO (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER)
RETURNS (SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETPARTNERSNAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSNOTEPARTNERNOTE (ID INTEGER)
RETURNS (PARTNERNOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE GETPARTNERSSETINGS (INID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
SUMSALES DCURR,
SUMDELIVERY DCURR,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSSETINGSID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPARTNERSSETTINGSB_S (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSSHORTNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSSTORENAME (OBEKTID INTEGER,
NOMER INTEGER)
RETURNS (NAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNERSTORENAMESPS (ID INTEGER)
RETURNS (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPARTNOBYFIFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
CHECKQTY CHAR(1) CHARACTER SET WIN1251)
RETURNS (PARTNO VARCHAR(20) CHARACTER SET WIN1251,
OUTQTY DQTY,
PARTNALQTY DQTY,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE GETPAYRAZCRSMETKASUMA (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKAACTIONID SMALLINT)
RETURNS (SUMPAYRAZCR DCURR)
AS 
 ^

ALTER PROCEDURE GETPERCPRICELISTPERC (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
CUSTCOUNT INTEGER)
RETURNS (FROMPRICELISTID NUMERIC(18, 0),
PERC NUMERIC(6, 2),
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETPORTEXTTERMINAL RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
 ^

ALTER PROCEDURE GETPOSACTIVESALESPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETPOSSTATEPOSID (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (POSID INTEGER)
AS 
 ^

ALTER PROCEDURE GETPRICELISTCKLADID (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPRICELISTDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (DIGG INTEGER)
AS 
 ^

ALTER PROCEDURE GETPRICELISTID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPRICELISTLOADFROMPRICELIST (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (LOADNULLFROMPRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPRICELISTNAME (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (POSACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRICELISTPRICE (OBEKTID INTEGER,
INPRICELISTID NUMERIC(18, 0),
SALEARTNOMER INTEGER,
IFNULLLOADDEFPRICE CHAR(1) CHARACTER SET WIN1251,
GETPROMPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
ACTIVEPRICELISTID NUMERIC(18, 0))
RETURNS (SALESPRICE FLOAT,
PRICELISTID NUMERIC(18, 0),
PERCTO NUMERIC(6, 4),
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMOTIONSALESPRICEID INTEGER)
AS 
 ^

ALTER PROCEDURE GETPRICELISTTYPE (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRICENAME (ID INTEGER)
RETURNS (PRICENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRICINGPOLICYACTPRICELISTID (OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPRIKDELIVERYOPER (OBEKTID INTEGER,
DELIVERYNO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRIKOUTSTOKIOPER (OBEKTID INTEGER,
OUTSTOKINO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRIKSMETKAOPER (OBEKTID INTEGER,
SMETKANO INTEGER,
TYPEDB SMALLINT)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRINTERID (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (PRINTERID NUMERIC(18, 2))
AS 
 ^

ALTER PROCEDURE GETPRINTERNAME (OBEKTID INTEGER,
PRINTERID NUMERIC(18, 0))
RETURNS (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRINTERNAMESPRINTERNAME (ID INTEGER)
RETURNS (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRINTERSROW (INID NUMERIC(18, 0),
INOBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
 ^

ALTER PROCEDURE GETPRODREQUESTQTY (OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (QTY DCURR)
AS 
 ^

ALTER PROCEDURE GETPRODUCER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRODUCERDVCKNOMER (OBEKTID INTEGER,
ID INTEGER)
RETURNS (DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRODUCERID (OBEKTID INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (PRODUCERID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETPRODUCERNAME (OBEKTID INTEGER,
PRODUCERID NUMERIC(18, 0))
RETURNS (PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPRODUCERNAMESPRODUCER (ID INTEGER)
RETURNS (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPROGRAMSETTINGS (TYPEPROGRAM SMALLINT,
SETTINGSALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSNO INTEGER)
RETURNS (PROGRAMSETTINGS BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMSALESPRICE DCURR)
RETURNS (SALESPRICE DCURR,
PROMOTIONSALESPRICEID INTEGER)
AS 
 ^

ALTER PROCEDURE GETRAZCRBYSMETKANO (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
INTYPEDB SMALLINT)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMA DCURR,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE GETRAZCRNOTEINFO (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT)
RETURNS (RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETRAZCRSUMA (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT)
RETURNS (RAZCRSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETRAZFASOVKICKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETRAZFASOVKISDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (OTCKLADID NUMERIC(18, 0),
OTARTNOMER BIGINT,
OTKOL DPERC,
OTPRICE DPERC)
AS 
 ^

ALTER PROCEDURE GETRECH (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
OTARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
UNIQUECODE BIGINT)
AS 
 ^

ALTER PROCEDURE GETRECHBYCODE (OBEKTID INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
MATSALECODE INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
OTARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETRECHCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETRECHEXPIRATIONDATE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (EXPIRATIONDATE INTEGER)
AS 
 ^

ALTER PROCEDURE GETRECHNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETRECHSDR (OBEKTID INTEGER,
INPARTNOMER INTEGER,
SHOWZAGSDR CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0) =2)
RETURNS (RECHSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTNETKOL DQTY,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
EXPIRATIONDATE INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC,
UCODECONTENT BIGINT,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE GETRESERVEDPARTNERS (OBEKTID INTEGER)
RETURNS (PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETREST_TABLESID (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETREVDOCTPRICE (TYPEPRICE SMALLINT,
OBEKTID INTEGER,
ARTNOMER INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ISARTVLOJENOST CHAR(1) CHARACTER SET WIN1251)
RETURNS (DOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETROWPARTNERS (INP_OBEKTID INTEGER,
INP_NOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLAD (OBEKTID INTEGER)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
MINQTY DQTY,
NAL DQTY,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SCI_DISCOUNTCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
MAXTO DCURR,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRINTER1ID NUMERIC(18, 0),
PRINTELETIKETI CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLAD1 (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
MINQTY DQTY,
NAL DQTY,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MAXTO NUMERIC(6, 2),
UNIQUECODE BIGINT,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTBYDAILYMENU (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NUM INTEGER,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251,
TAGVALID INTEGER = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
SALEQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME,
KINDTYPE INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
CATEGORY VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOBYGRYPAONLY (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251,
TAGVALID INTEGER =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
SALEQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME,
KINDTYPE INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOMER (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOMERBYGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
MINQTY DQTY,
NAL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOMERBYGRYPA1 (OBEKTID INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
WORKQTY DQTY,
TEMPQTY DQTY,
ARTIKUL1 D_ARTIKULNAME,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
KINDTYPE INTEGER)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOMERBYGRYPA2 (OBEKTID INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
DTDAY DATE,
PRICELISTID NUMERIC(18, 0),
ONLYARTINGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME,
COLOR INTEGER)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADARTNOMERBYGRYPA3 (OBEKTID INTEGER,
DTDAY DATE,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME,
COLOR INTEGER,
GRYPAID VARCHAR(50) CHARACTER SET WIN1251,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADBYPROMOTION (OBEKTID INTEGER,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NAL DQTY,
LASTDOCTPRICE DCURR,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
FROMDATE1 DATE,
TODATE1 DATE,
FROMHOUR1 TIME,
TOHOUR1 TIME,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMOTION INTEGER)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADBYSPECHIFIK (OBEKTID INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
STOREID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADLOCKBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADLOCKBYMISTRALM1 (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (MISTRALTCOLOR INTEGER)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADROW (INOBEKTID INTEGER,
INARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERID NUMERIC(18, 0),
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERID INTEGER,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADSERIALNUMBER (OBEKTID INTEGER)
RETURNS (SALESCKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADSPECHIFIK1 (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADSTOCKGROUP (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSALESCKLADTYPEMEASURECONV (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OLDTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NEWTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPDATA BLOB,
REPOPTIONS BLOB)
AS 
 ^

ALTER PROCEDURE GETSAVEDREPORTSREPDATA (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPDATA BLOB)
AS 
 ^

ALTER PROCEDURE GETSAVEDREPORTSREPOPTIONS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPOPTIONS BLOB)
AS 
 ^

ALTER PROCEDURE GETSENDSALESEMAIL RETURNS (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETSERIALNUMBERSALESARTNOMER (OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETSERIALNUMBERVALUESSERNO (ID INTEGER)
RETURNS (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSERNOMAXDTOTCHET (SERNO VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (DTOTCHET TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETSETINGSCALCNAL RETURNS (CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSACTIVEPRICELISTID RETURNS (ACTIVEPRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETSETTINGSALIASID (ALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEPROGRAM SMALLINT)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSETTINGSDBINFO RETURNS (DBINFO VARCHAR(31) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSFIRMA RETURNS (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSGROUPSMETKI RETURNS (ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSLOGSAVEDATA RETURNS (LOGSAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSSAVEDATA RETURNS (SAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSSAVEPOR RETURNS (SAVEPOR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSETTINGSUPDATEARTIKULNAMES RETURNS (UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSLAVEOBEKTID (LOGOBEKTID CHAR(1) CHARACTER SET WIN1251,
OFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INOBEKTID INTEGER)
RETURNS (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSMETKAFORDESPARK (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER)
RETURNS (PRDATE TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETSMETKASENDEMAIL (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER)
RETURNS (PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETSMETKIBYDAYID (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER)
RETURNS (ID INTEGER,
KOL DQTY)
AS 
 ^

ALTER PROCEDURE GETSMETKIPRDATE (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (PRDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETSPECHIFIKNAMESSPECHIFIK (ID INTEGER)
RETURNS (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE (OBEKTID INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE01NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE01_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE01_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE02NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE02_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE02_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE03NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE03_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE03_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE04NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE04_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE04_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE05NAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE05_ID (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTE05_NAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTEID (OBEKTID INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTENAMES (STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER)
RETURNS (STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTENAMESID (STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKATTRIBUTEQTY (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETSTOCKBYATTRIBUTEID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETSTOCKGROUPNAME (ID INTEGER)
RETURNS (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSUMBACKSTOKA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKALV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMBRAKKOL DQTY,
SUMBRAKLV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMBRAKBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMBRAK DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMDOCTKOL DQTY,
SUMDOCTLV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMDOCTBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMDOCT DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER)
RETURNS (SUMA DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMOUTKOL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMOUTKOL DQTY,
SUMOUTLV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMOUTPRODBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMOUTPROD DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMPERSONALFOODBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMPERSONALFOOD DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMRAZXODIBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMRAZXODI DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMREVBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMREV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMREVKOL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMREVKOL DQTY,
SUMREVLV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMSALES (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (SUMSALESKOL DQTY,
SUMSALESLV DCURR)
AS 
 ^

ALTER PROCEDURE GETSUMSALESBYDAY (DTDAY DATE,
OBEKTID INTEGER)
RETURNS (SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE GETSYNCLOCKLASTACTIONNO (OBEKTID INTEGER)
RETURNS (LASTACTIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE GETSYXRANENIE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSYXRANENIEID (OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETSYXRANENIENAME (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETSYXRANENIENAMESSYXRANENIE (ID INTEGER)
RETURNS (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTABLENO_STAGENO (NOTE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TABLENO INTEGER,
STAGENO INTEGER)
AS 
 ^

ALTER PROCEDURE GETTAXGROUPREPORTSMAXDATE (OBEKTID INTEGER)
RETURNS (MAXDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETTEKSMETKILASTEDITDATE (OBEKTID INTEGER,
SMETNOMER INTEGER)
RETURNS (LASTEDITDATE DOUBLE PRECISION)
AS 
 ^

ALTER PROCEDURE GETTEMPFAKTURINOMER (OBEKTID INTEGER)
RETURNS (FAKTURINOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE GETTEMPREVDTOPEN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (DTOPEN TIMESTAMP,
CKLADID NUMERIC(18, 0),
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTEMPREVGRYPA (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTEMPREVINFO (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETTEMPREVOPENCKLADID (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTEMPREVREVBYSTOCKGROUP (OBEKTID INTEGER)
RETURNS (REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTEMPVLOJENOSTSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TEMPVLOJENOSTNOMER INTEGER)
RETURNS (FROMCKLADID NUMERIC(18, 0),
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER BIGINT,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMAVGPRICE DCURR,
FROMLASTDOCTPRICE DCURR,
FROMQTY DQTY,
TEMPQTY DQTY,
VLOJENOSTSDRID INTEGER,
TEMPVLOJENOSTSDRID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (NEWPARTNERSEMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER)
RETURNS (NEWPARTNERNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPEAREAID (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPEARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEARTIKULID (OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETTYPEARTIKULNAME (OBEKTID INTEGER,
ID NUMERIC(18, 0))
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEARTIKULNAMESTYPEARTIKUL (ID INTEGER)
RETURNS (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEDOCTNAMESTYPEDOCT (ID INTEGER)
RETURNS (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEDOCUMENTSID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPEDOCUMENTSNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASURE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASURECONVQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER)
RETURNS (QTY DQTY)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASURECOUNTABLE (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (COUNTABLE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASUREDEFQTY (OBEKTID INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (DEFQTY DQTY)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASUREID (OBEKTID INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPEMEASURENAME (ID INTEGER)
RETURNS (NAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPENOMINAL (OBEKTID INTEGER,
CURRENCYTYPESID INTEGER)
RETURNS (ID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR)
AS 
 ^

ALTER PROCEDURE GETTYPEPARTNERID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPEPARTNERNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEPARTNERS (ID INTEGER,
OBEKTID INTEGER)
RETURNS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPEPARTNERSNAMES_TP (ID INTEGER)
RETURNS (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPETRANSPORTID (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE GETTYPETRANSPORTNAME (TYPETRANSPORTID INTEGER)
RETURNS (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETTYPETRANSPORTNAME1 (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETUSERBYPASS (OBEKTID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
CARD CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GETUSERBYREST_TABLESUSERNAME (OBEKTID INTEGER,
TABLENO INTEGER)
RETURNS (USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETUSERNAMESNAME (ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETUSERPOSITIONNAMESPOSITION (ID INTEGER)
RETURNS (POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETUSERSID (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETUSERSNAME (OBEKTID INTEGER,
ID INTEGER)
RETURNS (NAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETUSERTABLES (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TABLENO INTEGER)
AS 
 ^

ALTER PROCEDURE GETVERDBMULTICKLAD RETURNS (MULTICKLAD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVERDBSTOCKBYATTRIBUTE RETURNS (STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVERDBTYPEDB RETURNS (TYPEDB CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVEZNAATTACHINFO (OBEKTID INTEGER,
VEZNANAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ATTACHVEZNANAME VARCHAR(20) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESCODEPAGE (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESEXTENDEDINFO (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESID (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESLOGNO (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (LOGNO SMALLINT)
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESMAXPLU (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (MAXPLU INTEGER)
AS 
 ^

ALTER PROCEDURE GETVEZNINAMESTYPEVEZNA (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (TYPEVEZNA INTEGER)
AS 
 ^

ALTER PROCEDURE GETVEZNIROW (INPOBEKTID INTEGER,
INPVEZNANO NUMERIC(18, 0),
INPSALESARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
 ^

ALTER PROCEDURE GETVLOJENOSTART (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INARTNOMER INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRODUCTIONCOST DCURR)
AS 
 ^

ALTER PROCEDURE GETVLOJENOSTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
PRODUCTIONCOST DCURR)
AS 
 ^

ALTER PROCEDURE GETVLOJENOSTNAMES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETWAYOFPAY (WAYOFPAY INTEGER)
RETURNS (WAYOFPAYNAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETWAYOFPAYFROMSMETKI (SMETKIWAYOFPAY VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GETZAG (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
LASTDOCTPRICE DCURR,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETZAGBYCODE (OBEKTID INTEGER,
MATCODE INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
LASTDOCTPRICE DCURR,
PORTION DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE GETZAGNAMES (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE GETZAGSDR (OBEKTID INTEGER,
INPARTNOMER INTEGER)
RETURNS (ZAGSDRID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL DQTY,
OTAVGPRICE DCURR,
OTLASTDOCTPRICE DCURR,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
PORTION DQTY,
OTAVGPRICE1 DCURR,
OTLASTDOCTPRICE1 DCURR,
OTNETKOL DQTY,
OTAVGPRICEWOTAX DCURR,
OTLASTDOCTPRICEWOTAX DCURR,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
UCODECONTENT BIGINT)
AS 
 ^

ALTER PROCEDURE GETZAIAVKIDATE (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER)
RETURNS (DATEZAIAVKA TIMESTAMP)
AS 
 ^

ALTER PROCEDURE GET_H_ADRESSCARDCOUNT RETURNS (ADRESSCARDCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE GIVEKLIENT (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE GIVEMACA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MINMACA INTEGER,
KLIENT INTEGER,
NEWNUM INTEGER)
RETURNS (MACA INTEGER,
SMETNOMER INTEGER,
NEWSMETKA CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE GROUPTEKSMETKA (OBEKTID INTEGER,
FROMROWID NUMERIC(18, 0),
TOROWID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE HASACTIVEPROMOTION RETURNS (CHRACTIVEPROMOTION CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HASCKLADBYPART RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HASCKLADMINQTY RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HASNEWACTIVEPROMCHECK (DTNEWACTIVEPROMCHECK TIMESTAMP,
OLDCOUNTPROM INTEGER)
RETURNS (CHRACTIVEPROM CHAR(1) CHARACTER SET WIN1251,
DTCHECK TIMESTAMP,
COUNTPROM INTEGER)
AS 
 ^

ALTER PROCEDURE HASPRINTELETIKET (OBEKTID INTEGER)
RETURNS (PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HASSALESBLOCKARTIKULS RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HASZAGINZAGSDR (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE HTTPORDERSCOME RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INAVGINCOMEOUTGO (OBEKTID INTEGER,
ARTNOMERS BLOB CHARACTER SET WIN1251,
ARTIKULS BLOB CHARACTER SET WIN1251,
DATEFROM TIMESTAMP,
DATETO TIMESTAMP)
RETURNS (SUMSALES DQTY,
SUMDOCT DQTY,
SUMZAIAVKI DQTY,
SUMBRAK DQTY,
SUMOUTSTOKI DQTY,
SUMASALES DCURR,
SUMADOCT DCURR,
SUMAOUTSTOKI DCURR,
SUMAZAIAVKI DCURR,
SUMABRAK DCURR,
AVGOUTGO DQTY,
AVGSALES DQTY,
AVGBRAK DQTY,
AVGOUTSTOKI DQTY,
AVGDOCT DQTY,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INITPARAMSBYHOURS (CHRINITALL CHAR(1) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
RETURNS (O_P0_1 NUMERIC(10, 4),
O_P1_2 NUMERIC(10, 4),
O_P2_3 NUMERIC(10, 4),
O_P3_4 NUMERIC(10, 4),
O_P4_5 NUMERIC(10, 4),
O_P5_6 NUMERIC(10, 4),
O_P6_7 NUMERIC(10, 4),
O_P7_8 NUMERIC(10, 4),
O_P8_9 NUMERIC(10, 4),
O_P9_10 NUMERIC(10, 4),
O_P10_11 NUMERIC(10, 4),
O_P11_12 NUMERIC(10, 4),
O_P12_13 NUMERIC(10, 4),
O_P13_14 NUMERIC(10, 4),
O_P14_15 NUMERIC(10, 4),
O_P15_16 NUMERIC(10, 4),
O_P16_17 NUMERIC(10, 4),
O_P17_18 NUMERIC(10, 4),
O_P18_19 NUMERIC(10, 4),
O_P19_20 NUMERIC(10, 4),
O_P20_21 NUMERIC(10, 4),
O_P21_22 NUMERIC(10, 4),
O_P22_23 NUMERIC(10, 4),
O_P23_24 NUMERIC(10, 4))
AS 
 ^

ALTER PROCEDURE INOUTDOCTBYPART (OBEKTID INTEGER,
NEWKOL DQTY,
OLDKOL DQTY,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
EDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE INSBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSCAKERESERVATIONS (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTSAVE TIMESTAMP,
QTY DQTY,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DESPARKID VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INSCASHIMPORTEXPORT (LOCATIONID INTEGER,
POSNAME VARCHAR(30) CHARACTER SET WIN1251,
DATESAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DEVICENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(20) CHARACTER SET WIN1251,
AMOUNT DCURR,
NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NUM INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
 ^

ALTER PROCEDURE INSDISCOORDERS (OBEKTID INTEGER,
ORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
ORDERDATE DATE,
FORDELIVERYDATE DATE,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
DISCOTYPE SMALLINT)
AS 
 ^

ALTER PROCEDURE INSEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
NOTE VARCHAR(256) CHARACTER SET WIN1251,
SALEMATERIALCODE INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTARTINBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE INSERTBRAKSDR (OBEKTID INTEGER,
BRAKNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTCKLADNAME (ID INTEGER,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTDOCTBYPART (OBEKTID INTEGER,
DTDOCT TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE INSERTDOCTSDR (OBEKTID INTEGER,
DOCTNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTFAKTURISDR (OBEKTID INTEGER,
FAKTURAID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
SUMA DCURR,
TYPEDB SMALLINT,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIKNAMESID INTEGER,
GODNODO DATE,
DOCTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINEXPORTHISTORY (OBEKTID INTEGER,
LOGID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINLOGCHANGES (OBEKTID INTEGER,
CHANGES VARCHAR(30000) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINLOGCHANGES1 (ID INTEGER,
OBEKTID INTEGER,
CHANGES VARCHAR(30000) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSERTINTOAREAINFO (INID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOARTIKUL1NAMES (ARTIKUL1 D_ARTIKULNAME)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOARTIKULNAMES (ARTIKUL D_ARTIKULNAME)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOARTIKULSPARTNO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOBACKSTOKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOBACKSTOKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(50) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINTOBARCODECODES (CODE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOBOXCKLAD (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0))
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOBRAK (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOBYLSTATNAMES (BYLSTAT VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOBYPROD (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
OBEKTID INTEGER,
TYPEDB INTEGER,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
OLDAVGPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
OLDAVGPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
OLDAVGPRICEWOTAX DCURR,
CKLADSTOCKGROUPID INTEGER,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY)
AS 
 ^

ALTER PROCEDURE INSERTINTOCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
GODNODO DATE,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOCKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
LASTDOCTPRICE DCURR,
SUMDOCTKOL DQTY,
LASTDOCTKOL DQTY)
AS 
 ^

ALTER PROCEDURE INSERTINTOCKLADNAMES (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOCURRENCYTYPES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTODANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTODANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTODANNIFIRMANAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTODDSNONAMES (DDSNO VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTODEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAMEID INTEGER,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAMESID INTEGER,
PARTNERNAMESID INTEGER,
PARTNERSTORENAMESID INTEGER,
PARTNEREMPLOYEENAMESID INTEGER,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
FROMOBEKTNAMEID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTODISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTODISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTODISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINTODOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPEID INTEGER,
DOC2DATE DATE,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTODOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPEID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPEID INTEGER,
DOC2DATE DATE,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTODOCT (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTODOCTYPENAMES (DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTODOGDOCTPRICES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
OBEKTINAMESID INTEGER,
DTSAVE TIMESTAMP,
USERNAMESID INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PAYSUMA DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINTOEARNESTSDR (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
ARTNOMER INTEGER,
ARTIKULNAMESID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
PAYPRICE DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINTOEDITDOCT (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
EDITBYUSERID INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAMEID INTEGER,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPERID INTEGER,
PARTNERNAMEID INTEGER,
PARTNEREMPLOYEEID INTEGER,
PARTNERSTOREID INTEGER,
PARTNERSSHORTNAMEID INTEGER,
TYPEDOCTID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAMEID INTEGER,
MONEYINNAMEID INTEGER,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAMESID INTEGER,
BYLSTATNAMESID INTEGER,
DDSNONAMESID INTEGER)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOEDITDOCTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDOCTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKULID INTEGER,
SYXRANENIEID INTEGER,
PRODUCERID INTEGER,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPAID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER,
PERCTO NUMERIC(6, 2),
SPECHIFIKNAMESID INTEGER,
ARTIKUL1ID INTEGER,
BARCODEID INTEGER,
ZAIAVKIQTY DQTY,
NOTESNOTEID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOEDITSMETKI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
OBEKTNAMEID INTEGER,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP,
OPERID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAMEID INTEGER,
PARTNEREMPLOYEEID INTEGER,
PARTNERSTOREID INTEGER,
PARTNERSSHORTNAMEID INTEGER,
PARTNERSEMPLOYEEEGNID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
KACAOPERID INTEGER,
EDITBYUSERID INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOEDITSMETKISDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITSMETKIID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
KOL DQTY,
TYPEMEASURENAMEID INTEGER,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
GRYPAID INTEGER,
LASTDOCTPRICE DCURR,
PRICELISTNAMEID INTEGER,
FISKALPRINTERNAMESID INTEGER,
STOCKATTRIBUTE01NAMESID INTEGER,
STOCKATTRIBUTE02NAMESID INTEGER,
STOCKATTRIBUTE03NAMESID INTEGER,
STOCKATTRIBUTE04NAMESID INTEGER,
STOCKATTRIBUTE05NAMESID INTEGER,
CKLADNAMESID INTEGER,
SPECHIFIKNAMESID INTEGER,
ARTIKUL1ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOFISCALDATA (LOCATIONNAMEID INTEGER,
SALENUM INTEGER,
FISCALDATE TIMESTAMP,
FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
FISCALMEMORY VARCHAR(10) CHARACTER SET WIN1251,
FISCALNUM VARCHAR(12) CHARACTER SET WIN1251,
FISCALAMOUNT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOFISKALPRINTERNAMES (NAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOFSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251,
FSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOGROUPID (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOH_COUNTRY (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOH_COUNTRYNAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOINFOBYSERIALNUMBER (OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBERVALUESID INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOLOGBLOBDATA (OBEKTID INTEGER,
LOGCHANGESID INTEGER,
BLOBDATA BLOB)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOLOGBONUSPOINT (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
ACTIONSTYPEID SMALLINT,
USERNAMESID INTEGER,
SMETKANO INTEGER,
BONUSPOINTDELTA INTEGER,
OLDBONUSPOINT INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
NAL DCURR,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYINNAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYOPER (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMONEYTRANSFER (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMPA (FKEY INTEGER,
KEYID VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOMSKEYS (DEVICEID VARCHAR(150) CHARACTER SET WIN1251,
MSKEY VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTONOTESNOTE (NOTE VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOOBEKTI (NAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER,
PATHDB VARCHAR(255) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOOBEKTINAMES (OBEKT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOOBEKTIOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOOPENMISTRALM (OBEKTID INTEGER,
SESSIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERNOTEBYRECH (OBEKTID INTEGER,
UCODE BIGINT,
ORDERNOTENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERNOTENOTES (NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAMESID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUPNAMESID INTEGER,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOOUTPROD (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNEREMPLOYEENAMES (PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERNAMES (PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERS (OBEKTID INTEGER,
NOMER NUMERIC(18, 0),
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSEMPLOYEE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSEMPLOYEEEGN (EGN VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
SUMSALES DCURR,
SUMDELIVERY DCURR,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSSHORTNAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSSTORE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE INSERTINTOPARTNERSTORENAMES (PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPERSONALFOOD (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFNOMER INTEGER,
PFDATE DATE,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SCTIME TIME,
EXECDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSERTINTOPOR (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAMESID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAMESID INTEGER,
USERNAMESID INTEGER,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ACTIONID SMALLINT,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSERTINTOPORSDR (ID INTEGER,
OBEKTID INTEGER,
PORID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
ORDERNOTENOTESID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKULID1 INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTINTOPOSSTATE (PROGRAMID INTEGER,
POSID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRICENAMES (PRICENAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRINTERNAMES (PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRODUCERNAMES (PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRODUCERS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (OUTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTOPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
FORDATE TIMESTAMP,
DOCTNOMER INTEGER,
OUTPRODNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOPRODUCTIONREQUESTSDR (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
PRODUCTIONQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE INSERTINTOPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTORATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTORECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
SALEARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
COOKINGTIME SMALLINT,
OPENRECH CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTORECHSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
RETURNS (OUTRECHSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTORESERVEDARTIKULS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DCURR,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOREST_TABLES (OBEKTID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTOREVIZIA (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
REVNO INTEGER,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB)
AS 
 ^

ALTER PROCEDURE INSERTINTOSERIALNUMBERVALUES (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSETINGS (MAKESALDOSKLAD CHAR(1) CHARACTER SET WIN1251,
BEGININTERVAL TIMESTAMP,
ENDINTERVAL TIMESTAMP,
ACTIVEPRICELIST NUMERIC(18, 0),
PRINTSMETKACOUNT INTEGER,
DTINITSMETKACOUNT TIMESTAMP,
LOGCKLAD CHAR(1) CHARACTER SET WIN1251,
ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251,
UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251,
DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251,
DBINFO VARCHAR(31) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSETTINGSALIAS (TYPEPROGRAM SMALLINT,
ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSMETKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DATEOPEN DATE,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSMETKIBYDAY (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTINTOSPECHIFIKNAMES (SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSPENTTIME (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE01NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE02NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE03NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE04NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKATTRIBUTE05NAMES (NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOCKGROUPNAMES (GROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTOREDMESSAGES (OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOSTREETINFO (INID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSYNCLOCK (OBEKTID INTEGER,
LASTACTIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOSYXRANENIENAMES (SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOS_MACHINE (OBEKTID INTEGER,
S_TYPEMACHINEID INTEGER,
SERNOMER VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOS_TYPECONTRACTS (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEFPRICE DCURR,
DEFPERIOD SMALLINT)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOS_TYPEMACHINE (OBEKTID INTEGER,
PRODUCERID NUMERIC(18, 0),
MODEL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSERTINTOTAG (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
TAGVALUEID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAGID INTEGER =null)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTAGVALUE (INP_ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEKORDERSBYTELSDR (OBEKTID INTEGER,
TEKORDERSBYTELNOMER INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
PRIK CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSERID INTEGER,
MONEYINNAMEID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERSID INTEGER,
FROMPRODUCTIONREQUESTNOMER INTEGER,
REPORTINGDATE DATE,
DOCTDATE TIMESTAMP,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPDELIVERYSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRYID INTEGER,
SYXRANENIEID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSERID INTEGER,
MONEYINNAMEID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKTID INTEGER,
FROMPRODUCTIONREQUESTNOMER INTEGER,
REPORTINGDATE DATE,
OUTPRODDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPOUTPRODSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
SYXRANENIEID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
USERSID INTEGER,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTEMPZAIAVKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
NEWPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEADDRESS (INID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEAREA (INID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEARTIKULNAMES (TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEDOCTNAMES (TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEMEASURE (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEMEASURECONV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEMEASURENAME (NAME VARCHAR(10) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEPARTNERS (OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPEPARTNERSNAMES (TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPETRANSPORT (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOTYPETRANSPORTNAMES (TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOUSERNAMES (NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOUSERPOSITIONNAMES (POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOUSERSBYREST_TABLES (OBEKTID INTEGER,
USERSID INTEGER,
REST_TABLESID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTINTOVERDBDETAIL (OBJECTTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(100) CHARACTER SET WIN1251,
VERNO INTEGER,
FROMDATE DATE)
AS 
 ^

ALTER PROCEDURE INSERTINTOVEZNI (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTINTOZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
PORTION DQTY)
AS 
 ^

ALTER PROCEDURE INSERTINTOZAGSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INZAGSDRID INTEGER,
OTNETKOL DQTY)
RETURNS (OUTZAGSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTINTOZAIAVKI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUT_ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTLOGCKLAD (DATELOG TIMESTAMP,
OPERTYPE VARCHAR(10) CHARACTER SET WIN1251,
OLDOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OLDARTNOMER INTEGER,
OLDARTIKUL D_ARTIKULNAME,
OLDKOL DQTY,
OLDTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDAVGPRICE DCURR,
OLDLASTDOCTPRICE DCURR,
OLDMINKOL DQTY,
OLDCANSALES CHAR(1) CHARACTER SET WIN1251,
OLDSALESARTNOMER INTEGER,
NEWOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWARTNOMER INTEGER,
NEWARTIKUL D_ARTIKULNAME,
NEWKOL DQTY,
NEWTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
NEWAVGPRICE DCURR,
NEWLASTDOCTPRICE DCURR,
NEWMINKOL DQTY,
NEWCANSALES CHAR(1) CHARACTER SET WIN1251,
NEWSALESARTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ACTIONSTYPEID SMALLINT,
OLDCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
NEWCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER,
OLDAVGPRICE1 DCURR,
NEWAVGPRICE1 DCURR,
OLDLASTDOCTPRICE1 DCURR,
NEWLASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE INSERTORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTOTCHETFP (OBEKTID INTEGER,
DTOTCHET TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
SERNO VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTOUTPRODSDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTPAYRAZCR (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
ACTIONID SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTPERMPOS (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTPERMSKLAD (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTPERSONALFOODSDR (OBEKTID INTEGER,
PFNOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTPRICELISTNAMES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTPRINTER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
RETURNS (OUTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE INSERTRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTREVALUATION (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TSDATETIME TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDSALESPRICE DCURR,
NEWSALESPRICE DCURR,
NAL DQTY,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTREVIZIASDR (OBEKTID INTEGER,
REVNO INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE INSERTSMETKISDR (OBEKTID INTEGER,
NOMER INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
BESTBEFORE TIMESTAMP = null)
AS 
 ^

ALTER PROCEDURE INSERTSTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTSYSLOG (DTLOG TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
LOGTYPE SMALLINT,
"LOG" VARCHAR(255) CHARACTER SET WIN1251,
MAJVER SMALLINT,
MINVER SMALLINT,
DBVER SMALLINT)
AS 
 ^

ALTER PROCEDURE INSERTSYXRANENIE (ID INTEGER,
OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTTYPEARTIKUL (ID INTEGER,
OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTVERDB (VERDB INTEGER,
KOLDIG INTEGER,
CURRDIG INTEGER,
CURRMASK VARCHAR(10) CHARACTER SET WIN1251,
KOLMASK VARCHAR(10) CHARACTER SET WIN1251,
CALCNAD CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
ALLOWOTRKOL CHAR(1) CHARACTER SET WIN1251,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
DBSTATUS CHAR(1) CHARACTER SET WIN1251,
FIKPRICE CHAR(1) CHARACTER SET WIN1251,
FIFO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
MAJORVER INTEGER,
MINORVER INTEGER,
STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTVEZNINAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSERTWORKREPORT (ID INTEGER,
LOCATIONID INTEGER,
USERID INTEGER,
APPTYPE SMALLINT,
DATESAVED TIMESTAMP,
POS VARCHAR(10) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPORTDATA BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUT_ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSERTZAIAVKISDR (OBEKTID INTEGER,
ZAIAVKANOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NALKOL DQTY,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE INSFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSHTTPORDERS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
STATUS SMALLINT)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSHTTPORDERSSDR (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
HTTPORDERSID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSLOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSLOGSENDSALESEMAIL (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSLOGSENDTO_OFA (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULID INTEGER,
QTY DCURR,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAMESID INTEGER,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSLOTTERYSALES (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSOLDARTIKULNAMES (OLDOBEKTID INTEGER,
OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OLDARTIKULNAME D_ARTIKULNAME,
NEWOBEKTID INTEGER,
NEWCKLADID NUMERIC(18, 0),
NEWARTNOMER INTEGER,
NEWARTIKULNAME D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE INSPARTNERSNOTE (PARTNERNOTE D_PARTNERSNOTE)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSSECURITYROLE (ID INTEGER,
OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSTAXGROUPREPORTS (ID INTEGER,
OBEKTID INTEGER,
DTREPORT TIMESTAMP)
AS 
 ^

ALTER PROCEDURE INSTEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPEID INTEGER,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERSID NUMERIC(18, 0),
TAKEBYUSERSID NUMERIC(18, 0))
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSTEMPBACKSTOKISDR (OBEKTID INTEGER,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE INSTEMPFAKTURINOMER (OBEKTID INTEGER,
FAKTURINOMER INTEGER)
AS 
 ^

ALTER PROCEDURE INSTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
NEWPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE INSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE INSTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE INSWEIGHTSCALES (OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCALETYPE SMALLINT,
PORTNO SMALLINT)
AS 
 ^

ALTER PROCEDURE ISARTIKULDELIVERYBLOCK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ISBLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTIKULEXISTS (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (ISEXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTIKULLASTDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTIKULSALESBLOCK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ISBLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTIKULSERIALNUMBEREXISTS (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (CHREXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTINPROMOTION (FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
FROMHOUR TIME,
TOHOUR TIME,
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
TSNOW TIMESTAMP)
RETURNS (ARTINPROMOTION CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISARTVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (CHRVALUE CHAR(1) CHARACTER SET WIN1251,
CHRCKLADBYPART CHAR(1) CHARACTER SET WIN1251,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISBARCODEEXISTS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE ISBLOCKARTIKUL (DTFROM TIMESTAMP,
DTTO TIMESTAMP)
RETURNS (BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISGROUPHASCHILD (OBEKTID INTEGER,
GROUPPATH VARCHAR(255) CHARACTER SET WIN1251)
RETURNS (HASCHILD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISMONEYINNAMEEXISTS (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISOPERHASTEKSMETKI (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISPARTNERHASDOGDOCTPRICES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (CHRFIND CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISPRIMARYGROUP (GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISPROGRAMSETTINGSEXISTS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER)
RETURNS (CHRVALUE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTE01USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTE02USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTE03USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTE04USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTE05USE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISSTOCKATTRIBUTEEXISTS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
RETURNS (ISEXISTS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISS_TYPEMACHINEUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (USE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISTYPEMEASUREUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISTYPEPARTNERUSE (ID INTEGER,
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISVEZNASUNC (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0))
RETURNS (CHRISSUNC CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ISZAGUSEINZAGSDR (OBEKTID INTEGER,
ARTNOMER BIGINT)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE IS_PRODUCERSUSE (ID NUMERIC(18, 0),
OBEKTID INTEGER)
RETURNS (ISUSE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADBARCODE (OBEKTID INTEGER,
INCKLADID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADBARCODEBYATTRIBUTE (OBEKTID INTEGER,
INCKLADID NUMERIC(18, 0))
RETURNS (CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADBONUSPOINTBYART (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
FIRSTBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE LOADBRAKFORCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE LOADCKLADWEIGHTSCALE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADDEFDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (DEFSUMDEBITNOSALDO DCURR)
AS 
 ^

ALTER PROCEDURE LOADDOGDOCTPRICE (OBEKTID INTEGER,
INPCKLADID NUMERIC(18, 0),
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ID INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PERCTO NUMERIC(6, 2),
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE LOADEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
PAYSUMA DCURR)
AS 
 ^

ALTER PROCEDURE LOADEDITDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
MONEYINNAMEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
TIMEDOCT TIME,
GODNODO DATE,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORTID INTEGER,
PERCTO NUMERIC(6, 2),
ARTIKUL D_ARTIKULNAME,
DOCNO NUMERIC(18, 0),
DOCDATE TIMESTAMP,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOADEDITOUTSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
MONEYINNAMEID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DOCNO NUMERIC(18, 0),
DOCDATE TIMESTAMP,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOOUT NUMERIC(18, 0),
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE LOADPERCPRICELIST (OBEKTID INTEGER,
PRICELISTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR,
PROFIT DCURR,
NAD DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADPERCPRICELISTBYGROUP (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CUSTCOUNT INTEGER,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BARCODE CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE DCURR,
PROFIT DCURR,
NAD DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADSALESPRICE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0),
TAGS VARCHAR(255) CHARACTER SET WIN1251 = null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICE DCURR,
PROFIT DCURR,
NAD DCURR,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADSALESPRICEBYGROUP (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRNADBYAVGPRICE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDEFSALESPRICE CHAR(1) CHARACTER SET WIN1251,
ALTPRICELISTID NUMERIC(18, 0),
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICE DCURR,
PROFIT DCURR,
NAD DCURR,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
ALTSALESPRICE DCURR,
NAL DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENOMER INTEGER,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOADVEZNIART (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
PRICELISTID NUMERIC(18, 0),
LOADALL CHAR(1) CHARACTER SET WIN1251)
RETURNS (SALESARTNOMER INTEGER,
BARCODE CHAR(40) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
PRICE DCURR,
EXPIRATIONDATE INTEGER,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
 ^

ALTER PROCEDURE LOADZAIAVKI (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TYPE SMALLINT,
UNDERKOL DQTY,
DTPROMOTION TIMESTAMP)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
LASTDOCTPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DANGROUPTAX DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DELIVERYBLOCK CHAR(1) CHARACTER SET WIN1251,
SALESCKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTSALESDATE TIMESTAMP,
PACKAGEQTY DQTY)
AS 
 ^

ALTER PROCEDURE LOCKALLBYMISTRALM (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE LOCKARTBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE LOCKDB (LOCK CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOCKGROUPBYMISTRALM (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOCKONLYINSTOCKBYMISTRALM (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE LOCKRANGEBYMISTRALM (OBEKTID INTEGER,
FROMARTNOMER INTEGER,
TOARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE LOCKSP AS 
 ^

ALTER PROCEDURE LOGADDOPENRECHSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
RECHSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ATTACHTOCKLADID NUMERIC(18, 0),
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCANCELEARNEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTCANCEL TIMESTAMP,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
EARNESTSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCLEARATTACHCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCLEARSMETKADEBITNOSALDO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
DTDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCLOSEEARNEST (OBEKTID INTEGER,
TYPEDB INTEGER,
NOMER INTEGER,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCLOSEOPENRECH (OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCLOSESAPDELIVERY (OBEKTID INTEGER,
TYPEDB SMALLINT,
NUMBER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTCLOSEDELIVERY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGCOPYREPORTPERM (OBEKTID INTEGER,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
TOUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDATA (PARAMNAME VARCHAR(50) CHARACTER SET WIN1251,
PARAMVALUE VARCHAR(5000) CHARACTER SET WIN1251,
OLDDATA VARCHAR(30000) CHARACTER SET WIN1251)
RETURNS (DATA VARCHAR(30000) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELBOXCKLADDYNAMICSDRINFO (OBEKTID INTEGER,
BOXCKLADARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELBROCHURE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELCKLADSTOCKGROUP1 (OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
NUM INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELDAILYMENUBYDATE (OBEKTID INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELDAILYMENUBYNUM (OBEKTID INTEGER,
NUM DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEALLDANNIFIRMA (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEALLTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEBARCODEMASK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEDISCOUNTBYHOURS (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEDOGDOCTPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFAKTURANOMER (OBEKTID INTEGER,
FNOMER NUMERIC(18, 0),
FAKTURATYPE INTEGER,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMAREAINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMBOXCKLADSDR (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMDANGROUP (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMDANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMORDERS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DELFROMDEFPRICELIST CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMPROMOTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMRATES (ID INTEGER,
OBEKTID INTEGER,
"LOG" INTEGER)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMRAZXODI (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMREPORTPERM1 (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMSTREETINFO (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTEMPVLOJENOSTSDR1 (TYPEDB SMALLINT,
OBEKTID INTEGER,
TEMPVLOJENOSTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTYPEAREA (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTYPEPARTNERS (TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMTYPETRANSPORT (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEFROMZAIAVKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
ZAIAVKANOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPARTNEREMPLOYEERAZCR (OBEKTID INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPARTNERRAZCR (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPARTNERSTORERAZCR (OBEKTID INTEGER,
PARTNERSTORENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPARTNERSTYPEPARTNER (OBEKTID INTEGER,
TYPEPARTNERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPERMPOS (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPERMSKLAD (OBEKTID INTEGER,
SECURITYROLEID DID,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPRICELISTNAMES (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEPROMOTIONSALESPRICE (OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGDELETERECHSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETESMETKI (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
REPORTINGDATE DATE,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETAG (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETETYPEMEASURE (NAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELETEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELFROMBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELFROMPARTNERSEMPLOYEE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELFROMPARTNERSSTORE (OBEKTID INTEGER,
NOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELPARTNERSSETINGS (OBEKTID INTEGER,
ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELPRINTER (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELRAZFASOVKA (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELRAZFASOVKA1 (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELRECH (OBEKTID INTEGER,
RECHNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELSTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGDELZAG (OBEKTID INTEGER,
ZAGNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITARTINBOXCKLADSDR (OBEKTID INTEGER,
ID INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITARTINRECHSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE LOGEDITARTINSALESCKLAD (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY DCURR,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITARTINVLOJENOSTSDR (OBEKTID INTEGER,
ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE LOGEDITARTINZAGSDR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE LOGEDITCKLAD (OBEKTID INTEGER,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITGRYPANAME (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITLOCATIONGROUP (LOCATIONID INTEGER,
DBLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
GROUPNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
PARTNERLOCATIONNUM INTEGER,
CHRMODE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITPRINTER (OBEKTID INTEGER,
OLDPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITRAZXOD (OBEKTID INTEGER,
OLDRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
NEWRAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGEDITSMETKIDOC (OBEKTID INTEGER,
NOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE)
AS 
 ^

ALTER PROCEDURE LOGEMPTYPOR ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGFIXQTYFROMOUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
USERID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSBOXCKLADDYNAMICSDRINFO (ID INTEGER,
OBEKTID INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSCAKERESERVATIONS (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTSAVE TIMESTAMP,
QTY DQTY,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DESPARKID VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE LOGINSCASHIMPORTEXPORT (LOCATIONID INTEGER,
POSNAME VARCHAR(30) CHARACTER SET WIN1251,
DATESAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DEVICENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(20) CHARACTER SET WIN1251,
AMOUNT DCURR,
NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSDAILYMENU (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NUM INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
 ^

ALTER PROCEDURE LOGINSERTARTINBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
CODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE LOGINSERTCKLADNAME (ID INTEGER,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TABLENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOAREAINFO (INID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBONUSPOINTBYOBOR (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBOXCKLAD (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
DANGROUPID INTEGER,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBOXCKLADDYNAMICSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBOXCKLADSDR (OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INBOXCKLADSDRID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOBYPROD (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
OBEKTID INTEGER,
TYPEDB INTEGER,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOCURRENCYTYPES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODANNIFIRMA (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTODOGDOCTPRICES (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOFISCALDATA (LOCATIONNAMEID INTEGER,
SALENUM INTEGER,
FISCALDATE TIMESTAMP,
FISCALSERIAL VARCHAR(10) CHARACTER SET WIN1251,
FISCALMEMORY VARCHAR(10) CHARACTER SET WIN1251,
FISCALNUM VARCHAR(10) CHARACTER SET WIN1251,
FISCALAMOUNT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOGROUPID (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOH_COUNTRY (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOMONEYIN (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOMONEYINPERM (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOOBEKTIOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOORDERGROUP (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOORDERNOTE (OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOORDERNOTEBYGROUP (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPARTNERSEMPLOYEE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPARTNERSSTORE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPERMSKLADDETAIL (OBEKTID INTEGER,
FUNCID INTEGER,
FUNCDETAILID INTEGER,
PASS VARCHAR(50) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOPRODUCERS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTORATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOREPORTPERM (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSPENTTIME (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOSTREETINFO (INID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTAG (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTAGMATERIAL (UNIQUECODE BIGINT,
OBEKTID INTEGER,
TAGVALUEID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAGID INTEGER =null)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTAGVALUE (INP_ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTMPPARTNERSNOMER (OBEKTID INTEGER,
OLDPARTNERNOMER INTEGER,
NEWPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPEADDRESS (INID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPEAREA (INID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPEMEASURE (INP_ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPEPARTNERS (OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
INID INTEGER,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOTYPETRANSPORT (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTINTOUSERSPOSITIONS (OBEKTID INTEGER,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTLOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTOTCHETFP (OBEKTID INTEGER,
DTOTCHET TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
POS CHAR(10) CHARACTER SET WIN1251,
SERNO VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTPAYRAZCR (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
ACTIONID SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGINSERTPERMPOS (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTPERMSKLAD (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTPRICELISTNAMES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTPRINTER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTPROMOTIONSALESPRICE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGINSERTRAZFASOVKI (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
SEARCHNAME D_ARTIKULNAME,
CKLADID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTSTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTSYXRANENIE (ID INTEGER,
OBEKTID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTTYPEARTIKUL (ID INTEGER,
OBEKTID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSERTWORKREPORT (ID INTEGER,
LOCATIONID INTEGER,
USERID INTEGER,
APPTYPE SMALLINT,
DATESAVED TIMESTAMP,
POS VARCHAR(10) CHARACTER SET WIN1251,
REPORTTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPORTDATA BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSFUTUREPRICE (OBEKTID INTEGER,
PRICELISTID DID,
ARTNOMER INTEGER,
DTSTART TIMESTAMP,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSLOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSLOTTERYSALES (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SERIALNO VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSPROMBARCODES (OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSSECURITYROLE (ID INTEGER,
OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSTMPPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDPARTNERSEMPLOYEENOMER INTEGER,
NEWPARTNERSEMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGINSTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGPRIKBRAK (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEBRAK CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBRAK CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGPRIKOUTSTOKI (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
SUMMONEYIN DQTY,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
OUTCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
LOGSAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGPRIKPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEPF CHAR(1) CHARACTER SET WIN1251,
LOGSAVEPF CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PFTIME TIME,
EXECDATE TIMESTAMP,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE LOGPRIKPOR (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGPRIKREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEREV CHAR(1) CHARACTER SET WIN1251,
LOGSAVEREV CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE LOGPRIKSMETKA (SMETKANOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PRDATE TIMESTAMP,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
CHROUTFROMCKLAD CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SUMSMETKA DCURR,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
AVGPRICE DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVESMETKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVESMETKI CHAR(1) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0),
UCODE BIGINT,
BESTBEFORE TIMESTAMP = null)
AS 
 ^

ALTER PROCEDURE LOGREORDERPORID AS 
 ^

ALTER PROCEDURE LOGSAVEAMBALAJ (DOCTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DOCTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATEDOCT DATE,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO INTEGER,
DOCDATE DATE,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE LOGSAVEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
OLDBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE LOGSAVEBARCODEMASK (OBEKTID INTEGER,
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEBOXARTIKUL (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
BOXCKLADSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DYNAMICSDRINFOARTNOMER INTEGER,
BOXCKLADDYNAMICSDRID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEBRAK (OBEKTID INTEGER,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE LOGSAVEBRAKINCKLAD (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVECLEARROW (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
SAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
LOGSAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEDEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
CHRUPDATE CHAR(1) CHARACTER SET WIN1251,
FROMOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEDELIVERY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEDELIVERYSLAVEDB (OBEKTID INTEGER,
OBEKTIDLOG INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEDOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGSAVEDOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGSAVEDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGSAVEDOCTINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSAVENEWART CHAR(1) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
PRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DATEDOCT TIMESTAMP,
GODNODO DATE,
AVGPRICEWOTAX DCURR,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEEARNEST (NOMER INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PAYSUMA DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEFAKTURI (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY CHAR(1) CHARACTER SET WIN1251,
FAKTURATYPE INTEGER,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE CHAR(1) CHARACTER SET WIN1251,
TYPEAVANS CHAR(1) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
F CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DOCTNOMER INTEGER,
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOGDOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE LOGSAVEGROUPITEM (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEGRYPA (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEHTTPORDERS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGSAVEINVOICETOTAL (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
TOTAL DCURR,
VATTOTAL DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEMONEYINOPER (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVENEWARTFROMPOS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVENEWARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
MAXTO DCURR,
CKLADSTOCKGROUPID INTEGER,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVENEWARTINSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVENEWBOXCKLAD (SDRID INTEGER,
OBEKTID INTEGER,
SALEARTNOMER INTEGER,
DYNAMICSDRNUM INTEGER,
OTSTOREID INTEGER,
OTDINAMICSTORE CHAR(1) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
DYNAMICSDRGRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDRSELLARTNOMER INTEGER,
QTY DQTY,
NETQTY DQTY,
QTYPERCENTAGE DQTY,
PRICEPERCENTAGE DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVENEWRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
RECHSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION INTEGER,
OTNETKOL DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEORDERITEM (OBEKTID INTEGER,
SALEARTNOMER INTEGER,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEORDERS (ORDERID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
SAVED CHAR(1) CHARACTER SET WIN1251,
CHREDIT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEOUTPROD (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEOUTSTOKIINCKLAD (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP)
AS 
 ^

ALTER PROCEDURE LOGSAVEPARTNERPRICELISTID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEPARTNERSERVICEUSER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERCODE VARCHAR(10) CHARACTER SET WIN1251,
SERVICETYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMRAZCR DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKADATE TIMESTAMP,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINOBEKTID INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE LOGSAVEPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE LOGSAVEPFINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP)
AS 
 ^

ALTER PROCEDURE LOGSAVEPOR (PORID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE LOGSAVEPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVERAZXODI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGSAVERECH (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
AS 
 ^

ALTER PROCEDURE LOGSAVEREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE LOGSAVEREVINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
RAZKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER INTEGER,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
FROMSTOCKATTRIBUTE01_ID INTEGER,
FROMSTOCKATTRIBUTE02_ID INTEGER,
FROMSTOCKATTRIBUTE03_ID INTEGER,
FROMSTOCKATTRIBUTE04_ID INTEGER,
FROMSTOCKATTRIBUTE05_ID INTEGER,
TOSTOCKATTRIBUTE01_ID INTEGER,
TOSTOCKATTRIBUTE02_ID INTEGER,
TOSTOCKATTRIBUTE03_ID INTEGER,
TOSTOCKATTRIBUTE04_ID INTEGER,
TOSTOCKATTRIBUTE05_ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVETEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
SALESPRICE DCURR,
PERCTO NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGSAVETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVETIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSAVEVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
VLOJENOSTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
PORTION DQTY,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE LOGSAVEZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ZAGSDRID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE LOGSAVEZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE LOGSETACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETARTIKULALTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETARTIKULDEFPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETARTIKULLASTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCAKERESERVATIONSSTATUS (ID INTEGER,
OBEKTID INTEGER,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCASHONDELIVERY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTPAY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCKLADGANCHEV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GANCHEV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCKLADQTY (OBEKTID INTEGER,
DEFCKLADID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
ISACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCKLADSTOCKACTIV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADSTOCKGROUPID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETCLEARROWSSMETKANO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETDEFCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETDEFDANNIFIRMA (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETDEFFISKALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETLOTTERYSALESDTSEND (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTSEND TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETMATERIALPACKAGE (OBEKTID INTEGER,
UCODE BIGINT,
PACUCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETSALESCKLADLOCKBONUSPOINT (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETSALESCKLADLOTTERY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
LOTTERY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
MISTRALTCOLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETUSERDEFMONEYIN (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSETUSERSDTLASTLOG (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSPDELARTOTCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSPEDITARTINCKLAD (OLDOBEKTID INTEGER,
OLDARTNOMER INTEGER,
OLDCKLADID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
SALESARTNOMER INTEGER,
CANSALES CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
KINDTYPE INTEGER)
AS 
 ^

ALTER PROCEDURE LOGSPNAME (SPNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (DATA VARCHAR(30000) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGSPPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEAREAINFO (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEARTIKUL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBOXCKLAD (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBOXCKLADSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEBYPRODKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADALTERDANGROUP (OBEKTID INTEGER,
UNIQUECODE BIGINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORBACKSTOKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORDOCT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFOROUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADBLOCKFORZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADDANGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OPTQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADTYPEARTIKULID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADTYPEMEASURE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECKLADWEIGHT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NETWEIGHT DQTY,
GROSSWEIGHT DQTY,
MINKOLORDER DQTY,
PACKKOL DQTY,
TARAKOL DQTY,
TRANSPORTPACK DQTY,
TOLERANSKOL DQTY,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATECURRENCYTYPES (OBEKTID INTEGER,
OLDNAME VARCHAR(15) CHARACTER SET WIN1251,
NEWNAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDANNIFIRMA (OLDID INTEGER,
OLDOBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(30) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDISCOUNTBYPACKACTIVE (ID INTEGER,
OBEKTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE LOGUPDATEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE LOGUPDATEFAKTURICANCEL (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATELOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMATDELIVERYDATE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMATERIAL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMATLASTEXEC (OBEKTID INTEGER,
EDITBYUSERID INTEGER,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMATPROPERTY (OBEKTID INTEGER,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
PACKAGEQTY DQTY,
TOLERANCE DQTY,
MINORDERQTY DQTY,
SPECIFICATION VARCHAR(40) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
MINKOL DQTY,
OPTIMALQTY DQTY,
COUNRTYORIGINID INTEGER,
DISCOUNTPERCENTAGE NUMERIC(6, 2),
EXPIRATIONDATE INTEGER,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(512) CHARACTER SET WIN1251,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UCODE BIGINT,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMONEYINNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(25) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEMONEYOPERKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERGROUP (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERNOTE (OBEKTID INTEGER,
OLDNOMER INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERNOTEBYGROUPGRYPA (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERNOTESDR (ID INTEGER,
OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERSSDRSAVED (OBEKTID INTEGER,
ORDERID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERBONUSPOINT (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
BONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERS (OBEKTID INTEGER,
EDITNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERSEMPLOYEE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERSNOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPARTNERSSTORE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPRICELISTNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE LOGUPDATEPRICELISTNAMESDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEPROMOTIONSALESPRICE (OBEKTID INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
 ^

ALTER PROCEDURE LOGUPDATERATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATERECH (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATERECHDANGROUP (OBEKTID INTEGER,
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATERECHSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE LOGUPDATERECHTYPEMEASURE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADACTIVEDATE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADARTNOMER (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADBLOCKED (OBEKTID INTEGER,
ARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADELETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADPERCNAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTERID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESALESCKLADTM_ACTIVE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESMETKIKACA (OBEKTID INTEGER,
NOMER INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESMETKIPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESTREETINFO (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETAG (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETEKORDERSBYTELSDRPOR (ID INTEGER,
OBEKTID INTEGER,
POR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETEKORDERSBYTELSTATUS (OBEKTID INTEGER,
NOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEAREA (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEMEASURE (OLDNAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEMEASUREID (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPEPARTNERS (OLDTYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATETYPETRANSPORT (OLDNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEUSERSPASS (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NEWPASS VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEUSERSPASS1 (OBEKTID INTEGER,
OLDPASS1 VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS1 VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEUSERSPOSITIONS (OBEKTID INTEGER,
OLDPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
NEWPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEVLOJENOSTCHRACTIVE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDATEZAG (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY)
AS 
 ^

ALTER PROCEDURE LOGUPDATEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE LOGUPDBRAKCHRCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDCKLADDEFPARTNERNOMER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDFUTUREPRICE (OBEKTID INTEGER,
OLDPRICELISTID DID,
OLDARTNOMER INTEGER,
OLDDTSTART TIMESTAMP,
OLDPRICE DCURR,
NEWPRICELISTID DID,
NEWARTNOMER INTEGER,
NEWDTSTART TIMESTAMP,
NEWPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDHTTPORDERSSTATUS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDOBEKTILOGCKLADQTY (OBEKTID INTEGER,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPARTNERSSETINGSKARTAV_TO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPRICELISTLOADFROMPRLIST (ID NUMERIC(18, 0),
OBEKTID INTEGER,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDPROMBARCODES (OBEKTID INTEGER,
OLDPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
NEWPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDRAZFASOVKA (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDRAZFASOVKASDR (ID INTEGER,
OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDRECHWEIGHTSCALENAME (OBEKTID INTEGER,
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSALESCKLADEXTRAMERED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSALESCKLADFISKALPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
FISKALPRINTERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSALESCKLADPRINTER1ID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTER1ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
OLDSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
NEWSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSCI_DISCOUNTRATE (OBEKTID INTEGER,
CATEGORYNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTRATE NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDSECURITYROLE (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDTEKORDERSBYTELDTPORREADY (OBEKTID INTEGER,
NOMER INTEGER,
DTPORREADY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDTEKORDERSBYTELDTPRINTPOR (OBEKTID INTEGER,
NOMER INTEGER,
DTPRINTPOR TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDTEKORDERSBYTELD_USER (OBEKTID INTEGER,
NOMER INTEGER,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDTEKORDERSBYTELSDRPRIK (ID INTEGER,
OBEKTID INTEGER,
PRIK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE LOGUPDTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE MAKELOG (TYPEDB CHAR(1) CHARACTER SET WIN1251)
RETURNS ("LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE MOVEROWTEKSMETKA (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NEWMACA INTEGER,
NEWKOL DQTY,
NEWKLIENT INTEGER,
NEWOPER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE MRGETARTIKULS (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE MRGETSTOCKGROUP (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE NEXTSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE OBEKTIAFTERUPDATE1 (OLDID INTEGER,
NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE OPENLOGSYNC (OBEKTID INTEGER,
DTSTART TIMESTAMP)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE OPENSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE OTCHETIFPMAXDTOTCHET (OBEKTID INTEGER)
RETURNS (MAXDTOTCHET TIMESTAMP,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE OUTBOXCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE OUTCKLADBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE OUTDOCTBYPART (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
IZKOL DQTY)
AS 
 ^

ALTER PROCEDURE OUTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTUNIQUENOMER BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE OUTFROMSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE OUTORDERNOTESDR (OBEKTID INTEGER,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
QTY DQTY,
EDITBYUSERID INTEGER,
TYPEACTION SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
TYPEDB SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ORDERNOTEAVGPRICE DCURR,
ORDERNOTELASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE OUTRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE OUTSTOKI (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SALEARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE OUTVLOJENOSTFROMCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDITBYUSERID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE OUTZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
KOL DQTY,
EDITBYUSERID INTEGER,
TYPEACTIONID SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE PREVSMETKA (OBEKTID INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER)
RETURNS (SMETNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE PRIKBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEBRAK CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBRAK CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE PRIKORDERS (OBEKTID INTEGER,
ORDERSSDRID INTEGER,
USERID INTEGER,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAMES VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE PRIKOUTSTOKI (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
SUMMONEYIN DCURR,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
OUTCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
LOGSAVEOUTPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
UCODE BIGINT,
BYPROD CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE PRIKPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEPF CHAR(1) CHARACTER SET WIN1251,
LOGSAVEPF CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PFTIME TIME,
EXECDATE TIMESTAMP,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE PRIKPOR (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE PRIKREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SAVEREV CHAR(1) CHARACTER SET WIN1251,
LOGSAVEREV CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE PRIKSMETKA (SMETKANOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PRDATE TIMESTAMP,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
CHROUTFROMCKLAD CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SUMSMETKA DCURR,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
AVGPRICE DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVESMETKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVESMETKI CHAR(1) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
OTSALECKLADID NUMERIC(18, 0),
UCODE BIGINT,
BESTBEFORE TIMESTAMP = null)
AS 
 ^

ALTER PROCEDURE QACTIONS (DATEOT DATE,
DATEDO DATE,
I SMALLINT,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QACTIONS0 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QACTIONS1 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QACTIONS2 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNOMER INTEGER,
ACTIONDATE DATE,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNOMER NUMERIC(18, 0),
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QACTIONS3 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTYSALES DQTY,
SUMSALES DCURR,
QTYDOCT DQTY,
SUMDOCT DCURR,
QTYBRAK DQTY,
SUMBRAK DCURR,
QTYBACKSTOKI DQTY,
SUMBACKSTOKI DCURR,
QTYOUTSTOKI DCURR,
SUMOUTSTOKI DQTY)
AS 
 ^

ALTER PROCEDURE QACTIONSTYPE RETURNS (ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QACTIVEPROMOTIONS (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
NALKOL DQTY,
ARTIKUL1 D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE QACTIVEPROMOTIONSALESPRICE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QALEXLOG_EXPORTART (OBEKTID INTEGER)
RETURNS (BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
BARCODE2 VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QAREAINFO RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE QARTBYVEZNI (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
RETURNS (VEZNANO NUMERIC(18, 0),
VEZNINAMES VARCHAR(20) CHARACTER SET WIN1251,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QARTIKULNAMES RETURNS (ID INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE QARTIKULORDER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DATEFOR TIMESTAMP,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
ORDERARTIKUL D_ARTIKULNAME,
ORDERKOL DQTY,
ORDERTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ORDERSSDRID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
NALKOL DQTY)
AS 
 ^

ALTER PROCEDURE QBACKSTOKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
NOMER INTEGER,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE QBACKSTOKISDR (OBEKTID INTEGER,
BACKSTOKINOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR)
AS 
 ^

ALTER PROCEDURE QBARCODEMASK (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QBEKTIOPENRECH RETURNS (OBEKTID INTEGER,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE QBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKDELIVERY CHAR(1) CHARACTER SET WIN1251,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
BLOCKSALES CHAR(1) CHARACTER SET WIN1251,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
CANSALES CHAR(1) CHARACTER SET WIN1251,
CANDELIVERY CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QBONUSPOINTBYART (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER)
AS 
 ^

ALTER PROCEDURE QBONUSPOINTBYOBOR (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE QBRAKBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEBRAK DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
PRICE DCURR,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QBRAKSDR (OBEKTID INTEGER,
BRAKNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE QBROCHURE (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QBROCHUREDETAILS (OBEKTID INTEGER,
BROCHUREID INTEGER)
RETURNS (ID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QBYPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKGROUP1 VARCHAR(255) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QBYPRODREV (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SUMKOL DQTY,
SUMREVRAZKOL DQTY,
DEFKOL DQTY,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADARTNOMER (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INARTNOMER INTEGER)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
LASTREVDATE TIMESTAMP,
LASTBRAKDATE TIMESTAMP,
LASTBACKSTOKADATE TIMESTAMP,
LASTSALESDATE TIMESTAMP,
LASTOUTPRODDATE TIMESTAMP,
DOCTTO NUMERIC(6, 2),
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
TYPEMEASUREID INTEGER,
TYPEARTIKULID INTEGER,
SYXRANENIEID INTEGER,
PRODUCERID INTEGER,
DANGROUPID INTEGER,
MINQTY DQTY,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
CKLADSTOCKGROUPID INTEGER,
UNIQUECODE BIGINT,
CATEGORY VARCHAR(40) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
TOLERANCE DQTY,
PACKAGEQTY DQTY,
KINDTYPE NUMERIC(18, 0),
ESLID VARCHAR(100) CHARACTER SET WIN1251,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADBLOCKARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
FORARTNOMER INTEGER = null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ACTIV CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADBYDATE (DTDATE TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
AVGDOCTPRICE DCURR,
DEFSALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADBYDATEADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
IZKONSIGLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADBYPARTNERSARTNOMER (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PARTNERSARTNOMERID INTEGER,
PARTNERARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE QCKLADBYSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADSTOCKGROUPID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE QCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
QTY DQTY,
ARTIKUL D_ARTIKULNAME,
MINKOL DQTY,
OPTQTY DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QCKLADQTYBYDATE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCKLADQTYBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
STARTQTY DQTY,
STARTAVGPRICE DCURR,
STARTLASTDOCTPRICE DCURR,
STARTAVGPRICE1 DCURR,
STARTLASTDOCTPRICE1 DCURR,
SUMINQTY DQTY,
AVGINAVGPRICE DCURR,
AVGINLASTDOCTPRICE DCURR,
AVGINAVGPRICE1 DCURR,
AVGINLASTDOCTPRICE1 DCURR,
SUMOUTQTY DQTY,
AVGOUTAVGPRICE DCURR,
AVGOUTLASTDOCTPRICE DCURR,
AVGOUTAVGPRICE1 DCURR,
AVGOUTLASTDOCTPRICE1 DCURR,
ENDQTY DQTY,
ENDAVGPRICE DCURR,
ENDLASTDOCTPRICE DCURR,
ENDAVGPRICE1 DCURR,
ENDLASTDOCTPRICE1 DCURR,
STARTDEFSALESPRICE DCURR,
ENDDEFSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QCKLADSTOCKGROUP RETURNS (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCLEARROWREASONS (OBEKTID INTEGER)
RETURNS (ID INTEGER,
REASON D_REASON)
AS 
 ^

ALTER PROCEDURE QCLEARROWS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QCURRENCYTYPES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDAILYMENU RETURNS (ID INTEGER,
NUM INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DTDATE DATE,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE SMALLINT,
BLOCKED INTEGER)
AS 
 ^

ALTER PROCEDURE QDANGROUP RETURNS (ID INTEGER,
OBEKTID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDANNIFIRMA RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
OBEKTID INTEGER,
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDEBITNOSALDO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDEBITNOSALDOBYPARTNERS (OBEKTID INTEGER,
TYPEDB SMALLINT,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OUTTYPEDB SMALLINT,
DTDATE TIMESTAMP,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDISCOORDERS RETURNS (ID INTEGER,
OBEKTID INTEGER,
ORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
ORDERDATE DATE,
FORDELIVERYDATE DATE,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
SMETKINOMER INTEGER,
DTSAVE TIMESTAMP,
TYPEDB SMALLINT,
DISCOTYPE SMALLINT)
AS 
 ^

ALTER PROCEDURE QDISCOUNTBYHOURS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDISCOUNTBYHOURSNAMES (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDISCOUNTBYPACK RETURNS (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
ARTIKUL1 D_ARTIKULNAME,
TYPEMEASURE1 VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTID1 NUMERIC(18, 0),
PRICELISTNAME1 VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER2 INTEGER,
ARTIKUL2 D_ARTIKULNAME,
TYPEMEASURE2 VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTID2 NUMERIC(18, 0),
PRICELISTNAME2 VARCHAR(20) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDISCOUNTBYSALES RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMES VARCHAR(20) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE QDISCOUNTBYSALESNAME (OBEKTID INTEGER)
RETURNS (NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DOCBYDELIVERYID INTEGER,
MISTRALEXPORT CHAR(1) CHARACTER SET WIN1251,
PARTNERNUM INTEGER,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
CHECKUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
UNIQUENUM INTEGER)
AS 
 ^

ALTER PROCEDURE QDOCTBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT DATE,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
PRICE DCURR,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
DOCTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE QDOCTBYDOC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
CHECKUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDOCTBYPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
 ^

ALTER PROCEDURE QDOCTSDR (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDOCTYPENAMES RETURNS (ID INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
ID INTEGER)
AS 
 ^

ALTER PROCEDURE QDOGDOCTPRICE1 (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE QDOGDOCTPRICEBYOBEKTI (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QDOGDOCTPRICEGROUP (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
PERCTO NUMERIC(6, 2),
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEARNEST (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTCLOSE TIMESTAMP,
SMETKANO INTEGER,
EXTRAPAYSUMA DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
PAYSUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEARNESTBYVALUE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
DTCLOSE TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(256) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEARNESTOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
MONEYOBOR DCURR,
DATEONLY DATE)
AS 
 ^

ALTER PROCEDURE QEARNESTSDR (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QEDITDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEDITOUTPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEDITSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
LASTDOCTPRICE DCURR,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PRDATEONLY DATE,
PRTIMEONLY TIME,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEXPORTARTIKULSTOMISTRALM (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
QTY DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
GODNODO DATE,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
LASTEDITDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QEXPORTBARCODEMASKTOMISTRALM (OBEKTID INTEGER)
RETURNS (PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM VARCHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEXPORTBARCODETOMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEXPORTBRAK (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (BRAKNOMER INTEGER,
DATEBRAK TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
SUMDOCTPRICE DCURR,
SUMSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QEXPORTDOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMDOCT DCURR,
SALESPRICE DCURR,
DOCTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMDOCTSALESPRICE DCURR,
DATEDOCT TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QEXPORTDOCTTOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
DOCTNOMER INTEGER,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DCURR,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
TYPEMEASURENAMEID INTEGER,
DOCTYPEID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE QEXPORTFAKTURITOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
FNOMER NUMERIC(18, 0),
DATEFAK DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(50) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
SALESPRICE DCURR,
SUMA DCURR,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE QEXPORTGROUPTOMISTRALM (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DECODENAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEXPORTOUTSTOKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMOUTSTOKI DCURR,
OUTSTOKINOMER INTEGER,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMOUTSTOKISALESPRICE DCURR,
DTOUTPROD TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QEXPORTOUTSTOKITOSANTAPRIMA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAMEID INTEGER,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DCURR,
EDPRICE DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
TYPEMEASURENAMEID INTEGER,
DOCTYPEID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE QEXPORTPRICELISTTOMISTRALM (OBEKTID INTEGER,
CHRSTOCKGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ID NUMERIC(18, 0),
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
QTY DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QEXPORTREV (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (REVNO INTEGER,
DATEREV TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
RAZKOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
SUMRAZDOCTPRICE DCURR,
SUMRAZSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QEXPORTSALESTOSANTAPRIMA (DATEOT DATE,
DATEDO DATE)
RETURNS (OBEKTNAMEID INTEGER,
SMETNOMER INTEGER,
PRDATE TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERBYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
ARTIKULID INTEGER,
KOL DQTY,
SALESPRICE DCURR,
TYPEACTION SMALLINT,
TYPEMEASURENAMEID INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE QEXPORTSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCDATE DATE,
DOCNO NUMERIC(18, 0),
DTBACK DATE,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
CODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SUMSALES DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
SMETKANOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SUMSALESDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QEXPSALESCKLADTOMOBREST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURI (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID,
SELNOMER INTEGER = null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
FROMDOCNOMER NUMERIC(18, 0),
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICEVAT FLOAT)
AS 
 ^

ALTER PROCEDURE QFAKTURIBYDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
SUMA DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
TYPEDB SMALLINT,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DTPAY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
FAKTURATYPECODE INTEGER,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURIHOWPAY (HOWPAYCODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (HOWPAY VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURITOTAL (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY VARCHAR(20) CHARACTER SET WIN1251,
FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251,
TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX NUMERIC(10, 2),
SUMNODDS DCURR,
SUMDDS DCURR,
TOTAL DCURR,
CANCEL CHAR(1) CHARACTER SET WIN1251,
TYPEDB INTEGER,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DTPAY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURITYPE (FAKTURATYPECODE INTEGER)
RETURNS (FAKTURATYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURITYPEAVANS (TYPEAVANSCODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (TYPEAVANS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFAKTURITYPEIZVESTIE (TYPEIZVESTIECODE CHAR(1) CHARACTER SET WIN1251)
RETURNS (TYPEIZVESTIE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QFINDARTIKULSBYNAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
NAME D_ARTIKULNAME)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QFINDPARTNERS (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
PARTNERNOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE QFISKALPRINTERS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QGROUPID (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QGROUPRAZ (OBEKTID INTEGER)
RETURNS (RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QGROUPSMETKIBYDAYID (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DTDATE DATE,
OBEKTNAMEID INTEGER,
ARTNOMER INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPAID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE QGROUPVLOJENOST (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
SALESPRICE DCURR,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QHTTPORDERS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(512) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QH_OBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QINFOBYSERIALNUMBER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QINRAZCR (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QINRAZCRBYPARTNERNOMER (PARTNERNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QLOGBONUSPOINT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
BONUSPOINTDELTA INTEGER,
OLDBONUSPOINT INTEGER)
AS 
 ^

ALTER PROCEDURE QLOGCKLAD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATELOG TIMESTAMP,
OPERTYPE VARCHAR(30) CHARACTER SET WIN1251,
OLDOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OLDARTNOMER INTEGER,
OLDARTIKUL D_ARTIKULNAME,
OLDKOL DQTY,
OLDTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDAVGPRICE DCURR,
OLDLASTDOCTPRICE DCURR,
OLDMINKOL DQTY,
OLDCANSALES CHAR(1) CHARACTER SET WIN1251,
OLDSALESARTNOMER INTEGER,
NEWOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NEWCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWARTNOMER INTEGER,
NEWARTIKUL D_ARTIKULNAME,
NEWKOL DQTY,
NEWTYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
NEWAVGPRICE DCURR,
NEWLASTDOCTPRICE DCURR,
NEWMINKOL DQTY,
NEWCANSALES CHAR(1) CHARACTER SET WIN1251,
NEWSALESARTNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
OLDCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
NEWCHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
OLDAVGPRICE1 DCURR,
NEWAVGPRICE1 DCURR,
OLDLASTDOCTPRICE1 DCURR,
NEWLASTDOCTPRICE1 DCURR,
OLDKOLDELTA DQTY,
NEWKOLDELTA DQTY)
AS 
 ^

ALTER PROCEDURE QLOGCKLADQTY (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QLOGCKLADQTYADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
STARTQTY DQTY,
STARTAVGPRICE DCURR,
STARTLASTDOCTPRICE DCURR,
STARTAVGPRICE1 DCURR,
STARTLASTDOCTPRICE1 DCURR,
ENDQTY DQTY,
ENDAVGPRICE DCURR,
ENDLASTDOCTPRICE DCURR,
ENDAVGPRICE1 DCURR,
ENDLASTDOCTPRICE1 DCURR,
SUMDOCTKOL DQTY,
SUMDOCTPRICE DCURR,
SUMSALESKOL DQTY,
SUMSALESPRICE DCURR,
SUMOUTKOL DQTY,
SUMOUTKOLPRICE DCURR,
SUMREVKOL DQTY,
SUMREVPRICE DCURR,
SUMBACKSTOKAKOL DQTY,
SUMBACKSTOKAPRICE DCURR,
SUMIZKONSIGKOL DQTY,
SUMIZKONSIGPRICE DCURR,
SUMVLOJENOSTKOL DQTY,
SUMVLOJENOSTPRICE DCURR,
SUMBRAKKOL DQTY,
SUMBRAKPRICE DCURR,
SUMPFKOL DQTY,
SUMPFPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QLOGSENDTO_OFA RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QLOGSYNC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
LOGNO INTEGER,
DTSTART TIMESTAMP,
DTSTOP TIMESTAMP,
SYNCTIME INTEGER,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QMISTRALMFINDART (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTIKUL D_ARTIKULNAME,
SALESPRICE DCURR,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
NALQTY DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QMONEYINAUTOACCOUNT (OBEKTID INTEGER,
USERID NUMERIC(18, 0))
RETURNS (FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QMONEYINNAL (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
NAL DCURR)
AS 
 ^

ALTER PROCEDURE QMONEYINNAMES RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QMONEYOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
USERNAMESID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEDB SMALLINT,
INP CHAR(1) CHARACTER SET WIN1251)
RETURNS (MONEYOBOR DCURR)
AS 
 ^

ALTER PROCEDURE QMONEYOBORBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
SUMTEKSMETKI DCURR,
COUNTSMETKIWITHTO INTEGER)
AS 
 ^

ALTER PROCEDURE QMONEYOBORBYREPORTINGDATE (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(55) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
NUMBERCLIENTS INTEGER,
COUNTSMETKI INTEGER,
MONEYOBOR DCURR,
MONEYOBORBYDEFPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QMONEYOBORBYREPORTINGDATEGROUP (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(55) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
NUMBERCLIENTS INTEGER,
COUNTSMETKI INTEGER,
MONEYOBOR DCURR,
MONEYOBORBYDEFPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QMONEYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
 ^

ALTER PROCEDURE QMONEYOPER1 (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
 ^

ALTER PROCEDURE QMONEYOPER2 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE DATE,
DTHOUR TIME,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAL DCURR,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER)
AS 
 ^

ALTER PROCEDURE QMONEYTRANSFER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
FROMMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
TOMONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMA DCURR,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QNAL (INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 = null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 = null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
LASTREVDATE TIMESTAMP,
LASTBRAKDATE TIMESTAMP,
LASTBACKSTOKADATE TIMESTAMP,
LASTSALESDATE TIMESTAMP,
LASTOUTPRODDATE TIMESTAMP,
EXTRATYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EXTRATYPEMEASURESDR DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICEWOTAX DCURR,
AVGDELIVPRICEWOTAX DCURR,
NET DKOL,
GROSS DKOL,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(521) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QNALADVANCED (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
SUMIZKONSIGLV DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE QNALADVANCEDREV (REV1 INTEGER,
REV2 INTEGER,
INOBEKTIID D_INOBEKTIID)
RETURNS (NOREV1 INTEGER,
NALREV1 DQTY,
LVREV1 DQTY,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NALKOL DQTY,
NALLV DCURR,
DOCTKOL DQTY,
DOCTLV DCURR,
BRAKKOL DQTY,
BRAKLV DCURR,
SALESKOL DQTY,
SALESLV DCURR,
OUTKOL DQTY,
OUTLV DCURR,
REVKOL DQTY,
REVLV DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
BACKSTOKAKOL DQTY,
BACKSTOKALV DCURR,
IZKONSIGKOL DQTY,
SUMIZKONSIGLV DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
NOREV2 INTEGER,
NALREV2 DQTY,
LVREV2 DQTY)
AS 
 ^

ALTER PROCEDURE QNALANDSALESPRICE (OBEKTID INTEGER)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
LASTDOCTPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QNALBYATTRIBUTE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE QNALBYPART (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
KOL DQTY,
OPENKOL DQTY,
EDPRICE DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QNALBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMKOL DQTY,
FROMAVGPRICE DCURR,
SUMINKOL DQTY,
AVGINPRICE DCURR,
SUMOUTKOL DQTY,
AVGOUTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QOBEKTI RETURNS (ID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER,
PATHDB VARCHAR(255) CHARACTER SET WIN1251,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOBEKTINAMES RETURNS (ID INTEGER,
OBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOBOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATETIME TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
DATEONLY DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
MONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
OPERATION VARCHAR(30) CHARACTER SET WIN1251,
COUNTSMETKISDR INTEGER,
NUMBERCLIENTS INTEGER,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOBORBYACTION (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEOBOR DATE,
SUMDOCT DCURR,
SUMSALES DCURR,
SUMSTORNO DCURR,
SUMBRAK DCURR,
SUMOUTPROD DCURR,
SUMRAZXODI DCURR,
SUMREV DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMPERSONALFOOD DCURR)
AS 
 ^

ALTER PROCEDURE QOBORBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
NAD DCURR,
DISCOUNT DCURR,
DOCT DCURR,
IZKONSIG DCURR,
SUMRAZCR DCURR,
SUMTEKSMETKI DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMCLEARROWS DCURR)
AS 
 ^

ALTER PROCEDURE QOBORBYOPER1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OPER VARCHAR(50) CHARACTER SET WIN1251,
OBOR DCURR,
MONEYOBOR DCURR,
MONEYOBORK DCURR,
MONEYOBORB DCURR,
MONEYOBORST DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
COUNTSMETKI INTEGER,
COUNTSMETKISDR INTEGER)
AS 
 ^

ALTER PROCEDURE QOBOROTDOOTCHETFP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATETIMEOT TIMESTAMP,
DATETIMEDO TIMESTAMP,
OBORSALESPRICE DCURR,
OBORDOCTPRICE DCURR,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOPENMISTRALM RETURNS (ID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SESSIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE QORDERGROUP RETURNS (OBEKTID INTEGER,
NOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERNOTE RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
FINDSDR CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERNOTEBYGRYPA (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (ORDERNOTENOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERNOTEBYRECH RETURNS (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ORDERNOTENOMER INTEGER,
ORDERNOTENOTE VARCHAR(25) CHARACTER SET WIN1251,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE QORDERS (INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERS1 (SAVED CHAR(1) CHARACTER SET WIN1251)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERSBYDATE (OBEKTID INTEGER,
DATEOT TIMESTAMP,
DATEDO TIMESTAMP)
RETURNS (ORDERID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
ORDERSSDRID INTEGER,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERSBYDATE1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSEMPLOYEETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERSBYDATEFOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ORDERID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TABLENO INTEGER,
STAGENO INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
SUMPAY DCURR,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERSBYPARTNER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QORDERSSDR (OBEKTID INTEGER,
ORDERID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOUTPROD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OBEKTID INTEGER,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE QOUTPRODBYDOC (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
DATESAVED TIMESTAMP,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE QOUTPRODSDR (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOUTRAZCR (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QOUTRAZCRBYPARTNERNOMER (PARTNERNOMER INTEGER)
RETURNS (OBEKTID INTEGER,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DTBACK DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
OBEKTINAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPARTNERS (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
SUMSALES DCURR,
SUMDELIVERY DCURR,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
OBEKTID INTEGER,
ID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
KARTAVALIDITYTO TIMESTAMP,
PAYMENT_PERIOD INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
PARTNERNOTE D_PARTNERSNOTE,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPARTNERSBYKARTA (OBEKTID INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251)
RETURNS (PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
KARTAVALIDITYTO TIMESTAMP,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME)
AS 
 ^

ALTER PROCEDURE QPARTNERSEMPLOYEE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
BONUSPOINT INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMDELIVERY DCURR,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251,
OBEKTID INTEGER,
KARTAVALIDITYTO TIMESTAMP,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
TYPEPARTNERID INTEGER)
AS 
 ^

ALTER PROCEDURE QPARTNERSNAME (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER)
AS 
 ^

ALTER PROCEDURE QPARTNERSSTORE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
BONUSPOINT INTEGER,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMDELIVERY DCURR,
OBEKTID INTEGER,
KARTAVALIDITYTO TIMESTAMP,
PARTNERNOMER INTEGER,
TYPEPARTNERID INTEGER,
PAYMENT_PERIOD INTEGER,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE QPARTNERSSTORE1 (OBEKTID INTEGER)
RETURNS (NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSNAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE QPAYRAZCR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PAYSUMA DCURR,
SUMRAZCR DCURR,
PAYRAZCRACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
SMETKAACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPERMPOS RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID INTEGER,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPERMSKLAD RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID INTEGER,
P1NEW CHAR(1) CHARACTER SET WIN1251,
P2EDIT CHAR(1) CHARACTER SET WIN1251,
P3DEL CHAR(1) CHARACTER SET WIN1251,
P4BLOCK CHAR(1) CHARACTER SET WIN1251,
P5EXEC CHAR(1) CHARACTER SET WIN1251,
P6REPORT CHAR(1) CHARACTER SET WIN1251,
P7PRINT CHAR(1) CHARACTER SET WIN1251,
P8EXPORT CHAR(1) CHARACTER SET WIN1251,
P9 CHAR(1) CHARACTER SET WIN1251,
P10 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPERSONALFOOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFNOMER INTEGER,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE QPOR (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
DTSTARTCOOKING TIMESTAMP,
MISTRALTCOLOR INTEGER,
COUNTPOR INTEGER,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
GIVE_STATUS SMALLINT,
FORDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QPORBYMISTRALT_STATUS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
MISTRALT_STATUS SMALLINT)
RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PORID INTEGER,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
PORSDRID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
DTREADY TIMESTAMP,
COOKINGTIME SMALLINT,
COOKINGTIME1 SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
DTSTARTCOOKING TIMESTAMP,
COUNTPOR INTEGER,
SMETKANO INTEGER)
AS 
 ^

ALTER PROCEDURE QPRICELIST RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
 ^

ALTER PROCEDURE QPRICELISTNAMES RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
TIMEACTIVEFROM TIMESTAMP,
TIMEACTIVETO TIMESTAMP,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
DIGG INTEGER)
AS 
 ^

ALTER PROCEDURE QPRICINGPOLICY (OBEKTID INTEGER)
RETURNS (ID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPRINTETIKETI (OBEKTID INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
EXTRATYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SDR DQTY,
ARTIKUL1 D_ARTIKULNAME,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
ESLID VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPRODUCTIONREQUEST (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
STATUS SMALLINT,
FORDATE TIMESTAMP,
DOCTNOMER INTEGER,
OUTPRODNOMER INTEGER,
CKLADNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
REQUESTQTY DQTY,
PRODUCTIONQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONREQUESTSDRID INTEGER,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR,
DOCTDATE TIMESTAMP,
OUTPRODDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QPRODUCTIONREQUESTBYSTATUS (OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT)
RETURNS (DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
NOMER INTEGER,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
PRODUCTIONREQUESTSDRID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QPROFITBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
 ^

ALTER PROCEDURE QPROFITBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SUMADOCTPRICE DCURR,
SUMAPROFIT DCURR,
NAD NUMERIC(6, 2),
SUMCOST DCURR,
NADSUMSALESPRICE NUMERIC(6, 2),
SUMREV DCURR,
COUNTSMETKI INTEGER,
COUNTSMETKISDR INTEGER)
AS 
 ^

ALTER PROCEDURE QPROFITBYPERIOD1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SUMADOCTPRICE DCURR,
SUMAPROFIT DCURR,
NAD NUMERIC(6, 2),
SUMCOST DCURR,
NADSUMSALESPRICE NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE QPROMBARCODES RETURNS (ID INTEGER,
OBEKTID INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPROMOTIONBYQTY (OBEKTID INTEGER)
RETURNS (SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
BYQTY DQTY,
SALESPRICE DCURR,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
ID INTEGER,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QPROMOTIONSALESPRICE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPENAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
 ^

ALTER PROCEDURE QRATES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
CURRENCYTYPESFROM VARCHAR(15) CHARACTER SET WIN1251,
CURRENCYTYPESTO VARCHAR(15) CHARACTER SET WIN1251,
RATE FLOAT)
AS 
 ^

ALTER PROCEDURE QRAZCR (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRMAXSUM DCURR,
RAZCRMAXDAY INTEGER,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
PARTNERTYPE VARCHAR(30) CHARACTER SET WIN1251,
IBAN VARCHAR(24) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QRAZCRBYDTBACK (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
SUMA DCURR,
DTBACK DATE,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB INTEGER,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
ACTIONID SMALLINT)
AS 
 ^

ALTER PROCEDURE QRAZCRINFO (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMARAZCR DCURR,
PAYSUMA DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
SMETKADATE TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUMA DCURR,
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QRAZFASOVKI (INOBEKTID INTEGER)
RETURNS (ID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OTCKLAD VARCHAR(20) CHARACTER SET WIN1251,
OTARTNOMER BIGINT,
OTARTIKUL D_ARTIKULNAME,
OTTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OTKOL NUMERIC(6, 2),
OTPRICE NUMERIC(6, 2),
SEARCHNAME D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QRAZXODI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE)
AS 
 ^

ALTER PROCEDURE QRESERVEDARTIKULSBYPARTNERS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (ID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QREST_TABLES (OBEKTID INTEGER)
RETURNS (ID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVALUATION (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
TSDATETIME TIMESTAMP,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
OLDSALESPRICE DCURR,
NEWSALESPRICE DCURR,
NAL DQTY,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QREVBYATTRIBUTE (OBEKTID INTEGER,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(25) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVBYATTRIBUTESG (OBEKTID INTEGER,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(25) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVBYCKLADSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVBYDEFPARTNER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFPARTNERNUM INTEGER)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVBYSTOCKGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
DOCTPRICE DCURR,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TEMPREVID INTEGER,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEMPREVKOMKOL DQTY,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
STORE VARCHAR(40) CHARACTER SET WIN1251,
STOREID NUMERIC(18, 0),
OPENKOL DQTY)
AS 
 ^

ALTER PROCEDURE QREVGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SUMREVRAZKOL DQTY,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QREVIZIA (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
REVNO INTEGER,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
IZKOL DQTY,
LIPSIKOL DQTY,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
TYPEDB INTEGER,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DEFPARTNER VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSALDOSKLAD (DATETIMEOT TIMESTAMP,
DATETIMEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATESALDO TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
POLSUMAVG DCURR,
OTRSUMAVG DCURR,
POLSUMLASTDOCTPRICE DCURR,
OTRSUMLASTDOCTPRICE DCURR,
POLSUMSALESPRICE DCURR,
OTRSUMSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QSALESACTIVEPROMOTIONSALESPRICE (DTDATE TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 2),
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
MINQTY DQTY,
OPTQTY DQTY,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
DANGROUPID INTEGER,
LASTDELIVERYDATE TIMESTAMP,
OBEKTID INTEGER,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSALESBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (DATEONLY DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
 ^

ALTER PROCEDURE QSALESBYSERIALNUMBER (SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
DATESALES TIMESTAMP,
WARRANTY DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSALESCKLAD (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
CKLADARTNOMER INTEGER,
SALESPRICE DCURR,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
NAL DQTY,
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
OTCKLADID NUMERIC(18, 0),
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251,
UCODE BIGINT,
STORAGETYPE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSALESFORDISCO (DATEFROM TIMESTAMP,
DATETO TIMESTAMP,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (SMETKANOMER INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PRDATE TIMESTAMP,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
DISCOORDERNUMBER VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DISCOTYPE SMALLINT)
AS 
 ^

ALTER PROCEDURE QSALESKOLBYHOURS (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
P0_1 DCURR,
P1_2 DCURR,
P2_3 DCURR,
P3_4 DCURR,
P4_5 DCURR,
P5_6 DCURR,
P6_7 DCURR,
P7_8 DCURR,
P8_9 DCURR,
P9_10 DCURR,
P10_11 DCURR,
P11_12 DCURR,
P12_13 DCURR,
P13_14 DCURR,
P14_15 DCURR,
P15_16 DCURR,
P16_17 DCURR,
P17_18 DCURR,
P18_19 DCURR,
P19_20 DCURR,
P20_21 DCURR,
P21_22 DCURR,
P22_23 DCURR,
P23_24 DCURR)
AS 
 ^

ALTER PROCEDURE QSALESPRICE (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE QSAVEDREPBYCATEGORY (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (REPTITLE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSETTINGSALIASNAME (TYPEPROGRAM SMALLINT)
RETURNS (ALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSMETKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
LASTDOCTPRICE DCURR,
TYPEACTION VARCHAR(30) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
PRDATEONLY DATE,
PRTIMEONLY TIME,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITDATE TIMESTAMP,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
SMETKACOUNT INTEGER,
REPORTINGDATE DATE,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
SMETKISDRID NUMERIC(18, 0),
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEOPEN DATE,
WEIGHT DQTY,
DYNPAK SMALLINT,
WAYOFPAY VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOTE2 D_PARTNERSNOTE,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
PARTNERDRV VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSERVIC VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
DATEFORDELIVERY TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QSMETKIANDOPEN (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
OTYPE VARCHAR(20) CHARACTER SET WIN1251,
NOMER INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
AVGPRICE1 DCURR,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERDRV VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSERVIC VARCHAR(50) CHARACTER SET WIN1251,
OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE QSMETKIBYDAY (DATEOT DATE,
DATEDO DATE,
INOBEKTIID D_INOBEKTIID)
RETURNS (DTDATE DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSMETKIGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMSALES DCURR,
SUMSALESKOL DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
CKLADAVGDOCTPRICE DCURR,
CKLADLASTDOCTPRICE DCURR,
SALESPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE QSMETKINAL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
MAXTO NUMERIC(6, 2),
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSMETKINAL1 (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
SUMAVGPR DCURR,
LASTDOCTPRICE DCURR,
SUMLASTDOCTPR DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE QSMETKINAL_R (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SUMSALESKOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
SUMSALESPRICE DCURR,
NALKOL DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
MAXTO NUMERIC(6, 2),
PRODUCERNAME VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
OPTQTY DQTY,
MINKOL DCURR)
AS 
 ^

ALTER PROCEDURE QSMETKISDR (OBEKTID INTEGER,
SMETNOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DEFSALEPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
WEIGHT DQTY,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE QSPENTTIME (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
STARTDATE TIMESTAMP,
STOPDATE TIMESTAMP,
WORKTIME INTEGER,
STARTHOUR TIME,
STOPHOUR TIME,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251,
WORKTIME1 VARCHAR(8) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSPENTTIMEBYOPER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
WORKTIME1 VARCHAR(8) CHARACTER SET WIN1251,
POSITIONS VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSTOCKATTRIBUTE (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSTOCKATTRIBUTEGROUP (OBEKTID INTEGER,
ATTRIBUTENO INTEGER)
RETURNS (ID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTEID INTEGER)
AS 
 ^

ALTER PROCEDURE QSTOKIREGISTER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (DTDATE TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTKOL DQTY,
DOCTEDPRICE DCURR,
SALESKOL DQTY,
SALESEDPRICE DCURR,
ACTIONNAME VARCHAR(30) CHARACTER SET WIN1251,
OUTPRODKOL DQTY,
OUTPRODEDPRICE DCURR,
DOCDATE DATE,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
REVRAZKOL DQTY,
REVRAZLV DCURR,
NALBYDATEOT DQTY,
BACKSTOKIKOL DQTY,
BACKSTOKIEDPRICE DCURR,
BRAKKOL DQTY,
BRAKEDPRICE DCURR,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSTOKIUNDERMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
DEFPARTNERNOMER INTEGER,
LASTDOCTPRICE DCURR,
DEFPARTNERNAME VARCHAR(50) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
SALESCKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTPARTNERNOMER INTEGER,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERNOMER INTEGER,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSTOKIUNDERMINKOL1 (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
MINKOL DQTY,
KOL DQTY,
DEFPARTNERNOMER INTEGER,
LASTDOCTPRICE DCURR,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPTQTY DQTY,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
LASTDELIVERYDATE TIMESTAMP,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
CKLADSTOCKGROUPID INTEGER,
PACKAGEQTY DQTY)
AS 
 ^

ALTER PROCEDURE QSTOREDMESSAGES RETURNS (ID INTEGER,
OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QSTREETINFO RETURNS (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
TYPEAREAID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE QSUMDOCTBYCKLAD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMDOCT DCURR)
AS 
 ^

ALTER PROCEDURE QSUMEARNESTBYUSER (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
USERNAMESID INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMEARNEST DCURR)
AS 
 ^

ALTER PROCEDURE QSUMPROFIT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR)
AS 
 ^

ALTER PROCEDURE QSUMPROFITBYMONTH (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA1 DCURR,
SUMA2 DCURR,
SUMA3 DCURR,
SUMA4 DCURR,
SUMA5 DCURR,
SUMA6 DCURR)
AS 
 ^

ALTER PROCEDURE QSUMSALESBYGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
OBEKTID INTEGER)
RETURNS (SUMA DCURR)
AS 
 ^

ALTER PROCEDURE QSUMSALESNULLGROUP (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
OBEKTID INTEGER)
RETURNS (SUMA DCURR)
AS 
 ^

ALTER PROCEDURE QTEKORDERSBYTEL (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (TEKORDERSBYTELID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
TEKORDERSBYTELSDRID INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADDRESS VARCHAR(50) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTEKSMETKI (INOBEKTIID D_INOBEKTIID,
SELMACA INTEGER =null)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
SALESPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
DATEOPEN DATE,
SMETNOMER INTEGER,
MRROWNO INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
OBEKTID INTEGER,
ID NUMERIC(18, 0),
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
PARTNERNOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
SEARIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SUMA DCURR,
PRINTDOC CHAR(1) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID NUMERIC(18, 0),
DRV VARCHAR(50) CHARACTER SET WIN1251,
SALESREPRESEN VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREIK VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTEKSMETKIBYNOMER (OBEKTID INTEGER,
SMETNOMER INTEGER)
RETURNS (ID NUMERIC(18, 0),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
MACA INTEGER,
KLIENT INTEGER,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER,
DATEOPEN DATE,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
PRINTDOC CHAR(1) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
ORDERSID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID DCURR,
DELIV CHAR(1) CHARACTER SET WIN1251,
HOME CHAR(1) CHARACTER SET WIN1251,
HOMEROW CHAR(1) CHARACTER SET WIN1251,
RESERVATIONNOTE VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTEMPBACKSTOKI RETURNS (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY,
TEMPBACKSTOKIID INTEGER,
TEMPBACKSTOKISDRID INTEGER)
AS 
 ^

ALTER PROCEDURE QTEMPDELIVERY RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TEMPDELIVERYID INTEGER,
TEMPDELIVERYSDRID INTEGER,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE QTEMPOUTPROD RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
EDPRICE DCURR,
TEMPOUTPRODID INTEGER,
TEMPOUTPRODSDRID INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
OUTPRODDATE TIMESTAMP,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE QTEMPREV (INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
EDPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTEMPZAIAVKI RETURNS (TEMPZAIAVKIID INTEGER,
TEMPZAIAVKISDRID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSSTORENOMER INTEGER,
PARTNERSSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSEMPLOYEENOMER INTEGER,
PARTNERSEMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
FORDATE TIMESTAMP,
USERSID INTEGER,
USERSNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE QTYPEADDRESS RETURNS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTYPEAREA RETURNS (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER,
SERVEOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTYPEDOCUMENTS RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTYPEMEASURE RETURNS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTYPEMEASURECONV (OBEKTID INTEGER)
RETURNS (ID INTEGER,
CKLADID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
OLDTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
NEWTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE QTYPEMEASURENAME RETURNS (ID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QTYPEPARTNERS RETURNS (ID INTEGER NOT NULL,
OBEKTID INTEGER NOT NULL,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251 NOT NULL,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QUSERS (OBEKTID INTEGER)
RETURNS (ID NUMERIC(18, 0),
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE QUSERSBYREST_TABLES RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TABLENO INTEGER)
AS 
 ^

ALTER PROCEDURE QVEZNINAMES RETURNS (ID NUMERIC(18, 0),
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QVLOJENOST (OBEKTID INTEGER)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
FROMCKLADID NUMERIC(18, 0),
FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
SUMAVGPRICE DCURR,
SUMLASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
VLOJENOSTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PORTION DQTY,
NETQTY DQTY,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
CKLADSTOCKGROUP VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QVLOJENOSTSDR (OBEKTID INTEGER,
VLOJENOSTID INTEGER)
RETURNS (FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE QVLOJENOSTSDR1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER)
RETURNS (FROMCKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMTYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
QTY DQTY,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE QWEIGHTSCALES RETURNS (ID INTEGER,
OBEKTID INTEGER,
SCALENAME VARCHAR(20) CHARACTER SET WIN1251,
SCALETYPE SMALLINT,
PORTNO SMALLINT)
AS 
 ^

ALTER PROCEDURE QZAIAVKI (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALEPRICE DCURR,
TYPEDB INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE QZAIAVKIBYDATE (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB INTEGER,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OBEKTID INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE QZAIAVKIBYDATEZADOCT (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ZAIAVKANOMER INTEGER,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
TYPEDB INTEGER,
SUPPLY CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE QZAIAVKISDR (OBEKTID INTEGER,
ZAIAVKANOMER INTEGER,
TYPEDB SMALLINT)
RETURNS (CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE REORDERPORID AS 
 ^

ALTER PROCEDURE REORDERSMETKI AS 
 ^

ALTER PROCEDURE ROUNDPART2 (PART2 VARCHAR(30) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTPART2 VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE ROUNDPRICE (DIGG INTEGER,
PRICE DCURR)
RETURNS (OUTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE SAVEAMBALAJ (DOCTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DOCTID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
SALESPRICE DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEAREAINFO (OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
STREET VARCHAR(50) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEARTBYPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
SMETNOMER INTEGER,
PRDATE TIMESTAMP,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
TYPEDB SMALLINT,
ACTIONID SMALLINT,
DEFKOL DQTY,
FROMARTNOMER INTEGER,
FROMARTIKUL D_ARTIKULNAME,
FROMQTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMCKLAD VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
FROMPARTNO VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GODNODO DATE,
FROMGODNODO DATE,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
BRAK DQTY,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
SAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
LOGSAVEBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT)
AS 
 ^

ALTER PROCEDURE SAVEBACKSTOKIINCKLAD (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEBARCODE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CKLADARTNOMER INTEGER,
OLDBARCODE VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE SAVEBARCODEMASK (OBEKTID INTEGER,
PREFIKS VARCHAR(2) CHARACTER SET WIN1251,
KOD VARCHAR(5) CHARACTER SET WIN1251,
BKOL VARCHAR(7) CHARACTER SET WIN1251,
CHECKSUM VARCHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PARTNO CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEBRAK (OBEKTID INTEGER,
BRAKNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEBRAK TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE SAVEBRAKINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEBYPROD (OBEKTID INTEGER,
OTSMETNOMER INTEGER,
PRDATE TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
AVGPRICE DCURR,
TYPEDB INTEGER,
ACTIONID SMALLINT,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEBYPRODTMP (TMPROWID NUMERIC(18, 0),
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVECKLADBYPARTNERS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
DOCTPRICE DCURR,
KOL DQTY)
AS 
 ^

ALTER PROCEDURE SAVECLEARROW (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATECLEAR TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
DELFROMOPER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
SAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
LOGSAVECLEARROW CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
DATEOPEN DATE,
TIMEOPEN TIME,
REASON D_REASON,
SMETKANO INTEGER,
ACTIONID SMALLINT,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DEFSALESPRICE DCURR,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVECOUNTPOR (OBEKTID INTEGER,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
 ^

ALTER PROCEDURE SAVEDEBITNOSALDO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNEREMPLOYEENOMER INTEGER,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
SMETKANO INTEGER,
SUMADEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
CHRUPDATE CHAR(1) CHARACTER SET WIN1251,
FROMOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEDELIVERY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEDELIVERYLOG (OBEKTID INTEGER,
OBEKTIDLOG INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
EDPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
TYPEDB SMALLINT,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
INCKLAD CHAR(1) CHARACTER SET WIN1251,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEDOCT CHAR(1) CHARACTER SET WIN1251,
LOGSAVEDOCT CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0),
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEDOCBYDELIVERY (OBEKTID INTEGER,
DOCTNOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVEDOCBYOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DATESAVED TIMESTAMP,
TYPEDB SMALLINT,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOC2NO NUMERIC(18, 0),
DOC2TYPE VARCHAR(20) CHARACTER SET WIN1251,
DOC2DATE DATE,
DOC2SUM DCURR,
SETDTBACK CHAR(1) CHARACTER SET WIN1251,
DTBACK TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVEDOCT (OBEKTID INTEGER,
DOCTNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEDOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDOCT VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
PERCTO NUMERIC(6, 2),
FROMOUTPRODNO INTEGER,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
DOGDOCTPRICE DCURR,
DOGDOCTPRICEACTIVEFROM TIMESTAMP,
DOGDOCTPRICEACTIVETO TIMESTAMP,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
PRICEWITHOUTTAX CHAR(1) CHARACTER SET WIN1251,
EDPRICEWOTAX DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVEDOCTINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
PRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SALESPRICE DCURR,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSAVENEWART CHAR(1) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
AVGPRICE DCURR,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
TEMPVLOJENOSTNOMER INTEGER,
CHROUTVLOJENOST CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
PRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
DATEDOCT TIMESTAMP,
GODNODO DATE,
AVGPRICEWOTAX DCURR,
PRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SAVEBYPROD CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGQTY CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEEARNEST (NOMER INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
PAYPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
PAYSUMA DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEEDITDOCTNO (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVEEDITSMETKANO (OBEKTID INTEGER,
SMETKANOMER INTEGER,
TYPEDB SMALLINT,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVEEDITSMETKI (OBEKTID INTEGER,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SMETKANOMER INTEGER,
PRDATE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTRAZCRBACK DATE,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
EDITBYUSER VARCHAR(50) CHARACTER SET WIN1251,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
LASTDOCTPRICE DCURR,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
F CHAR(1) CHARACTER SET WIN1251,
EDITSMETKIID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEFAKTURI (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
DATETIMESAVE TIMESTAMP,
DATEFAK DATE,
MIASTO VARCHAR(20) CHARACTER SET WIN1251,
DATEPOR DATE,
HOWPAY CHAR(1) CHARACTER SET WIN1251,
FAKTURATYPE INTEGER,
R_NAME VARCHAR(200) CHARACTER SET WIN1251,
R_CITY VARCHAR(30) CHARACTER SET WIN1251,
R_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
R_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
R_MOL VARCHAR(40) CHARACTER SET WIN1251,
R_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
R_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
R_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
R_PRIEL VARCHAR(50) CHARACTER SET WIN1251,
R_LP VARCHAR(20) CHARACTER SET WIN1251,
D_NAME VARCHAR(200) CHARACTER SET WIN1251,
D_CITY VARCHAR(30) CHARACTER SET WIN1251,
D_ADRESS VARCHAR(200) CHARACTER SET WIN1251,
D_BULSTAT VARCHAR(20) CHARACTER SET WIN1251,
D_MOL VARCHAR(40) CHARACTER SET WIN1251,
D_BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
D_BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
D_BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
D_PREDAL VARCHAR(50) CHARACTER SET WIN1251,
DANIZVESTIEN VARCHAR(30) CHARACTER SET WIN1251,
REASONIZVESTIE VARCHAR(40) CHARACTER SET WIN1251,
TYPEIZVESTIE CHAR(1) CHARACTER SET WIN1251,
TYPEAVANS CHAR(1) CHARACTER SET WIN1251,
PERCAVANS NUMERIC(6, 2),
AVANSTEXT VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE CURR4,
F CHAR(1) CHARACTER SET WIN1251,
SUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTIDANOMER VARCHAR(20) CHARACTER SET WIN1251,
R_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
D_DDSNO VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
NOTE D_FAKTURINOTE,
NOTE1 D_FAKTURINOTE,
R_SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMDDS DCURR,
DOCTNOMER INTEGER,
DTPAY DATE,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
R_PARTNERNOMER INTEGER,
D_PARTNERNOMER INTEGER,
STOCKGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
ACTIONID SMALLINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
R_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
D_POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEFIKPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
 ^

ALTER PROCEDURE SAVEFIRSTDOGDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOGDOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE SAVEGROUPITEM (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEGROUPRAZ (OBEKTID INTEGER,
RAZXOD VARCHAR(50) CHARACTER SET WIN1251,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEGROUPSMETKIBYDAY (DATEOT DATE,
DATEDO DATE)
AS 
 ^

ALTER PROCEDURE SAVEGRYPA (OBEKTID INTEGER,
NOMER INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
OTARTNO INTEGER,
DOARTNO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
NAME2 VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (GROUPNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEHTTPORDERS (HTTPORDERSID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
ORDERNUMBER INTEGER,
CLIENTNAME VARCHAR(256) CHARACTER SET WIN1251,
DELIVERYINFO D_DELIVERYINFO,
DELIVERYNOTE D_DELIVERYNOTE,
DTSAVE TIMESTAMP,
F CHAR(1) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
PRODUCT_TYPE INTEGER,
PRODUCT_DISCOUNT NUMERIC(10, 2),
SMERKAROW INTEGER,
PERENT_ROW INTEGER,
POSITION_NOTE VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT)
RETURNS (OUTHTTPORDERSID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEINFOBYSERIALNUMBER (OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEINVOICETOTAL (OBEKTID INTEGER,
FAKTURINOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FNOMER NUMERIC(18, 0),
TOTAL DCURR,
VATTOTAL DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVELOGBONUSPOINT (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
BONUSPOINT INTEGER)
AS 
 ^

ALTER PROCEDURE SAVELOGCKLADQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTACTION TIMESTAMP,
TYPEACTION SMALLINT,
QTY DQTY,
EDPRICE DCURR,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ACTIONNUMBER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVELOGSENDTO_OFA (OBEKTID INTEGER,
DTSAVE TIMESTAMP,
CARDID VARCHAR(20) CHARACTER SET WIN1251,
SMETKANO INTEGER,
ARTIKULNAME D_ARTIKULNAME,
QTY DQTY,
SALESPRICE DCURR,
DISCOUNTRATE NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
STATUS SMALLINT,
ARTNOMER INTEGER,
DEFSALESPRICE DCURR,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVELOGSYNC (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
STATUS VARCHAR(256) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEMISTRALMZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE SAVEMONEYINOPER (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
SUMA DCURR,
ACTIONID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(100) CHARACTER SET WIN1251,
FROMUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
FROMPARTNERSTORENAME VARCHAR(50) CHARACTER SET WIN1251,
FROMPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCSUMA DCURR,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
POS VARCHAR(10) CHARACTER SET WIN1251,
NOTE1 VARCHAR(30) CHARACTER SET WIN1251,
SAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
LOGSAVEMONEYOPER CHAR(1) CHARACTER SET WIN1251,
RKONO INTEGER,
PKONO INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251,
PAYSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEM_TEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVENEWARTFROMPOS (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVENEWARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
KONSIG CHAR(1) CHARACTER SET WIN1251,
KONSIGKOL DQTY,
PARTNERNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
MAXTO NUMERIC(6, 2),
CKLADSTOCKGROUPID INTEGER,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVENEWARTINSALESCKLAD (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVENEWBOXCKLAD (SDRID INTEGER,
OBEKTID INTEGER,
SALEARTNOMER INTEGER,
DYNAMICSDRNUM INTEGER,
OTSTOREID INTEGER,
OTDINAMICSTORE CHAR(1) CHARACTER SET WIN1251,
OTARTNOMER INTEGER,
DYNAMICSDRGRYPA VARCHAR(50) CHARACTER SET WIN1251,
DYNAMICSDRSELLARTNOMER INTEGER,
QTY DQTY,
NETQTY DQTY,
QTYPERCENTAGE DQTY,
PRICEPERCENTAGE DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
RETURNS (OUTDYNAMICSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVENEWRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
RECHSDRID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(600) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION INTEGER,
OTNETKOL DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEOLDNO (OBEKTID INTEGER,
TYPEDB INTEGER,
OLDNO INTEGER,
NEWNO INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEOPENRECH (MATCODE INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
RETURNS (MCODE INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEORDERITEM (OBEKTID INTEGER,
SALEARTNOMER INTEGER,
TOUCHORDER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEORDERS (ORDERID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
SAVED CHAR(1) CHARACTER SET WIN1251,
CHREDIT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKGROUP VARCHAR(255) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
RETURNS (ID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEOUTPROD (OBEKTID INTEGER,
OUTPRODNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTOUTPROD TIMESTAMP,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
RAZCRSUMA DCURR,
DTBACK DATE,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
SUMMONEYIN DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDITDATE TIMESTAMP,
DODOCTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
DOCSUM DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
GODNODO DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
ZACKLAD VARCHAR(20) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGDOCTPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGDOCTPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVEOUTSTOKIINCKLAD (OBEKTID INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
EDPRICE DCURR,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERPRICELISTID (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERSERVICEUSER (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERCODE VARCHAR(10) CHARACTER SET WIN1251,
SERVICETYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERSSETINGS (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERSSUMDELIVERY (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMDELIVERY DCURR)
AS 
 ^

ALTER PROCEDURE SAVEPARTNERSSUMSALES (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
SUMSALES DCURR,
DTSALES DATE,
AUTOCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPAY TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
SUMRAZCR DCURR,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
SMETKADATE TIMESTAMP,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PAYDATE DATE,
PAYDOCNO NUMERIC(18, 0),
PAYDOCSUMA DCURR,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
KACA CHAR(1) CHARACTER SET WIN1251,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
MONEYINOBEKTID INTEGER,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEPF (OBEKTID INTEGER,
PFNOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
PFDATE TIMESTAMP,
PAYSUMA DCURR,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ENTERBYOPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
SCTIME TIME,
EXECDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVEPFINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
UCODE BIGINT,
KOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
CHRSTORNO CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
EDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE SAVEPOR (PORID INTEGER,
OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DTPOR TIMESTAMP,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STORNO CHAR(1) CHARACTER SET WIN1251,
MACA INTEGER,
KLIENT INTEGER,
POS VARCHAR(10) CHARACTER SET WIN1251,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
SALESPRICE DCURR,
ARTIKUL1 D_ARTIKULNAME,
SMETKANO INTEGER,
ACTIONID SMALLINT,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
COUNTPOR INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251,
SUMAPOR DCURR,
TYPEDB SMALLINT,
FORDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVEPRODUCTIONREQUEST (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DTSAVE TIMESTAMP,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
STATUS SMALLINT,
FORDATE TIMESTAMP,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
PRODUCTIONCOST DCURR,
PRODUCTIONEDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE SAVEPROGRAMSETTINGS (TYPEPROGRAM SMALLINT,
SETTINGSALIAS VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEPROMOTIONBYQTY (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
RETURNS (OUTID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVERAZFASOVKAINCKLAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
DATEDOCT TIMESTAMP,
TYPEDB SMALLINT,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVERAZXODI (OBEKTID INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
RAZDATE TIMESTAMP,
RAZNAME VARCHAR(50) CHARACTER SET WIN1251,
SUMA DCURR,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
ID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT)
AS 
 ^

ALTER PROCEDURE SAVERECH (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
INRECHSDRID INTEGER,
OTNETKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYPERCENTAGE DPERC,
PRICEPERCENTAGE DPERC)
RETURNS (OUTRECHSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEREV (OBEKTID INTEGER,
REVIZIANOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEREV TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOMKOL DQTY,
NAL DQTY,
RAZKOL DQTY,
RAZLV DCURR,
DOCTPRICE DCURR,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
COUNTART INTEGER,
COUNTCHECKART INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEREVALUATION (OBEKTID INTEGER,
ARTNOMER INTEGER,
OLDPRICE DCURR,
NEWPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
OPER VARCHAR(50) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE SAVEREVINCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
RAZKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTACTION TIMESTAMP,
TYPEDB SMALLINT,
ACTIONNUMBER INTEGER,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
LOGSAVELOGCKLADQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVEREVSTOCKBYATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
RAZKOL DQTY)
AS 
 ^

ALTER PROCEDURE SAVESALDOSKLAD AS 
 ^

ALTER PROCEDURE SAVESAPTYPEMEASURE (TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER INTEGER,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVESMETKI (SMETKANOMER INTEGER,
OBEKTID INTEGER,
PRDATE TIMESTAMP,
OPER VARCHAR(50) CHARACTER SET WIN1251,
KACA CHAR(1) CHARACTER SET WIN1251,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNEREMPLOYEE VARCHAR(50) CHARACTER SET WIN1251,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
DOCTPRICE DCURR,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
POS VARCHAR(10) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
RAZCRSUMA DCURR,
DOCNO NUMERIC(18, 0),
MACARE INTEGER,
KLIENTRE INTEGER,
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
PARTNERSTORENOMER INTEGER,
DTBACK DATE,
LASTDOCTPRICE DCURR,
BYPROD CHAR(1) CHARACTER SET WIN1251,
TYPEACTION SMALLINT,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSSHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
PARTNEREMPLOYEEEGN VARCHAR(20) CHARACTER SET WIN1251,
FISKALPRINTERNAMES VARCHAR(20) CHARACTER SET WIN1251,
STOCKATTRIBUTE01NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAMES VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAMES VARCHAR(25) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
EDITDATE TIMESTAMP,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
BONUSPOINT DCURR,
DEBITNOSALDO DCURR,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMLASTDOCTPRICE DCURR,
SUMAVGDOCTPRICE DCURR,
ORDERNOTE VARCHAR(250) CHARACTER SET WIN1251,
CKLADTYPE VARCHAR(10) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
WARRANTY DATE,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
MIXEDPAY CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERS VARCHAR(30) CHARACTER SET WIN1251,
CHAIRNO SMALLINT,
REPORTINGDATE DATE,
RAZCRNOTE1 VARCHAR(50) CHARACTER SET WIN1251,
RAZCRNOTE2 VARCHAR(50) CHARACTER SET WIN1251,
SMETKAPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
EXTRATYPEMEASUREQTY DQTY,
PRODUCTIONCOST DCURR,
SAVEBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DODOCTNOMER INTEGER,
DODOCTOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DOCDATE DATE,
PARTNERNOTE D_PARTNERSNOTE,
PARTNERSTORENOTE D_PARTNERSNOTE,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
TAKEAWAY CHAR(1) CHARACTER SET WIN1251,
FOREIGNER CHAR(1) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
DATEOPEN DATE,
WEIGHT DQTY,
DYNPAK SMALLINT,
FISCALBONNO INTEGER,
WAYOFPAY VARCHAR(20) CHARACTER SET WIN1251,
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
BESTBEFORE TIMESTAMP = null)
AS 
 ^

ALTER PROCEDURE SAVESMETKIBYDAY (DTDATE DATE,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
DOCTPRICE DCURR,
SALESPRICE DCURR,
GRYPA VARCHAR(255) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE SAVESTOCKATTRIBUTE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
FROMSTOCKATTRIBUTE01_ID INTEGER,
FROMSTOCKATTRIBUTE02_ID INTEGER,
FROMSTOCKATTRIBUTE03_ID INTEGER,
FROMSTOCKATTRIBUTE04_ID INTEGER,
FROMSTOCKATTRIBUTE05_ID INTEGER,
TOSTOCKATTRIBUTE01_ID INTEGER,
TOSTOCKATTRIBUTE02_ID INTEGER,
TOSTOCKATTRIBUTE03_ID INTEGER,
TOSTOCKATTRIBUTE04_ID INTEGER,
TOSTOCKATTRIBUTE05_ID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVETABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVETEKORDERSBYTEL (OBEKTID INTEGER,
NOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
POR CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP,
PRIK CHAR(1) CHARACTER SET WIN1251,
SAVEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
RETURNS (TEKORDERSBYTELSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETEKSMETKA (OBEKTID INTEGER,
SMETNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
KOL DQTY,
MACA INTEGER,
KLIENT INTEGER,
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
KLIENTNOMER INTEGER,
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
CUSTEMPLOYEEID NUMERIC(18, 0),
TIMEOPEN TIME,
NUMBERCLIENTS INTEGER,
NOTE VARCHAR(250) CHARACTER SET WIN1251,
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER,
DATEOPEN DATE,
MRROWNO INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
POS VARCHAR(10) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
DYNAMICSDR CHAR(1) CHARACTER SET WIN1251,
PARTNO VARCHAR(50) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
DISCOUNTBYPACKN INTEGER,
DATEPRINTSMETKA TIMESTAMP,
PORNO INTEGER,
SMETKANO INTEGER,
CHAIRNO SMALLINT,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
TM_ORDERSID INTEGER,
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251,
DOCDATE DATE,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251,
GODNODO DATE,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251,
PRICEF DCURR,
HTTPORDERSID INTEGER,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
SCI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
GETTI_CLIENTNUMBER VARCHAR(60) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
DISCOORDERNUMBER INTEGER,
PORHOUR TIME,
ORDERSID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251,
ADDEDBYOPER VARCHAR(50) CHARACTER SET WIN1251,
ORDERSOBEKTID INTEGER,
ORDERSOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251,
WEIGHT DQTY,
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR,
BEFTOBYQTYPID NUMERIC(18, 0),
NAPCODE VARCHAR(22) CHARACTER SET WIN1251,
TEMPPQTY CHAR(1) CHARACTER SET WIN1251)
RETURNS (ROWID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVETEMPBACKSTOKI (OBEKTID INTEGER,
NOMER INTEGER,
DATEBACK TIMESTAMP,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DQTY,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (TEMPBACKSTOKIID INTEGER,
TEMPBACKSTOKISDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETEMPDELIVERY (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
PRODUCTIONREQUESTSDRID INTEGER,
REPORTINGDATE DATE,
EDPRICE1 DCURR,
DOCTDATE TIMESTAMP,
FROMZAIAVKANOMER INTEGER,
SALESPRICE DCURR,
PERCTO NUMERIC(6, 2),
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
CHRFORCHECK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
FROMOBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
FROMOUTPRODNO INTEGER,
ZERONTASKENTRYID NUMERIC(18, 0),
ZERONINPUTID NUMERIC(18, 0),
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (TEMPDELIVERYID INTEGER,
TEMPDELIVERYSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETEMPOUTPROD (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
FROMPRODUCTIONREQUESTNOMER INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
OUTPRODDATE TIMESTAMP,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
RETURNS (TEMPOUTPRODID INTEGER,
TEMPOUTPRODSDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPEPRICE SMALLINT,
PRICELISTID NUMERIC(18, 0),
REVBYSTOCKGROUP CHAR(1) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOMKOL DQTY,
DTOPEN TIMESTAMP,
PARTNAME VARCHAR(50) CHARACTER SET WIN1251,
PARTID INTEGER)
RETURNS (ID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE SAVETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
VLOJENOSTSDRID INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TEMPVLOJENOSTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVETEMPZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
DTSAVE TIMESTAMP,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
FORDATE TIMESTAMP,
USERSID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
RETURNS (TEMPZAIAVKIID INTEGER,
TEMPZAIAVKISDRID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETIMEACTIVATION (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVRYSUNDAY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SAVETMPAVGINCOMEOUTGOARTIKULID (ID INTEGER,
ARTIKULID INTEGER)
AS 
 ^

ALTER PROCEDURE SAVETMPAVGINCOMEOUTGOARTNOMER (ID INTEGER,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SAVEUSERLASTLOG (OBEKTID INTEGER,
FUNC VARCHAR(100) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTLOG TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SAVEVLOJENOST (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
VLOJENOSTID INTEGER,
FROMCKLADID NUMERIC(18, 0),
FROMARTNOMER INTEGER,
QTY DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
VLOJENOSTSDRID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
PRODUCTIONCOST DCURR,
ESTIMATECOST DCURR,
PORTION DQTY,
NETQTY DQTY)
AS 
 ^

ALTER PROCEDURE SAVEZAG (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ZAGSDRID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE SAVEZAIAVKI (OBEKTID INTEGER,
NOMER INTEGER,
OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
DATEZAIAVKA TIMESTAMP,
DATEZADOCT TIMESTAMP,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ZABELEJKA VARCHAR(30) CHARACTER SET WIN1251,
OPER VARCHAR(50) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
F CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(40) CHARACTER SET WIN1251,
NALKOL DCURR,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
LOGONLY CHAR(1) CHARACTER SET WIN1251,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE SEARCHARTFROMSALESCKLAD (OBEKTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWPROMPRICE CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
KOL DQTY,
SALESPRICE DCURR,
LASTDOCTPRICE DCURR,
FIRSTBARCODE VARCHAR(40) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
KINDTYPE INTEGER)
AS 
 ^

ALTER PROCEDURE SEARCHARTFROMSALESCKLAD1 (OBEKTID INTEGER,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
FILTERBYGROUP CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SEARCHARTFROMSALESCKLAD2 (OBEKTID INTEGER,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
FILTERBYGROUP CHAR(1) CHARACTER SET WIN1251,
LIKECON VARCHAR(20000) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0))
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
SALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE SEARCHFORARTIKULNAME (OBEKTID INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SEARCHFORPARTNERSEMPLOYEENAME (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SEARCHFORPARTNERSNAME (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SEARCHFORPARTNERSSTORENAME (OBEKTID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (NOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SELECTCKLAD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251,
TAGS VARCHAR(255) CHARACTER SET WIN1251 =null,
TAGSVAL VARCHAR(255) CHARACTER SET WIN1251 =null)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
MINKOL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
CKLADID1 NUMERIC(18, 0),
STORAGNAME VARCHAR(50) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
KINDTYPENAME VARCHAR(50) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
UNIQUECODE BIGINT,
WHLOCATIONID INTEGER,
WHLOCATION VARCHAR(200) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SELECTCKLAD1 (OBEKTID INTEGER,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
MINKOL DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADSTOCKGROUPID INTEGER,
PACKAGEQTY DQTY)
AS 
 ^

ALTER PROCEDURE SELECTCKLADBYGROUP (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INGRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SUMA DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
CKLADID1 NUMERIC(18, 0),
STORAGNAME VARCHAR(50) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
KINDTYPENAME VARCHAR(50) CHARACTER SET WIN1251,
ADANGROUP CHAR(1) CHARACTER SET WIN1251,
UNIQUECODE BIGINT)
AS 
 ^

ALTER PROCEDURE SELECTCKLADBYGROUPMAX (INOBEKTID INTEGER,
INCKLADID NUMERIC(18, 0),
INGRYPA VARCHAR(50) CHARACTER SET WIN1251,
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
SUMA DCURR,
LASTDOCTPRICE DCURR,
WORKQTY DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
PARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
PARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
TEMPQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SELECTCKLADMAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
CHRSHOWBARCODE CHAR(1) CHARACTER SET WIN1251,
CHRSHOWDOGPRICES CHAR(1) CHARACTER SET WIN1251)
RETURNS (ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
KOL DQTY,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
SALESPRICE DCURR,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
DEFPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
DEFPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
WORKQTY DQTY,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
BLOCKARTIKUL CHAR(1) CHARACTER SET WIN1251,
TEMPQTY DQTY,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
LASTEDITDATE TIMESTAMP,
LASTDELIVERYDATE TIMESTAMP,
DANGROUPTAX DCURR,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
ISPROMPRICE CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
DANGROUPID INTEGER,
AVGPRICE1 DCURR,
DOGPRICE DCURR,
DOGPRICEPERCTO NUMERIC(6, 2),
DOGPRICEACTIVEFROM TIMESTAMP,
DOGPRICEACTIVETO TIMESTAMP,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
ALTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
ALTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
ALTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
LASTPARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
LASTPARTNERSTORENAME VARCHAR(40) CHARACTER SET WIN1251,
LASTPARTNEREMPLOYEENAME VARCHAR(50) CHARACTER SET WIN1251,
CKLADGROUPNAME VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETACTIVEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETARTIKULALTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETARTIKULDEFPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETARTIKULLASTPARTNERINFO (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTPARTNERNOMER INTEGER,
LASTPARTNERSTORENOMER INTEGER,
LASTPARTNEREMPLOYEENOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETARTIKULSENDTOVEZNA (OBEKTID INTEGER,
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SETARTNOMERSTARTFROM AS 
 ^

ALTER PROCEDURE SETCAKERESERVATIONSSTATUS (ID INTEGER,
OBEKTID INTEGER,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCASHONDELIVERYDTPAY (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTPAY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCKLADGANCHEV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
GANCHEV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCKLADQTY (OBEKTID INTEGER,
DEFCKLADID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
ISACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCKLADSTOCKACTIV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ACTIV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCKLADSTOCKGROUPID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
CKLADSTOCKGROUPID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCLEARROWSSMETKANO (OBEKTID INTEGER,
TYPEDB SMALLINT,
OLDSMETKANO INTEGER,
NEWSMETKANO INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETCLOSEEARNESTBYVALUE (ID INTEGER,
OBEKTID INTEGER,
TYPEDB INTEGER,
SMETKANO INTEGER,
DTCLOSE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SETDBINFO (USERNAME VARCHAR(31) CHARACTER SET WIN1251,
OLDDBINFO VARCHAR(31) CHARACTER SET WIN1251,
DBINFO VARCHAR(31) CHARACTER SET WIN1251)
RETURNS (CHRRESULT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDEFCURRENCYTYPES (OBEKTID INTEGER,
NAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDEFDANNIFIRMA (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDEFFISKALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDEFOBEKT (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDEFWEIGHTSCALE (DEFWEIGHTSCALE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETDISCOORDERSSMETKINOMER (ORDERNUMBER INTEGER,
SMETKINOMER INTEGER)
AS 
 ^

ALTER PROCEDURE SETFUTUREPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER)
RETURNS (CHRSET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETLOGSENDSALESEMAILDTSEND (OBEKTID INTEGER,
TYPEDB SMALLINT,
SMETKANOMER INTEGER,
DTSEND TIMESTAMP)
AS 
 ^

ALTER PROCEDURE SETLOTTERYSALESDTSEND (ID INTEGER,
OBEKTID INTEGER,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
DTSEND TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETMATERIALPACKAGE (OBEKTID INTEGER,
UCODE BIGINT,
PACUCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETMONEYINFISCALPRINTER (OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
FISCALPRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETPORTEXTTERMINALSTATUS (ID INTEGER,
OBEKTID INTEGER,
TEXTTERMINALSTATUS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSALESCKLADLOCKBONUSPOINT (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSALESCKLADLOTTERY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
LOTTERY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSALESCKLADMISTRALTCOLOR (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
MISTRALTCOLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSETINGSCALCNAL (CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSETTINGSLOGSAVEDATA (LOGSAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSETTINGSSAVEDATA (SAVEDATA CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETSETTINGSSAVEPOR (SAVEPOR CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETTEKSMETKIEARNESTBYVALUE (OBEKTID INTEGER,
SMETNOMER INTEGER,
EARNESTBYVALUEID INTEGER,
EARNESTBYVALUESUM DCURR)
AS 
 ^

ALTER PROCEDURE SETTEKSMETKIOFA_FIELDS (OBEKTID INTEGER,
SMETNOMER INTEGER,
OFA_CARDID VARCHAR(20) CHARACTER SET WIN1251,
OFA_DISCOUNTRATE NUMERIC(6, 2),
OFA_PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
OFA_DISCOUNTTYPE SMALLINT,
OFA_PAYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETTEKSMETKIORDERSID (OBEKTID INTEGER,
SMETNOMER INTEGER,
ORDERSID INTEGER)
AS 
 ^

ALTER PROCEDURE SETTEKSMETKISTOCKATTRIBUTE (ID INTEGER,
OBEKTID INTEGER,
STOCKATTRIBUTE01NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04NAME VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05NAME VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETTEMPDELIVERYNUM (LOCATIONID INTEGER,
NUM INTEGER)
AS 
 ^

ALTER PROCEDURE SETTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETUSERDEFMONEYIN (OBEKTID INTEGER,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SETUSERSDTLASTLOG (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
DTLASTLOG TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SHOWARTBYSPECHIFIK (OBEKTID INTEGER,
INSPECHIFIK VARCHAR(40) CHARACTER SET WIN1251)
RETURNS (OUTSPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SPBRAKZAPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
 ^

ALTER PROCEDURE SPDELARTOTCKLAD (OBEKTID INTEGER,
CKLADNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SPEDITARTINCKLAD (OLDOBEKTID INTEGER,
OLDARTNOMER INTEGER,
OLDCKLADID NUMERIC(18, 0),
OBEKTID INTEGER,
ARTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
SALESARTNOMER INTEGER,
CANSALES CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKULID NUMERIC(18, 0),
SYXRANENIEID NUMERIC(18, 0),
PRODUCERID NUMERIC(18, 0),
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
DANGROUPID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY)
AS 
 ^

ALTER PROCEDURE SPPAYRAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
PAYSUMA DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SPPERSONALFOODBYPERIOD (DATEOT TIMESTAMP,
DATEDO TIMESTAMP,
INOBEKTIID D_INOBEKTIID)
RETURNS (OBEKTNAME VARCHAR(30) CHARACTER SET WIN1251,
CKLAD VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURENAME VARCHAR(10) CHARACTER SET WIN1251,
KOL DQTY,
EDPRICE DCURR,
PRICE DCURR)
AS 
 ^

ALTER PROCEDURE STORNODOCTINCKLAD (OBEKTID INTEGER,
DOCTNOMER INTEGER,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTACTION TIMESTAMP)
AS 
 ^

ALTER PROCEDURE STORNORAZCR (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
OPER VARCHAR(50) CHARACTER SET WIN1251,
DTDATE TIMESTAMP,
CALCNAL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE STORNOVLOJENOSTFROMBYPROD (OBEKTID INTEGER,
DOCTNO INTEGER,
TYPEDB SMALLINT,
EDITBYUSERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTACTION TIMESTAMP,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
CHECKCONTENT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE STRROUND (NUMBER VARCHAR(30) CHARACTER SET WIN1251,
DIGG SMALLINT)
RETURNS (RESULTNUMBER VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE SUMRAZCRSUMA (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER)
RETURNS (SUMAINRAZCR DCURR,
SUMAOUTRAZCR DCURR,
SALDO DCURR)
AS 
 ^

ALTER PROCEDURE SYNCMONEYOPERKACA AS 
 ^

ALTER PROCEDURE TM_GETENTITYID RETURNS (ENTITYID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE TM_GETMISTRALORDERSTATUS (MISTRALORDERID INTEGER)
RETURNS (MISTRALORDERSTATUS DOUBLE PRECISION)
AS 
 ^

ALTER PROCEDURE TM_GETOPENTABLES RETURNS (TABLENUMBER INTEGER,
CLIENTNUMBER INTEGER,
MISTRALORDERID INTEGER)
AS 
 ^

ALTER PROCEDURE TM_GETTABLESTATUS (TABLENUMBER INTEGER)
RETURNS (CLIENTNUMBER INTEGER,
MISTRALORDERID INTEGER)
AS 
 ^

ALTER PROCEDURE UNLOCKALLARTBYMISTRALM (OBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE UNLOCKGROUPBYMISTRALM (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEAREAINFO (ID INTEGER,
OBEKTID INTEGER,
TYPEAREAID INTEGER,
STREET VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
UCSTREET VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEARTIKUL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
MINKOL DQTY,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OPTQTY DQTY,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
H_COUNTRYID INTEGER,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
DOCTTO NUMERIC(6, 2),
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
EXPIRATIONDATE INTEGER,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEARTIKULNAMESID (OLDID INTEGER,
NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEARTIKULSPARTNO (ID INTEGER,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE UPDATEBLOCKARTIKULS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DTBLOCKDELIVERYFROM TIMESTAMP,
DTBLOCKDELIVERYTO TIMESTAMP,
DTBLOCKSALESFROM TIMESTAMP,
DTBLOCKSALESTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEBONUSPOINTBYART (OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEBONUSPOINTBYOBOR (OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
POINTBYOBOR DCURR,
OBORBYPOINT DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
CHRBONUSPOINTBYART CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEBOXCKLAD (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEBYPRODKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
OTSMETNOMER INTEGER,
ACTIONID SMALLINT,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADALTERDANGROUP (OBEKTID INTEGER,
UNIQUECODE BIGINT,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADARTIKUL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
SEARCHNAME D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADARTIKUL1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL1 D_ARTIKULNAME)
AS 
 ^

ALTER PROCEDURE UPDATECKLADAVGPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATECKLADAVGPRICE1 (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDATECKLADAVGPRICEWOTAX (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
AVGPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORBACKSTOKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBACKSTOKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORBRAK (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORBRAK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORDOCT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORDOCT CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORMISTRALM (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORMISTRALM CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFOROUTPROD (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFOROUTPROD CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORREV CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBLOCKFORZAIAVKI (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
BLOCKFORZAIAVKI CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBYPARTNERSSUMFIELDS (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATEDOCT TIMESTAMP,
LASTDOCTPRICE DCURR,
LASTDOCTKOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATECKLADBYPARTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE UPDATECKLADDANGROUP (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
KOL DQTY,
TYPEACTIONID SMALLINT,
TYPEDB SMALLINT,
DTACTION TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATECKLADLASTBRAKDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTBRAKDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATECKLADLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATECKLADLASTOUTPRODDATE (OBEKTID INTEGER,
CKLADID INTEGER,
ARTNOMER INTEGER,
LASTOUTPRODDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATECKLADLASTSALESDATE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTSALESDATE TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATECKLADMINKOL (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADMINQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
MINQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADOPTQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
OPTQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADSALESCKLADBLOCKED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADTMPQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADTYPEARTIKULID (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEARTIKULID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADTYPEMEASURE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADWEIGHT (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NETWEIGHT DQTY,
GROSSWEIGHT DQTY,
MINKOLORDER DQTY,
PACKKOL DQTY,
TARAKOL DQTY,
TRANSPORTPACK DQTY,
TOLERANSKOL DQTY,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECKLADWORKQTY (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WORKQTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
INCQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATECURRENCYTYPES (OBEKTID INTEGER,
OLDNAME VARCHAR(15) CHARACTER SET WIN1251,
NEWNAME VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDANGROUP (OBEKTID INTEGER,
ID INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
TAX DCURR,
DEF CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDANGROUPNAME (OBEKTID INTEGER,
OLDDANGROUP CHAR(1) CHARACTER SET WIN1251,
NEWDANGROUP CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDANNIFIRMA (OLDID INTEGER,
OLDOBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(15) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACOD VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
EDPRICEDIGG INTEGER,
DDSNO VARCHAR(20) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
DEPNO INTEGER,
INVOICENO NUMERIC(18, 0),
DEF CHAR(1) CHARACTER SET WIN1251,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDANNIFIRMAFAKTURANO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
FAKTURANO NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATEDANNIFIRMAINVOICENO (OBEKTID INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
INVOICENO NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATEDEBITNOSALDO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEBITNOSALDO DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATEDELARTOTVEZNI (OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEDISCOUNTBYHOURS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
PRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDISCOUNTBYPACK (ID INTEGER,
OBEKTID INTEGER,
SALESARTNOMER1 INTEGER,
PRICELISTID1 NUMERIC(18, 0),
SALESARTNOMER2 INTEGER,
PRICELISTID2 NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEACTIVE SMALLINT,
ACTIVETIMEFROM TIME,
ACTIVETIMETO TIME,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDISCOUNTBYPACKACTIVE (ID INTEGER,
OBEKTID INTEGER,
CHRACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEDISCOUNTBYSALES (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
PRICELISTNAMESID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMSUMSALES CHAR(1) CHARACTER SET WIN1251,
SAVEINDEBITNOSALDO CHAR(1) CHARACTER SET WIN1251,
TYPEDISCOUNT SMALLINT,
PERCDISCOUNT NUMERIC(6, 2),
MAXSUM DCURR)
AS 
 ^

ALTER PROCEDURE UPDATEDOCBYDELIVERYID (OLDID INTEGER,
NEWID INTEGER,
DOCSUM DCURR,
DOC2SUM DCURR,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATEDOCBYOUTPRODID (OLDID INTEGER,
NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEDOGDOCTPRICES (OBEKTID INTEGER,
ID NUMERIC(18, 0),
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DOCTPRICE DCURR,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
PERCTO NUMERIC(6, 2))
AS 
 ^

ALTER PROCEDURE UPDATEFAKTURICANCEL (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
CANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEFIKPRICE (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
ARTNOMER INTEGER,
FIKPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATEFISKALPRINTERS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FIRMANAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEGROUPIDGRYPA (OBEKTID INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
NEWGRYPA VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEGROUPIDSETTINGS (OBEKTID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTFORSALES INTEGER,
PRICEBYBONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKCHANGEPRICELIST CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
COLOR INTEGER,
ORDERID VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEH_COUNTRY (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEINFOBYSERIALNUMBER (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
DTDATE TIMESTAMP,
SERIALNUMBERVALUESID INTEGER,
ARTIKULID INTEGER,
TYPEMEASURENAMEID INTEGER,
INFO VARCHAR(1024) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATELOCATIONNETSETTINGS (ID DID,
LOCATIONID INTEGER,
IDENTLOCATIONID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
IP VARCHAR(512) CHARACTER SET WIN1251,
PORT VARCHAR(10) CHARACTER SET WIN1251,
DBPATH VARCHAR(512) CHARACTER SET WIN1251,
DBUSER_NAME VARCHAR(512) CHARACTER SET WIN1251,
DBPASSWORD VARCHAR(512) CHARACTER SET WIN1251,
DBTYPE CHAR(1) CHARACTER SET WIN1251,
SALE CHAR(1) CHARACTER SET WIN1251,
RESERVATION CHAR(1) CHARACTER SET WIN1251,
AUTHORIZATIONTYPE CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMATDELIVERYDATE (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DEFPARTNERNOMER INTEGER,
DEFPARTNERSTORENOMER INTEGER,
DEFPARTNEREMPLOYEENOMER INTEGER,
ALTPARTNERNOMER INTEGER,
ALTPARTNERSTORENOMER INTEGER,
ALTPARTNEREMPLOYEENOMER INTEGER,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMATERIAL (OLDCKLADID NUMERIC(18, 0),
OLDARTNOMER INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
AVGPRICE DCURR,
LASTDOCTPRICE DCURR,
SEARCHNAME D_ARTIKULNAME,
CANSALES CHAR(1) CHARACTER SET WIN1251,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCERID NUMERIC(18, 0),
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
ARTIKUL1 D_ARTIKULNAME,
MINQTY DQTY,
EDITBYUSERID INTEGER,
CHANGEDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
CHANGESALESPRICE CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PERCNAD NUMERIC(6, 2),
AGERESTR CHAR(1) CHARACTER SET WIN1251,
CHRSERIALNUMBER CHAR(1) CHARACTER SET WIN1251,
WARRANTY NUMERIC(6, 2),
BLOCKED CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
CKLADBYPART CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
AVGPRICE1 DCURR,
LASTDOCTPRICE1 DCURR,
AVGPRICEWOTAX DCURR,
LASTDOCTPRICEWOTAX DCURR,
CHRSETPARTNERINFO CHAR(1) CHARACTER SET WIN1251,
MAXTO NUMERIC(6, 2),
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
PRINTER1NAME VARCHAR(20) CHARACTER SET WIN1251,
KINDTYPE INTEGER,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
PORTION DQTY,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
PREPARATIONTIME SMALLINT,
PRODUCTIONDELIVERY DCURR,
PREDICTEDDELIVERY DCURR,
WEIGHTSALE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMATLASTEXEC (OBEKTID INTEGER,
EDITBYUSERID INTEGER,
UCODE BIGINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMATPROPERTY (OBEKTID INTEGER,
GROSS DQTY,
NET DQTY,
CONTAINER DQTY,
TRANSPORTPACK DQTY,
PACKAGEQTY DQTY,
TOLERANCE DQTY,
MINORDERQTY DQTY,
SPECIFICATION VARCHAR(40) CHARACTER SET WIN1251,
QUALITY VARCHAR(5) CHARACTER SET WIN1251,
MINKOL DQTY,
OPTIMALQTY DQTY,
COUNRTYORIGINID INTEGER,
DISCOUNTPERCENTAGE NUMERIC(6, 2),
EXPIRATIONDATE INTEGER,
ALLERGENS VARCHAR(512) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
CONTENT VARCHAR(512) CHARACTER SET WIN1251,
STOREPOSITION VARCHAR(200) CHARACTER SET WIN1251,
UCODE BIGINT,
UOMNETQTY VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMISTRALMREVIZIA (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ENTERQTY DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER,
BATCH VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMONEYINAUTOACCOUNT (OBEKTID INTEGER,
FROMMONEYINID NUMERIC(18, 0),
USERSID NUMERIC(18, 0),
TOMONEYINID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMONEYINNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(25) CHARACTER SET WIN1251,
NAME VARCHAR(25) CHARACTER SET WIN1251,
ISFISCAL CHAR(1) CHARACTER SET WIN1251,
ISCASH CHAR(1) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
WAYOFPAY SMALLINT,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEMONEYOPERKACA (OBEKTID INTEGER,
TYPEDB SMALLINT,
TYPEACTION SMALLINT,
SMETKANO INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEOBEKTI (OLDID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEOBEKTIID (OLDID INTEGER,
NEWID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEOBEKTIPATHDB (OBEKT VARCHAR(30) CHARACTER SET WIN1251,
PATHDB VARCHAR(255) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEOBEKTISMETKANO (OBEKTID INTEGER,
FROMSMETKANO INTEGER,
TOSMETKANO INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEOPENRECH (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERGROUP (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
ORDERGROUP VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERNOTE (OBEKTID INTEGER,
OLDNOMER INTEGER,
NOMER INTEGER,
NOTE VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
ORDERNOTETYPE SMALLINT,
NOTE2 VARCHAR(25) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERNOTEBYGROUPGRYPA (OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
OLDGRYPA VARCHAR(50) CHARACTER SET WIN1251,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERNOTEBYRECH (ID INTEGER,
OBEKTID INTEGER,
UCODE BIGINT,
ORDERNOTENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEORDERNOTESDR (ID INTEGER,
OBEKTID INTEGER,
ORDERNOTENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
DATESAVED TIMESTAMP,
DATEFOR TIMESTAMP,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
DELIVERYFROM TIME,
DELIVERYTO TIME,
DELIVERYNOTE VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYADDRESS VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPENAME VARCHAR(50) CHARACTER SET WIN1251,
DELIVERYPETEL VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERSSAVED (ID INTEGER,
OBEKTID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERSSDR (ID INTEGER,
OBEKTID INTEGER,
ORDERID INTEGER,
SALESARTNOMER INTEGER,
EDPRICE DCURR,
KOL DQTY,
SAVED CHAR(1) CHARACTER SET WIN1251,
AVGDOCTPRICE DCURR,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATEORDERSSDRSAVED (OBEKTID INTEGER,
ORDERID INTEGER,
SAVED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEORDERTYPE (OBEKTID INTEGER,
ID INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
MODIFIERFACTOR SMALLINT,
NAME2 VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERBONUSPOINT (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
BONUSPOINT INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
ACTIONSTYPEID SMALLINT,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
SMETKANO INTEGER,
TYPEDB SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERS (OBEKTID INTEGER,
EDITNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(200) CHARACTER SET WIN1251,
GRAD VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(200) CHARACTER SET WIN1251,
MOL VARCHAR(40) CHARACTER SET WIN1251,
BYLSTAT VARCHAR(20) CHARACTER SET WIN1251,
BANKASMETKA VARCHAR(24) CHARACTER SET WIN1251,
BANKACODE VARCHAR(20) CHARACTER SET WIN1251,
BANKANAME VARCHAR(30) CHARACTER SET WIN1251,
SHORTNAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
DDSNO VARCHAR(50) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
SUPNOMER VARCHAR(20) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOTE D_PARTNERSNOTE,
POSTALCODE VARCHAR(10) CHARACTER SET WIN1251,
REGION VARCHAR(100) CHARACTER SET WIN1251,
REGIONSN VARCHAR(100) CHARACTER SET WIN1251,
REGISTRATION VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSARTNOMER (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
PARTNERARTNOMER NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSEMPLOYEE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
EGN VARCHAR(20) CHARACTER SET WIN1251,
LP VARCHAR(20) CHARACTER SET WIN1251,
SECTION VARCHAR(30) CHARACTER SET WIN1251,
DUTIES VARCHAR(30) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
MOBILETEL VARCHAR(30) CHARACTER SET WIN1251,
FAKS VARCHAR(30) CHARACTER SET WIN1251,
EMAIL VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
ADRESS VARCHAR(50) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMLOG CHAR(1) CHARACTER SET WIN1251,
AREA VARCHAR(20) CHARACTER SET WIN1251,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
BLOCK VARCHAR(10) CHARACTER SET WIN1251,
ENTRANCE VARCHAR(10) CHARACTER SET WIN1251,
"FLOOR" VARCHAR(10) CHARACTER SET WIN1251,
APPARTMENT VARCHAR(10) CHARACTER SET WIN1251,
NOTE VARCHAR(50) CHARACTER SET WIN1251,
OSOBENOST VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSEMPLOYEENOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSLASTSALES (OBEKTID INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
SALESARTNOMER INTEGER,
SALESPRICE DCURR,
DEFSALESPRICE DCURR,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSNOMER (OBEKTID INTEGER,
OLDNOMER INTEGER,
NEWNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSSETINGS (OLDOBEKTID INTEGER,
EDITID NUMERIC(18, 0),
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
PRICELISTID NUMERIC(18, 0),
RAZCR CHAR(1) CHARACTER SET WIN1251,
MAXSUMRAZCR DCURR,
KARTA VARCHAR(60) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
DEBITNOSALDO DCURR,
DEBITSALDODAY CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOSAVED TIMESTAMP,
DEBITSALDOONLY CHAR(1) CHARACTER SET WIN1251,
DEFSUMDEBITNOSALDO DCURR,
KARTAVALIDITYTO TIMESTAMP,
DEBITSALDOTIMEVAL TIME,
BONUSPOINT INTEGER,
KARTAVALIDITYTIMEFROM TIME,
KARTAVALIDITYTIMETO TIME,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
SUMSALES DCURR,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
BLOCKFORSALES CHAR(1) CHARACTER SET WIN1251,
KARTA1 VARCHAR(60) CHARACTER SET WIN1251,
KARTA2 VARCHAR(60) CHARACTER SET WIN1251,
KARTA3 VARCHAR(60) CHARACTER SET WIN1251,
KARTA4 VARCHAR(60) CHARACTER SET WIN1251,
PAYMENT_PERIOD INTEGER,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(20) CHARACTER SET WIN1251,
DEFCHECKDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
AUTOPRIK CHAR(1) CHARACTER SET WIN1251,
DEBITSALDOMINUS CHAR(1) CHARACTER SET WIN1251,
MONTHCLEARSUMSALES CHAR(1) CHARACTER SET WIN1251,
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
KARTAVALIDITYDAYS SMALLINT,
PAYRAZCRBANKA CHAR(1) CHARACTER SET WIN1251,
DDS CHAR(1) CHARACTER SET WIN1251,
MAXSUMTO DCURR,
EMAILZAIAVKI VARCHAR(30) CHARACTER SET WIN1251,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
DEBITSALDOSPENDALL CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPARTNERSSTORE (OBEKTID INTEGER,
EDITNOMER INTEGER,
PARTNERNOMER INTEGER,
NOMER INTEGER,
NAME VARCHAR(40) CHARACTER SET WIN1251,
GRAD VARCHAR(20) CHARACTER SET WIN1251,
TEL VARCHAR(30) CHARACTER SET WIN1251,
ADRESS VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
TYPEPARTNERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
GLN VARCHAR(20) CHARACTER SET WIN1251,
PARTNERSTORENOTE D_PARTNERSNOTE)
AS 
 ^

ALTER PROCEDURE UPDATEPERCPRICELIST (OBEKTID INTEGER,
PRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
ARTNOMER INTEGER,
FROMPRICELISTNAME VARCHAR(20) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SALESPRICE DCURR,
CUSTCOUNT INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPORMISTRALT (ID INTEGER,
OBEKTID INTEGER,
MISTRALT_NAME VARCHAR(20) CHARACTER SET WIN1251,
MISTRALT_STATUS SMALLINT,
DTREADY TIMESTAMP,
COOKINGTIME1 SMALLINT,
DTSTARTCOOKING TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATEPOSSTATEPOSID (PROGRAMID INTEGER,
PROGRAMNAME VARCHAR(30) CHARACTER SET WIN1251,
POSID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPRICELIST (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
EDITBYUSERID INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPRICELISTNAME (OBEKTID INTEGER,
OLDNAME VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTTYPE CHAR(1) CHARACTER SET WIN1251,
PERC NUMERIC(6, 2),
OTLISTID NUMERIC(18, 0),
PERCDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
CKLADID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATEPRICELISTNAMESDIGG (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DIGG INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPRICELISTPRICE (OBEKTID INTEGER,
PRICELISTID NUMERIC(18, 0),
ARTNOMER INTEGER,
PRICE DCURR,
EDITBYUSERID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPRINTETIKETIFROMPARTNERS (OBEKTID INTEGER,
PARTNERNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPRINTETIKETIFROMPRODUCERS (OBEKTID INTEGER,
PRODUCERID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPRINTOUTETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTOUTETIKETI CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPRODUCERS (OBEKTID INTEGER,
NOMER INTEGER,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DVCKNOMER VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPRODUCTIONREQUESTDOCTNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
DOCTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEPRODUCTIONREQUESTSTATUS (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
STATUS SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATEPROGRAMSETTINGS (SETTINGSALIASID INTEGER,
SETTINGSNO INTEGER,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPROMOTIONBYQTY (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
BYQTY DQTY,
PRICELISTID NUMERIC(18, 0),
PROMOTIONQTY DQTY,
CHRADDQTY CHAR(1) CHARACTER SET WIN1251,
CHRFORPARTNERS CHAR(1) CHARACTER SET WIN1251,
NAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEPROMOTIONSALESPRICE (OBEKTID INTEGER,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
SALESPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
FROMHOUR TIME,
TOHOUR TIME,
ID NUMERIC(18, 0),
PERCTO NUMERIC(6, 2),
CHRDAYSOFWEEK CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKBONUSPOINT CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
TYPEPROMO SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATERATES (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESIDFROM INTEGER,
CURRENCYTYPESIDTO INTEGER,
RATE FLOAT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATERAZCRDOC (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATERAZCRDTBACK (OBEKTID INTEGER,
SMETKANO INTEGER,
ACTIONID SMALLINT,
TYPEDB SMALLINT,
DTBACK TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATERECH (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
ARTIKUL1 D_ARTIKULNAME,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
CHRORDERNOTE CHAR(1) CHARACTER SET WIN1251,
COUNTORDERNOTE INTEGER,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
COOKINGTIME SMALLINT,
PRINTETIKETI CHAR(1) CHARACTER SET WIN1251,
CONTENT VARCHAR(800) CHARACTER SET WIN1251,
BLOCKFORLOYALTYSYSTEM CHAR(1) CHARACTER SET WIN1251,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251,
PORTION DQTY,
EXPIRATIONDATE INTEGER,
MAXTO NUMERIC(6, 2),
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
PRODUCER VARCHAR(40) CHARACTER SET WIN1251,
PRINTELETIKET CHAR(1) CHARACTER SET WIN1251,
SELLINGWEIGHT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATERECHDANGROUP (OBEKTID INTEGER,
ARTNOMER INTEGER,
DANGROUP CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATERECHSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATERECHTYPEMEASURE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TYPEMEASURE VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATERESERVEDARTIKULS (ID INTEGER,
OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
DTSAVE TIMESTAMP,
USERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEREST_TABLES (ID INTEGER,
OBEKTID INTEGER,
TABLENO INTEGER,
MAXCLIENTS INTEGER,
PRICELISTID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATESALDOSKLADSETINGS (MAKESALDOSKLAD CHAR(1) CHARACTER SET WIN1251,
BEGININTERVAL TIMESTAMP,
ENDINTERVAL TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADACTIVEDATE (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
ACTIVEFROM TIMESTAMP,
ACTIVETO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADARTNOMER (OBEKTID INTEGER,
OLDARTNOMER INTEGER,
NEWARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADBLOCKED (OBEKTID INTEGER,
ARTNOMER INTEGER,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADDESCRIPTION (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
DESCRIPTION VARCHAR(512) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADELETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADETIKETI (OBEKTID INTEGER,
ARTNOMER INTEGER,
ETIKET CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADGRYPA (OBEKTID INTEGER,
ARTNOMER INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADLOCKBY (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKTOBYOBOR CHAR(1) CHARACTER SET WIN1251,
LOCKPLUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
LOCKMINUSDEBITSALDO CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADLOCKBYMISTRALM (OBEKTID INTEGER,
ARTNOMER INTEGER,
LOCKBYMISTRALM CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADPERCNAD (OBEKTID INTEGER,
ARTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTERID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADSPECHIFIK (OBEKTID INTEGER,
ARTNOMER INTEGER,
SPECHIFIK VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADTM_ACTIVE (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_ACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESALESCKLADTM_SENDTO (OBEKTID INTEGER,
ARTNOMER INTEGER,
TM_SENDTO CHAR(1) CHARACTER SET WIN1251,
TM_SENDSALESPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATESAVEDREPORTS (OBEKTID INTEGER,
TYPEPROGRAM SMALLINT,
VER SMALLINT,
REPTITLE VARCHAR(100) CHARACTER SET WIN1251,
REPCATEGORY VARCHAR(30) CHARACTER SET WIN1251,
REPDATA BLOB,
REPOPTIONS BLOB)
AS 
 ^

ALTER PROCEDURE UPDATESETINGSGROUPSMETKI (ONLINEGROUPSMETKI CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESETTINGSALIAS (TYPEPROGRAM SMALLINT,
OLDALIASNAME VARCHAR(20) CHARACTER SET WIN1251,
NEWALIASNAME VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESETTINGSFIRMA (FIRMANAME VARCHAR(50) CHARACTER SET WIN1251,
FIRMAEIK VARCHAR(14) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESMETKIBYDAYKOL (ID INTEGER,
KOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATESMETKIKACA (OBEKTID INTEGER,
NOMER INTEGER,
KACA CHAR(1) CHARACTER SET WIN1251,
KACAOPER VARCHAR(50) CHARACTER SET WIN1251,
TYPEDB SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESMETKIPARTNERNOTE (OBEKTID INTEGER,
SMETKANO INTEGER,
TYPEDB SMALLINT,
PARTNERNOTE VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESMETKIPARTNERS (OBEKTID INTEGER,
NOMER INTEGER,
TYPEDB SMALLINT,
PARTNERNOMER INTEGER,
PARTNERNAME VARCHAR(200) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESMETKISDRAVGPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
AVGPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDATESMETKISDRDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
DOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATESMETKISDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDATESMETKISDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTE01 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTE02 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTE03 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTE04 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTE05 (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTEALIAS (ID INTEGER,
OBEKTID INTEGER,
TABLENAME VARCHAR(40) CHARACTER SET WIN1251,
TABLEALIAS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKATTRIBUTEGROUP (ID INTEGER,
OBEKTID INTEGER,
ATTRIBUTENO INTEGER,
STOCKATTRIBUTEID INTEGER,
GRYPA VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTOCKBYATTRIBUTE (ID INTEGER,
OBEKTID INTEGER,
KOL DQTY,
STOCKATTRIBUTE01_ID INTEGER,
STOCKATTRIBUTE02_ID INTEGER,
STOCKATTRIBUTE03_ID INTEGER,
STOCKATTRIBUTE04_ID INTEGER,
STOCKATTRIBUTE05_ID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATESTOREDMESSAGES (ID INTEGER,
OBEKTID INTEGER,
MESSAGE VARCHAR(100) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESTREETINFO (ID INTEGER,
OBEKTID INTEGER,
AREAINFOID INTEGER,
FILTERTYPE SMALLINT,
NUMBER VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATESYNCLOCKLASTACTIONNO (OBEKTID INTEGER,
LASTACTIONNO INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATESYXRANENIE (OBEKTID INTEGER,
ID INTEGER,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATES_MACHINE (ID INTEGER,
OBEKTID INTEGER,
S_TYPEMACHINEID INTEGER,
SERNOMER VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATES_TYPECONTRACTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(30) CHARACTER SET WIN1251,
DEFPRICE DCURR,
DEFPERIOD SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATES_TYPEMACHINE (ID INTEGER,
OBEKTID INTEGER,
PRODUCERID INTEGER,
MODEL VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETABLESLASTOPEN (OBEKTID INTEGER,
TEKSMETKIMACA INTEGER,
LASTOPEN TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATETAG (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ALTERNATIVENAME VARCHAR(100) CHARACTER SET WIN1251,
TITLE VARCHAR(200) CHARACTER SET WIN1251,
TAGTYPE INTEGER,
SELECTIONTYPE INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETAGVALUE (ID INTEGER,
OBEKTID INTEGER,
TAGID INTEGER,
TAGVALUE VARCHAR(100) CHARACTER SET WIN1251,
ISDEFAULT CHAR(1) CHARACTER SET WIN1251,
ALTERNATIVEVALUE VARCHAR(100) CHARACTER SET WIN1251,
COLOR INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKORDERSBYTEL (ID INTEGER,
OBEKTID INTEGER,
NOMER INTEGER,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
DTSAVE TIMESTAMP,
DTPRINTPOR TIMESTAMP,
DTPORREADY TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATETEKORDERSBYTELSDR (ID INTEGER,
OBEKTID INTEGER,
TEKORDERSBYTELNOMER INTEGER,
SALESCKLADARTNOMER INTEGER,
QTY DQTY,
SALESPRICE DCURR,
POR CHAR(1) CHARACTER SET WIN1251,
PRIK CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKORDERSBYTELSDRPOR (ID INTEGER,
OBEKTID INTEGER,
POR CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKORDERSBYTELSTATUS (OBEKTID INTEGER,
NOMER INTEGER,
STATUS VARCHAR(25) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKICHAIR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PLACENUM INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIDISCOUNTBYPACKN (ID INTEGER,
OBEKTID INTEGER,
DISCOUNTBYPACKN INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIDOC (OBEKTID INTEGER,
SMETKANOMER INTEGER,
DOCNO NUMERIC(18, 0),
INVTYPE INTEGER,
INVPAYMENT INTEGER,
DOCDATE DATE)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIGODNODO (ID NUMERIC(18, 0),
OBEKTID INTEGER,
GODNODO DATE)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIHOME (OBEKTID INTEGER,
ID NUMERIC(18, 0),
HOME CHAR(1) CHARACTER SET WIN1251,
HOMEROW CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIKLIENT (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KLIENTNOMER INTEGER,
CUSTEMPLOYEEID NUMERIC(18, 0),
PARTNERSSTORENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIKOL (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKILASTEDITDATE (OBEKTID INTEGER,
SMETNOMER INTEGER,
LASTEDITDATE DOUBLE PRECISION)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIMRROWNO (OBEKTID INTEGER,
MACA INTEGER,
MRROWNO INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKINOTE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
NOTE VARCHAR(250) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKINUMBERCLIENTS (OBEKTID INTEGER,
SMETNOMER INTEGER,
NUMBERCLIENTS INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIOPER (SMETNOMER INTEGER,
OPER VARCHAR(50) CHARACTER SET WIN1251,
LASTEDITDATE DOUBLE PRECISION)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPARTNO (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPRINTETIKET (ID NUMERIC(18, 0),
OBEKTID INTEGER,
PRINTETIKET CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPRINTPOR (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTPOR CHAR(1) CHARACTER SET WIN1251,
PORNO INTEGER,
PORHOUR TIME)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPRINTSMETKA (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTSMETKA CHAR(1) CHARACTER SET WIN1251,
DATEPRINTSMETKA TIMESTAMP,
SMETKANO INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPROMBARCODE (OBEKTID INTEGER,
SMETNOMER INTEGER,
PROMBARCODE VARCHAR(15) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKIPROMOTIONBYQTY (OBEKTID INTEGER,
ID INTEGER,
PROMOTIONBYQTY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKISALESPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
SALESPRICE DCURR,
PRICELISTID NUMERIC(18, 0),
PERCTO NUMERIC(6, 4),
TYPETO SMALLINT,
TOMEN NUMERIC(6, 2),
PRICEF DCURR,
PROMPRICE CHAR(1) CHARACTER SET WIN1251,
BEFTOBYQTYPID NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATETEKSMETKISERIALNUMBER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPDELIVERY (ID INTEGER,
OBEKTID INTEGER,
RAZCR CHAR(1) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
KONSIG CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
TAKEBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
DOCTDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATETEMPDELIVERYSDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
GODNODO DATE,
TIMEDOCT TIME,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BLNEDIT CHAR(1) CHARACTER SET WIN1251,
EDPRICEDDS DCURR,
SUMA DCURR,
SUMADDS DCURR,
PERCTO NUMERIC(6, 2),
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SUMASALESPRICE DCURR,
SALESPRICEDDS DCURR,
SUMASALESPRICEDDS DCURR,
TEMPVLOJENOSTNOMER INTEGER,
PERCNAD NUMERIC(6, 2),
ZAIAVKIQTY DQTY,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
EDPRICE1 DCURR,
FROMZAIAVKANOMER INTEGER,
CHRDOGDOCTPRICE CHAR(1) CHARACTER SET WIN1251,
QTYFORCHECK DQTY,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPOUTPROD (OBEKTID INTEGER,
ID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
RAZCR CHAR(1) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
OUTBYUSER VARCHAR(50) CHARACTER SET WIN1251,
MONEYINNAME VARCHAR(25) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251,
REPORTINGDATE DATE,
OUTPRODDATE TIMESTAMP,
TAXSUM1 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM2 VARCHAR(30) CHARACTER SET WIN1251,
TAXSUM3 VARCHAR(30) CHARACTER SET WIN1251,
DOCNOOUT NUMERIC(18, 0))
AS 
 ^

ALTER PROCEDURE UPDATETEMPOUTPRODSDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
SALESPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
GODNODO DATE,
PRODUCTIONREQUESTSDRID INTEGER,
H_COUNTRY VARCHAR(50) CHARACTER SET WIN1251,
TIMEDOCT TIME,
DOCPRODUCER VARCHAR(40) CHARACTER SET WIN1251,
TYPETRANSPORT VARCHAR(30) CHARACTER SET WIN1251,
SYXRANENIE VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPOUTPRODZAOBEKT (OBEKTID INTEGER,
NOMER INTEGER,
CHRZAOBEKT CHAR(1) CHARACTER SET WIN1251,
ZAOBEKT VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPREV (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
NAL DQTY,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPREVDTOPEN (OBEKTID INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
DTOPEN TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDATETEMPREVKOMKOL (OBEKTID INTEGER,
ID NUMERIC(18, 0),
KOMKOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATETEMPVLOJENOSTSDR (ID INTEGER,
TYPEDB SMALLINT,
OBEKTID INTEGER,
QTY DQTY,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETEMPZAIAVKI (ID INTEGER,
OBEKTID INTEGER,
DTSAVE TIMESTAMP,
FORDATE TIMESTAMP,
USERSID INTEGER,
EDITZAIAVKANOMER INTEGER,
FORPARTNERSNOMER INTEGER,
FORPARTNERSSTORENOMER INTEGER,
FORPARTNERSEMPLOYEENOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETEMPZAIAVKISDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ZAIAVKIQTY DQTY,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
NOTESNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERSNOMER INTEGER,
PARTNERSSTORENOMER INTEGER,
PARTNERSEMPLOYEENOMER INTEGER,
EDPRICE DCURR,
DTSALESFROM TIMESTAMP,
DTSALESTO TIMESTAMP,
SUMSALES DCURR)
AS 
 ^

ALTER PROCEDURE UPDATETYPEADDRESS (ID INTEGER,
OBEKTID INTEGER,
TYPEADDRESS VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPEAREA (ID INTEGER,
OBEKTID INTEGER,
AREA VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SERVEOBEKTID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATETYPEARTIKUL (OBEKTID INTEGER,
ID INTEGER,
TYPEARTIKUL VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPEDOCUMENTS (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPEMEASURE (OLDNAME VARCHAR(10) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DEFQTY DQTY,
COUNTABLE CHAR(1) CHARACTER SET WIN1251,
NAME2 VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPEMEASURECONV (ID INTEGER,
OBEKTID INTEGER,
OLDTYPEMEASUREID INTEGER,
NEWTYPEMEASUREID INTEGER,
QTY DQTY)
AS 
 ^

ALTER PROCEDURE UPDATETYPEMEASUREID (OBEKTID INTEGER,
NAME VARCHAR(10) CHARACTER SET WIN1251,
ID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPEPARTNERS (OLDTYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
TYPEPARTNER VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
BONUSPOINTBYOBORNAME VARCHAR(30) CHARACTER SET WIN1251,
BONUSPOINTBYARTNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYSALESNAME VARCHAR(30) CHARACTER SET WIN1251,
DISCOUNTBYHOURSNAME VARCHAR(30) CHARACTER SET WIN1251,
PROMOTIONBYQTYNAME VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATETYPETRANSPORT (OLDNAME VARCHAR(30) CHARACTER SET WIN1251,
OBEKTID INTEGER,
NEWNAME VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEUSERS (OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
PASS VARCHAR(50) CHARACTER SET WIN1251,
TYPEACCOUNT SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
NAME1 VARCHAR(50) CHARACTER SET WIN1251,
ACTIVEPRICELISTID NUMERIC(18, 0),
PASS1 VARCHAR(50) CHARACTER SET WIN1251,
CODE VARCHAR(10) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
DATELASTCHANGE TIMESTAMP,
"FIRSTNAME" VARCHAR(50) CHARACTER SET WIN1251,
"MIDDLENAME" VARCHAR(50) CHARACTER SET WIN1251,
"LASTNAME" VARCHAR(50) CHARACTER SET WIN1251,
SECURITYROLEID DID,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEUSERSBYREST_TABLES (ID INTEGER,
OBEKTID INTEGER,
USERSID INTEGER,
REST_TABLESID INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEUSERSPASS (OBEKTID INTEGER,
CODE VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEUSERSPASS1 (OBEKTID INTEGER,
OLDPASS1 VARCHAR(50) CHARACTER SET WIN1251,
NEWPASS1 VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEUSERSPOSITIONS (OBEKTID INTEGER,
OLDPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
NEWPOSITIONS VARCHAR(30) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEVERDB (VERDB INTEGER,
KOLDIG INTEGER,
CURRDIG INTEGER,
CURRMASK VARCHAR(10) CHARACTER SET WIN1251,
KOLMASK VARCHAR(10) CHARACTER SET WIN1251,
CALCNAD CHAR(1) CHARACTER SET WIN1251,
TYPEDB CHAR(1) CHARACTER SET WIN1251,
ALLOWOTRKOL CHAR(1) CHARACTER SET WIN1251,
MULTICKLAD CHAR(1) CHARACTER SET WIN1251,
DBSTATUS CHAR(1) CHARACTER SET WIN1251,
FIKPRICE CHAR(1) CHARACTER SET WIN1251,
FIFO CHAR(1) CHARACTER SET WIN1251,
BYPROD CHAR(1) CHARACTER SET WIN1251,
MAJORVER INTEGER,
MINORVER INTEGER,
STOCKBYATTRIBUTE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEVERDBDETAIL (ID INTEGER,
OBJECTTYPE VARCHAR(20) CHARACTER SET WIN1251,
NAME VARCHAR(100) CHARACTER SET WIN1251,
VERNO INTEGER,
FROMDATE DATE)
AS 
 ^

ALTER PROCEDURE UPDATEVEZNI (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODE VARCHAR(40) CHARACTER SET WIN1251,
SAVEINVEZNA CHAR(1) CHARACTER SET WIN1251,
STATUS CHAR(1) CHARACTER SET WIN1251,
PLU INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATEVEZNIEXTINFO (OBEKTID INTEGER,
VEZNANO INTEGER,
SALESARTNOMER INTEGER,
BARCODENO INTEGER,
ETIKETINO INTEGER,
TYPEEXPIRATIONDATE SMALLINT)
AS 
 ^

ALTER PROCEDURE UPDATEVEZNINAMES (OBEKTID INTEGER,
OLDID NUMERIC(18, 0),
NAME VARCHAR(20) CHARACTER SET WIN1251,
LOGNO SMALLINT,
MAXPLU INTEGER,
ATTACHTOVEZNA VARCHAR(20) CHARACTER SET WIN1251,
TYPEVEZNA INTEGER,
EXTENDEDINFO CHAR(1) CHARACTER SET WIN1251,
AUTOSEND CHAR(1) CHARACTER SET WIN1251,
CODEPAGE VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDATEVEZNISTATUS (STATUS CHAR(1) CHARACTER SET WIN1251,
DTSTATUSUPDATE TIMESTAMP,
OBEKTID INTEGER,
VEZNANO NUMERIC(18, 0),
SALESARTNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDATEZAG (OLDARTNOMER INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
TYPEMEASUREID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251,
SEARCHNAME D_ARTIKULNAME,
ARTIKUL1 D_ARTIKULNAME,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
PORTION DQTY)
AS 
 ^

ALTER PROCEDURE UPDATEZAGSDR (ID INTEGER,
OBEKTID INTEGER,
ARTNOMER INTEGER,
OTCKLADID NUMERIC(18, 0),
OTARTNOMER INTEGER,
OTKOL DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251,
LOGOFFLINEPOS CHAR(1) CHARACTER SET WIN1251,
OTNETKOL DQTY)
AS 
 ^

ALTER PROCEDURE UPDATEZAIAVKISUPPLY (ZAIAVKANOMER INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
SUPPLY CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRAVG_PRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
AVGDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDBACKSTOKISDRLAST_PRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBACK TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKCHRCANCEL (OBEKTID INTEGER,
TYPEDB SMALLINT,
BRAKNOMER INTEGER,
CHRCANCEL CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
AVGPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDBRAKSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DATEBRAK TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDBROCHURE (ID INTEGER,
OBEKTID INTEGER,
NAME VARCHAR(50) CHARACTER SET WIN1251,
TYPE INTEGER,
"ACTIVE" CHAR(1) CHARACTER SET WIN1251,
FROMDATE TIMESTAMP,
TODATE TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDBROCHUREDETAILS (ID INTEGER,
OBEKTID INTEGER,
BROCHUREID INTEGER,
PAYFROMPOINT DCURR,
SETSELLPOINT DCURR,
SALESARTNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDCKLADDEFPARTNERNOMER (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
DEFPARTNERNOMER INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDCKLADSTOCKGROUP (ID INTEGER,
OBEKTID INTEGER,
GROUPNAME VARCHAR(255) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
NOTE VARCHAR(30) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDCKLADWEIGHTSCALENAME (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDCLEARROWREASONS (ID INTEGER,
OBEKTID INTEGER,
REASON D_REASON,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDDOCBYDELIVERYMISTRALEXPORT (ID INTEGER,
MISTRALEXPORT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDFUTUREPRICE (OBEKTID INTEGER,
OLDPRICELISTID DID,
OLDARTNOMER INTEGER,
OLDDTSTART TIMESTAMP,
OLDPRICE DCURR,
NEWPRICELISTID DID,
NEWARTNOMER INTEGER,
NEWDTSTART TIMESTAMP,
NEWPRICE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDHTTPORDERSSTATUS (ID INTEGER,
OBEKTID INTEGER,
TYPEDB SMALLINT,
STATUS SMALLINT,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDLOCKGETARTIKULNAL AS 
 ^

ALTER PROCEDURE UPDLOGSENDTO_OFA_STATUS (OBEKTID INTEGER,
SMETKANO INTEGER,
STATUS SMALLINT,
DTSEND TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDMISTRALTEXTTERMINALSETTINGS (TEXTTERMINALNAME VARCHAR(30) CHARACTER SET WIN1251,
PRINTERNAME VARCHAR(20) CHARACTER SET WIN1251,
SETTINGSVALUE BLOB CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDOBEKTILOGCKLADQTY (OBEKTID INTEGER,
LOGCKLADQTY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDOUTPRODSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDOUTPRODSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDOUTPRODSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
AVGDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDOUTPRODSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDOUTPRODSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDPARTNERSSETINGSKARTAV_TO (OBEKTID INTEGER,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
KARTAVALIDITYTO TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPFSDRAVGDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDPFSDRAVGDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDPFSDRAVGDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
AVGDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDPFSDRLASTDOCTPRICE (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDPFSDRLASTDOCTPRICE1 (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICE1 DCURR)
AS 
 ^

ALTER PROCEDURE UPDPFSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PFDATE DATE,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDPORCOUNTERS (ID INTEGER,
OBEKTID INTEGER,
COUNTPOR INTEGER,
SUMAPOR DCURR)
AS 
 ^

ALTER PROCEDURE UPDPRICELISTLOADFROMPRLIST (ID NUMERIC(18, 0),
OBEKTID INTEGER,
LOADNULLFROMPRICELISTID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPRICELISTNAMESAC_PARTNER (ID NUMERIC(18, 0),
OBEKTID INTEGER,
ACTIVEFORPARTNER CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPRICELISTNAMESPOSACTIVE (ID NUMERIC(18, 0),
OBEKTID INTEGER,
POSACTIVE CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPRICINGPOLICY (ID INTEGER,
OBEKTID INTEGER,
PRICINGPOLICYNAME VARCHAR(20) CHARACTER SET WIN1251,
PRICELISTID NUMERIC(18, 0),
TIMEACTIVEFROM TIME,
TIMEACTIVETO TIME,
ACTIVEEVERYMONDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTUESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYWEDNESDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYTHURSDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYFRIDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSATURDAY CHAR(1) CHARACTER SET WIN1251,
ACTIVEEVERYSUNDAY CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTOUTPRODNO (OBEKTID INTEGER,
TYPEDB SMALLINT,
NOMER INTEGER,
OUTPRODNOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTSDREDPRICE (ID INTEGER,
OBEKTID INTEGER,
EDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTSDRPARTNO (ID INTEGER,
OBEKTID INTEGER,
PARTNO VARCHAR(20) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTSDRPR_COST (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONCOST DCURR)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTSDRPR_EDPR (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONEDPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDPRODUCTIONREQUESTSDRP_QTY (ID INTEGER,
OBEKTID INTEGER,
PRODUCTIONQTY DQTY)
AS 
 ^

ALTER PROCEDURE UPDPROMBARCODES (OBEKTID INTEGER,
OLDPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
NEWPROMBARCODE VARCHAR(15) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDRECHWEIGHTSCALENAME (OBEKTID INTEGER,
ARTNOMER INTEGER,
WEIGHTSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSALESCKLADEXTRAMERED (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
EXTRATYPEMEASUREID INTEGER,
SDR DQTY,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSALESCKLADFISKALPRINTERID (OBEKTID INTEGER,
ARTNOMER INTEGER,
FISKALPRINTERID INTEGER,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSALESCKLADPRINTER1ID (OBEKTID INTEGER,
ARTNOMER INTEGER,
PRINTER1ID NUMERIC(18, 0),
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSALESCKLADPRINTORDER (OBEKTID INTEGER,
SALESARTNOMER INTEGER,
PRINTORDER VARCHAR(10) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSALESCKLADSERIALNUMBER (OBEKTID INTEGER,
SALESCKLADARTNOMER INTEGER,
OLDSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
NEWSERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSECURITYROLE (OBEKTID INTEGER,
CODE VARCHAR(10) CHARACTER SET WIN1251,
NAME VARCHAR(50) CHARACTER SET WIN1251,
BLOCKED CHAR(1) CHARACTER SET WIN1251,
CODEUSERCREATED VARCHAR(10) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251,
DATECREATED TIMESTAMP,
DATELASTCHANGE TIMESTAMP,
DATELASTBLOCKED TIMESTAMP)
AS 
 ^

ALTER PROCEDURE UPDSETTINGSUPDATEARTIKULNAMES (UPDATEARTIKULNAMES CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDSMETKISDRAVGPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
AVGPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDSMETKISDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
PRDATE TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE UPDTEKORDERSBYTELDTPORREADY (OBEKTID INTEGER,
NOMER INTEGER,
DTPORREADY TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKORDERSBYTELDTPRINTPOR (OBEKTID INTEGER,
NOMER INTEGER,
DTPRINTPOR TIMESTAMP,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKORDERSBYTELD_USER (OBEKTID INTEGER,
NOMER INTEGER,
DELIVERYBYUSER VARCHAR(50) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKORDERSBYTELSDRPRIK (ID INTEGER,
OBEKTID INTEGER,
PRIK CHAR(1) CHARACTER SET WIN1251,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIDELIV (ID NUMERIC(18, 0),
OBEKTID INTEGER,
DELIV CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIINVINFO (OBEKTID INTEGER,
SMETNOMER INTEGER,
INVTYPE INTEGER,
INVPAYMENT INTEGER)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIOFA_APPLYDISCOUNT (OBEKTID INTEGER,
ID INTEGER,
OFA_APPLYDISCOUNT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIPRICEF (ID INTEGER,
OBEKTID INTEGER,
PRICEF DCURR)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIPRINTDOC (OBEKTID INTEGER,
SMETKANOMER INTEGER,
PRINTDOC CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIPRINTPOR1 (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PRINTPOR1 CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIPROMPRICE (OBEKTID INTEGER,
ID NUMERIC(18, 0),
PROMPRICE CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKISENDTOGEOVISION (OBEKTID INTEGER,
ID NUMERIC(18, 0),
SENDTOGEOVISION CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEKSMETKIWEIGHT (ID NUMERIC(18, 0),
OBEKTID INTEGER,
WEIGHT DQTY)
AS 
 ^

ALTER PROCEDURE UPDTEMPBACKSTOKI (ID INTEGER,
OBEKTID INTEGER,
DOCNO NUMERIC(18, 0),
DOCDATE DATE,
DOCTYPE VARCHAR(20) CHARACTER SET WIN1251,
DOCSUM DCURR,
DOCNOTE VARCHAR(30) CHARACTER SET WIN1251,
PARTNERNOMER INTEGER,
PARTNERSTORENOMER INTEGER,
PARTNEREMPLOYEENOMER INTEGER,
USERNAME VARCHAR(50) CHARACTER SET WIN1251,
TAKEBYUSERNAME VARCHAR(50) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEMPBACKSTOKISDR (ID INTEGER,
OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
QTY DQTY,
EDPRICE DCURR,
STOCKATTRIBUTE01 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE02 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE03 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE04 VARCHAR(25) CHARACTER SET WIN1251,
STOCKATTRIBUTE05 VARCHAR(25) CHARACTER SET WIN1251,
PARTNO VARCHAR(20) CHARACTER SET WIN1251,
SALESPRICE DCURR,
BRAKQTY DCURR)
AS 
 ^

ALTER PROCEDURE UPDTEMPDELIVERYSDRSER_NUMBER (ID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTEMPDEL_SDRFROMZAIAVAKNOMER (ID INTEGER,
FROMZAIAVKANOMER INTEGER)
AS 
 ^

ALTER PROCEDURE UPDTEMPLASTDOCTPRICE (OBEKTID INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
LASTDOCTPRICE DCURR)
AS 
 ^

ALTER PROCEDURE UPDTEMPOUTPRODSDRSERIALNUMBER (ID INTEGER,
SERIALNUMBER VARCHAR(40) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDTYPENOMINAL (ID INTEGER,
OBEKTID INTEGER,
CURRENCYTYPESID INTEGER,
NOMINALLABEL VARCHAR(10) CHARACTER SET WIN1251,
NOMINALVALUE DCURR,
"LOG" CHAR(1) CHARACTER SET WIN1251)
AS 
 ^

ALTER PROCEDURE UPDWEIGHTSCALES (OBEKTID INTEGER,
OLDSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
NEWSCALENAME VARCHAR(20) CHARACTER SET WIN1251,
NEWSCALETYPE SMALLINT,
NEWPORTNO INTEGER)
AS 
 ^

ALTER PROCEDURE UPOUTPRODSDRLASTDOCTPRICEWOTAX (OBEKTID INTEGER,
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME,
DTOUTPROD TIMESTAMP,
LASTDOCTPRICEWOTAX DCURR)
AS 
 ^

ALTER PROCEDURE VLOJENOSTARTCANEDIT (OBEKTID INTEGER,
TYPEDB SMALLINT,
DOCTNOMER INTEGER,
CKLADID NUMERIC(18, 0),
ARTNOMER INTEGER,
ARTIKUL D_ARTIKULNAME)
RETURNS (CHRCANEDIT CHAR(1) CHARACTER SET WIN1251)
AS 
 ^
SET TERM ; ^
COMMIT WORK ;
SET AUTODDL ON;
SET TERM ^ ;

/* Triggers only will work for SQL triggers */
CREATE TRIGGER T_DBCHECK 
ACTIVE ON CONNECT POSITION 0 
 ^

CREATE TRIGGER ADDRESSTYPEAFTERUPDATE FOR ADDRESSTYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER ADDRESSTYPEAFTERDEL FOR ADDRESSTYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER AREAINFOAFTERUPDATE FOR AREAINFO 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER AREAINFOAFTERDEL FOR AREAINFO 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER AREATYPEAFTERUPDATE FOR AREATYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER AREATYPEAFTERDELETE FOR AREATYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER BARCODEAFTERINSERT FOR BARCODE 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER EDITBARCODE FOR BARCODE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER BARCODEAFTERDELETE FOR BARCODE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER BARCODEREPORTAFTERUPDATE FOR BARCODEREPORT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER BARCODEREPORTAFTERDELETE FOR BARCODEREPORT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER BONUSPOINTMATERIALAFTERUPDATE FOR BONUSPOINTMATERIAL 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER BONUSPOINTMATERIALAFTERDEL FOR BONUSPOINTMATERIAL 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER BONUSPOINTTURNOVERAFTERUPDATE FOR BONUSPOINTTURNOVER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER BONUSPOINTTURNOVERAFTERDEL FOR BONUSPOINTTURNOVER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER CATEGORYAFTERUPDATE FOR CATEGORY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELFROMCATEGORY FOR CATEGORY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER CATEGORYNAMEAFTERUPDATE FOR CATEGORYNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER CATEGORYNAMEAFTERDEL FOR CATEGORYNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER COUNTRYAFTERUPDATE FOR COUNTRY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER COUNTRYAFTERDEL FOR COUNTRY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER CURRENCYAFTERUPDATE FOR CURRENCY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER CURRENCYAFTERDEL FOR CURRENCY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER DBVERSIONDETAILBEFOREUPDATE FOR DBVERSIONDETAIL 
ACTIVE BEFORE UPDATE POSITION 0 
 ^

CREATE TRIGGER DBVERSIONDETAILBEFOREDEL FOR DBVERSIONDETAIL 
ACTIVE BEFORE DELETE POSITION 0 
 ^

CREATE TRIGGER DELIVERYTYPENAMEAFTERUPDATE FOR DELIVERYTYPENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELIVERYTYPENAMEAFTERDEL FOR DELIVERYTYPENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER DOCUMENTTYPEAFTERUPDATE FOR DOCUMENTTYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DOCUMENTTYPEAFTERDELETE FOR DOCUMENTTYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER DOCUMENTTYPENAMEAFTERUPDATE FOR DOCUMENTTYPENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DOCUMENTTYPENAMEAFTERDEL FOR DOCUMENTTYPENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER EARNESTAFTERUPDATE FOR EARNEST 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER EARNESTAFTERDEL FOR EARNEST 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER FISCALDEVICEAFTERUPDATE FOR FISCALDEVICE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER FISCALDEVICEAFTERDELETE FOR FISCALDEVICE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER FISCALDEVICENAMEAFTERUPD FOR FISCALDEVICENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER FISCALDEVICENAMEAFTERDEL FOR FISCALDEVICENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER HAPPYHOURAFTERUPDATE FOR HAPPYHOUR 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER HAPPYHOURAFTERDEL FOR HAPPYHOUR 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER INCOMINGORDERAFTERUPDATE FOR INCOMINGORDER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER INCOMINGORDERAFTERDELETE FOR INCOMINGORDER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER INVENTORYAFTERUPDATE FOR INVENTORY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELINVENTORY FOR INVENTORY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER INVOICEAFTERUPDATE FOR INVOICE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELINVOICE FOR INVOICE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER LOCATIONAFTERUPDATE FOR LOCATION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER LOCATIONAFTERDEL FOR LOCATION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER LOCATIONNAMEAFTERUPDATE FOR LOCATIONNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER LOCATIONNAMEAFTERDEL FOR LOCATIONNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MAKESALDOSKLADBEFINSERT FOR MATERIAL 
ACTIVE BEFORE INSERT POSITION 0 
 ^

CREATE TRIGGER LOGMATERIALAFTERINSERT FOR MATERIAL 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER MATERIALAFTERINSERT FOR MATERIAL 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER MAKESALDOSKLADBEFUPDATE FOR MATERIAL 
ACTIVE BEFORE UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALBEFOREUPDATE FOR MATERIAL 
ACTIVE BEFORE UPDATE POSITION 0 
 ^

CREATE TRIGGER EDITARTINMATERIAL FOR MATERIAL 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER LOGMATERIALAFTERUPDATE FOR MATERIAL 
ACTIVE AFTER UPDATE POSITION 1 
 ^

CREATE TRIGGER MAKESALDOSKLADBEFDELETE FOR MATERIAL 
ACTIVE BEFORE DELETE POSITION 0 
 ^

CREATE TRIGGER DELARTOTMATERIAL FOR MATERIAL 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER LOGMATERIALAFTERDELETE FOR MATERIAL 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALALTERNATIVENAMEAFTERUPD FOR MATERIALALTERNATIVENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALALTERNATIVENAMEAFTERDEL FOR MATERIALALTERNATIVENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE1AFTERUPDATE FOR MATERIALATTRIBUTE1 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE1AFTERDEL FOR MATERIALATTRIBUTE1 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE1NAMEAFTERUPD FOR MATERIALATTRIBUTE1NAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE1NAMEAFTERDEL FOR MATERIALATTRIBUTE1NAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE2AFTERUPDATE FOR MATERIALATTRIBUTE2 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE2AFTERDEL FOR MATERIALATTRIBUTE2 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE2NAMEAFTERUPD FOR MATERIALATTRIBUTE2NAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE2NAMEAFTERDEL FOR MATERIALATTRIBUTE2NAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE3AFTERUPDATE FOR MATERIALATTRIBUTE3 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE3AFTERDEL FOR MATERIALATTRIBUTE3 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE3NAMEAFTERUPD FOR MATERIALATTRIBUTE3NAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE3NAMEAFTERDEL FOR MATERIALATTRIBUTE3NAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE4AFTERUPDATE FOR MATERIALATTRIBUTE4 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE4AFTERDEL FOR MATERIALATTRIBUTE4 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE4NAMEAFTERUPD FOR MATERIALATTRIBUTE4NAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE4NAMEAFTERDEL FOR MATERIALATTRIBUTE4NAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE5AFTERUPDATE FOR MATERIALATTRIBUTE5 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE5AFTERDEL FOR MATERIALATTRIBUTE5 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE5NAMEAFTERUPD FOR MATERIALATTRIBUTE5NAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTE5NAMEAFTERDEL FOR MATERIALATTRIBUTE5NAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALATTRIBUTEALIASAFTERDEL FOR MATERIALATTRIBUTEALIAS 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALCONTEINAFTERUPDATE FOR MATERIALCONTENT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALNAMEAFTERUPDATE FOR MATERIALNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALNAMEAFTERDEL FOR MATERIALNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALRESERVATIONAFTERINSERT FOR MATERIALRESERVATION 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER MATERIALRESERVATIONAFTERUPDATE FOR MATERIALRESERVATION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALRESERVATIONAFTERDEL FOR MATERIALRESERVATION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER INSERTINTOMATERIALSALEINFO FOR MATERIALSALEINFO 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER TEDITARTINMATERIALSALEINFO FOR MATERIALSALEINFO 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELOTMATERIALSALEINFO FOR MATERIALSALEINFO 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALTYPEAFTERUPDATE FOR MATERIALTYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALTYPEAFTERDEL FOR MATERIALTYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MATERIALTYPENAMEAFTERUPDATE FOR MATERIALTYPENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MATERIALTYPENAMEAFTERDEL FOR MATERIALTYPENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MODIFIERAFTERUPDATE FOR MODIFIER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MODIFIERAFTERDEL FOR MODIFIER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER ODERNOTENOTESAFTERUPDATE FOR MODIFIERLOG 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MODIFIERLOGAFTERDELETE FOR MODIFIERLOG 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MONEYFLOWUNITAFTERUPDATE FOR MONEYFLOWUNIT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MONEYFLOWUNITAFTERDELETE FOR MONEYFLOWUNIT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MONEYFLOWUNITNAMEAFTERUPDATE FOR MONEYFLOWUNITNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MONEYFLOWUNITNAMEAFTERDEL FOR MONEYFLOWUNITNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER MYCOMPANYAFTERUPDATE FOR MYCOMPANY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER MYCOMPANYAFTERDELETE FOR MYCOMPANY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER OPERATIONSAFTERUPDATE FOR OPERATIONS 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER OPERATIONSDEL FOR OPERATIONS 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER ORDER_TAFTERUPDATE FOR ORDER_T 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER ORDER_TAFTERDEL FOR ORDER_T 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERAFTERUPDATE FOR PARTNER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERAFTERDEL FOR PARTNER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTAFTERUPDATE FOR PARTNERCONTACT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTAFTERDEL FOR PARTNERCONTACT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTNAMEAFTERUPDATE FOR PARTNERCONTACTNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTNAMEAFTERDEL FOR PARTNERCONTACTNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTPERSONALIDAUPD FOR PARTNERCONTACTPERSONALID 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERCONTACTPERSONALIDADEL FOR PARTNERCONTACTPERSONALID 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERLOCATIONAFTERUPDATE FOR PARTNERLOCATION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERLOCATIONAFTERDEL FOR PARTNERLOCATION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERLOCATIONNAMEAFTERUPDATE FOR PARTNERLOCATIONNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERLOCATIONNAMEAFTERDEL FOR PARTNERLOCATIONNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERNAMEAFTERUPDATE FOR PARTNERNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERNAMEAFTERDEL FOR PARTNERNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERNOTEAFTERUPDATE FOR PARTNERNOTE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERNOTEAFTERDEL FOR PARTNERNOTE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERSHORTNAMEAFTERUPDATE FOR PARTNERSHORTNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERSHORTNAMEAFTERDELETE FOR PARTNERSHORTNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERTAXNUMAFTERUPDATE FOR PARTNERTAXNUM 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERTAXNUMAFTERDEL FOR PARTNERTAXNUM 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERTYPEAFTERUPDATE FOR PARTNERTYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERTYPEAFTERDEL FOR PARTNERTYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PARTNERTYPENAMEAFTERUPDATE FOR PARTNERTYPENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PARTNERTYPENAMEAFTERDEL FOR PARTNERTYPENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PHONEORDERTEMPAFTERUPDATE FOR PHONEORDERTEMP 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PHONEORDERTEMPAFTERDEL FOR PHONEORDERTEMP 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRICELISTAFTERINSERT FOR PRICELIST 
ACTIVE AFTER INSERT POSITION 0 
 ^

CREATE TRIGGER EDITPRICELIST FOR PRICELIST 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRICELISTAFTERDELETE FOR PRICELIST 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRICELISTNAMEAFTERUPDATE FOR PRICELISTNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELPRICELISTNAME FOR PRICELISTNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRICELISTREPORTINGNAMEAFTERUPD FOR PRICELISTREPORTINGNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRICELISTREPORTINGNAMEAFTERDEL FOR PRICELISTREPORTINGNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRICINGPOLICYAFTERUPD FOR PRICINGPOLICY 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRICINGPOLICYAFTERDEL FOR PRICINGPOLICY 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRINTERAFTERUPDATE FOR PRINTER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELPRINTERID FOR PRINTER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRINTERNAMEAFTERUPDATE FOR PRINTERNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRINTERNAMEAFTERDEL FOR PRINTERNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRODUCERINFOAFTERUPDATE FOR PRODUCERINFO 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRODUCERINFOAFTERDEL FOR PRODUCERINFO 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRODUCERNAMEAFTERUPDATE FOR PRODUCERNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER PRODUCERNAMEAFTERDEL FOR PRODUCERNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER PRODUCTIONREQUESTAFTERDEL FOR PRODUCTIONREQUEST 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER REPORTAFTERUPDATE FOR REPORT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER REPORTAFTERDEL FOR REPORT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER REQUESTAFTERUPDATE FOR REQUEST 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELREQUEST FOR REQUEST 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER ROWNOTEAFTERUPDATE FOR ROWNOTE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER ROWNOTEAFTERDEL FOR ROWNOTE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER EDITSALE FOR SALE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELSALE FOR SALE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SALEEDITAFTERUPDATE FOR SALEEDIT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SALEEDITAFTERDEL FOR SALEEDIT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SALETEMPAFTERUPDATE FOR SALETEMP 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SALETEMPAFTERDELETE FOR SALETEMP 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER EDITSCALENAME FOR SCALENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELSCALENAME FOR SCALENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SERIALNUMVALUEAFTERUPDATE FOR SERIALNUMVALUE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SERIALNUMVALUEAFTERDEL FOR SERIALNUMVALUE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SERVICEDEVICETYPEAFTERUPDATE FOR SERVICEDEVICETYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SERVICEDEVICETYPEAFTERDEL FOR SERVICEDEVICETYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SERVINGPLACEAFTERUPDATE FOR SERVINGPLACE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SERVINGPLACEAFTERDELETE FOR SERVINGPLACE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SETTINGALIASAFTERUPDATE FOR SETTINGALIAS 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SETTINGALIASAFERDEL FOR SETTINGALIAS 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SETTINGSAFTERDEL FOR SETTINGS 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SPECIFICATIONNAMEAFTERUPDATE FOR SPECIFICATIONNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SPECIFICATIONNAMEAFTERDEL FOR SPECIFICATIONNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER STAFFCONSUMPTIONAFTERUPD FOR STAFFCONSUMPTION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DELSTAFFCONSUMPTION FOR STAFFCONSUMPTION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER STORAGEAFTERUPDATE FOR STORAGE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER STORAGEAFTERDEL FOR STORAGE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER STORAGECONDITIONAFTERUPDATE FOR STORAGECONDITION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER STORAGECONDITIONAFTERDEL FOR STORAGECONDITION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER STORAGECONDITIONNAMEAFTERUPD FOR STORAGECONDITIONNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER STORAGECONDITIONNAMEAFTERDEL FOR STORAGECONDITIONNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER STORAGENAMEAFTERUPDATE FOR STORAGENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER DEL_CKLADID FOR STORAGENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SYNCHRONIZATIONLOGAFTERUPDATE FOR SYNCHRONIZATIONLOG 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER SYNCHRONIZATIONLOGAFTERDELETE FOR SYNCHRONIZATIONLOG 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER SYSLOGBEFOREUPDATE FOR SYSLOG 
ACTIVE BEFORE UPDATE POSITION 0 
 ^

CREATE TRIGGER SYSLOGAFTERDELETE FOR SYSLOG 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TAXGROUPAFTERUPDATE FOR TAXGROUP 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TAXGROUPAFTERDELETE FOR TAXGROUP 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TEMPOPERATIONAFTERUPDATE FOR TEMPOPERATION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TEMPOPERATIONAFTERDEL FOR TEMPOPERATION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TEMPREQUESTAFTERUPDATE FOR TEMPREQUEST 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TEMPREQUESTAFTERDELETE FOR TEMPREQUEST 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TRANSPORTTYPEAFTERUPDATE FOR TRANSPORTTYPE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TRANSPORTTYPEAFTERDEL FOR TRANSPORTTYPE 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TRANSPORTTYPENAMEAFTERUPD FOR TRANSPORTTYPENAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TRANSPORTTYPENAMEAFTERDEL FOR TRANSPORTTYPENAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER TURNOVERDISCOUNTAFTERUPDATE FOR TURNOVERDISCOUNT 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER TURNOVERDISCOUNTAFTERDELETE FOR TURNOVERDISCOUNT 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER UOMAFTERUPDATE FOR UOM 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER UOMAFTERDELETE FOR UOM 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER UOMNAMEAFTERUPDATE FOR UOMNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER UOMNAMEAFTERDEL FOR UOMNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER USERNAMEAFTERUPDATE FOR USERNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER USERNAMEAFTERDEL FOR USERNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER USERPOSITIONNAMEAFTERUPDATE FOR USERPOSITIONNAME 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER USERPOSITIONNAMEAFTERDEL FOR USERPOSITIONNAME 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER USERSAFTERUPDATE FOR USERS 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER USERSAFTERDELETE FOR USERS 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER VATNUMAFTERUPDATE FOR VATNUM 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER VATNUMAFTERDEL FOR VATNUM 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER VOLUMEPROMOTIONAFTERUPDATE FOR VOLUMEPROMOTION 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER VOLUMEPROMOTIONAFTERDEL FOR VOLUMEPROMOTION 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER WEBORDERAFTERUPDATE FOR WEBORDER 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER WEBORDERAFTERDEL FOR WEBORDER 
ACTIVE AFTER DELETE POSITION 0 
 ^

CREATE TRIGGER WEIGHTSCALEAFTERUPDATE FOR WEIGHTSCALE 
ACTIVE AFTER UPDATE POSITION 0 
 ^

CREATE TRIGGER WEIGHTSCALEAFTERDEL FOR WEIGHTSCALE 
ACTIVE AFTER DELETE POSITION 0 
 ^

COMMIT WORK ^
SET TERM ; ^
